<?xml version="1.0" encoding="UTF-8"?>
    <bpws:process xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:soae-ab="urn:com.intel.ssg.cbr.ide.actionbuilder" xmlns:saml10="urn:oasis:names:tc:SAML:1.0:assertion" xmlns:saml20p="urn:oasis:names:tc:SAML:2.0:protocol" xmlns:saml20-soae="http://www.intel.com/soae/localService/saml20-2010a/" xmlns:saml20="urn:oasis:names:tc:SAML:2.0:assertion" xmlns:saml10p="urn:oasis:names:tc:SAML:1.0:protocol" xmlns:saml1x-soae="http://www.intel.com/soae/localService/saml1x-2010a/" xmlns:wsax="http://www.intel.com/soae/ws-addressing/addressing-2008a/" xmlns:icap="http://www.intel.com/soae/localService/icap-2010a/" xmlns:kerberos="http://www.intel.com/soae/localService/kerberosKDC-2009a/" xmlns:aaa="http://www.intel.com/soae/localService/aaaDefinition-2007a/" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:exslt="http://exslt.org/dates-and-times" xmlns:exslt-common="http://exslt.org/common" xmlns:hl7-xf="http://www.intel.com/soae/hl7/" xmlns:http-fault="http://www.intel.com/soae/bpelHttpFault-2012a" xmlns:ldap="http://www.intel.com/soae/localService/ldap-2007a/" xmlns:md="http://www.intel.com/soae/protocolMetadata-2007a.xsd" xmlns:mismoext="http://www.radian.biz/MISMOVer3Extension" xmlns:ns="http://www.example.com/Origination/http/bin/OriginationProcess/Receive" xmlns:ns1="http://www.radian.biz/ClientConnectivity/zion/LoadConfig" xmlns:ns10="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke" xmlns:ns100="http://www.example.com/Origination/http/bin/OriginationProcess/WriteVendorIDMisMismatch" xmlns:ns1001="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/RecieveFailureErrorLog_NotifyFailure" xmlns:ns10011="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocumentsProcess/UploadEachZipToS3" xmlns:ns1002="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Receive" xmlns:ns10021="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/ArchivetoESGFolderFailed_NotifyFailure" xmlns:ns101="http://www.example.com/Origination/file/bin/OriginationProcess/WriteVendorIDMisMismatch" xmlns:ns1010="http://www.example.com/OriginationService/sftp/bin/OriginationServiceSecureProcess/ArchiveSOAP11Request" xmlns:ns1011="http://www.example.com/EDI872/sftp/bin/EDIOriginationProcess/Write997File" xmlns:ns1012="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/Invoke" xmlns:ns102="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResponseAtGFHFailure" xmlns:ns1021="http://www.example.com/TestLoadXSL/http/bin/OriginationServiceProcess/InvokeOriginationProcess" xmlns:ns10211="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/ArchiveResponseFailed_NotifyFailure" xmlns:ns1022="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/RetrieveXCM" xmlns:ns103="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResponseAtGFHFailure" xmlns:ns1031="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/WriteAlarmPointErrorLog_NotifyFailure" xmlns:ns1032="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocumentsProcess/RetrieveXCM" xmlns:ns104="http://www.example.com/Origination/file/bin/OriginationProcess/WriteResponseAtGFHFailure" xmlns:ns1041="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/OnReplyFailureGFH_NotifyFailure" xmlns:ns1042="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke1" xmlns:ns105="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogACKNACKoadfailGFH" xmlns:ns1051="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure" xmlns:ns1052="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/InvokeDownstreamSystem" xmlns:ns106="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogACKNACKoadfailGFH" xmlns:ns1061="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/RequestArchivalFailed_NotifyFailure" xmlns:ns1062="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/InvokePASDownstreamSystem" xmlns:ns107="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrorLogACKNACKoadfailGFH" xmlns:ns1071="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/ArchiveRequestToESGFolderFailed_NotifyFailure" xmlns:ns1072="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteInvokeDownstreamSystemFailedXCMFileToEncryptedLocation" xmlns:ns108="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogACKNACKSchemaFail" xmlns:ns1081="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/ResponseArchivalFailued_NotifyFailure" xmlns:ns1082="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/WriteInvokeDownstreamSystemFailedXCMFileToEncryptedLocation" xmlns:ns109="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogACKNACKSchemaFail" xmlns:ns1091="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/ArchiveSOAP11Request" xmlns:ns1092="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteDownstreamSystemInvocationFailedXCMToEncryptedLocationFailedAlarmPoint" xmlns:ns11="http://www.example.com/Origination/http/bin/OriginationProcess/WriteLenderExceptionResultToQAArchive" xmlns:ns110="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrorLogACKNACKSchemaFail" xmlns:ns1100="http://www.radian.biz/ClientConnectivity/zion/http/OriginationService" xmlns:ns1101="http://www.example.com/EDI872/sftp/bin/EDIOriginationProcess/Receive" xmlns:ns11011="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/WriteDownstreamSystemInvocationFailedXCMToEncryptedLocationFailedAlarmPoint" xmlns:ns1102="http://www.radian.biz/ClientConnectivity/zion/http/OriginationRequestWSDL" xmlns:ns1103="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocuments/Receive" xmlns:ns1104="http://www.example.com/Test/http/bin/Process/Invoke" xmlns:ns111="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKLoadFailure" xmlns:ns1110="http://www.example.com/OriginationService/http/bin/OriginationServiceSecureProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns1111="http://www.informatica.com/B2B/X12" xmlns:ns1112="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteAlarmpointInvokeDonwstreamSystemFailedAlarmPoint" xmlns:ns112="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKLoadFailure" xmlns:ns1121="http://www.example.com/OriginationService/http/bin/OriginationServiceProcess/InvokeOriginationProcess" xmlns:ns1122="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/WriteAlarmpointInvokeDonwstreamSystemFailedAlarmPoint" xmlns:ns113="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKLoadFailure" xmlns:ns1131="http://www.example.com/Origination/sftp/bin/OriginationServiceSecureProcess/ArchiveRequestToArchiveComponent" xmlns:ns11311="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/RecieveFailureErrorLog_NotifyFailure" xmlns:ns1132="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/ExtractManifestFileFromZip" xmlns:ns114="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKSchemaFailure" xmlns:ns1141="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/ArchiveRequestToArchiveComponent" xmlns:ns11411="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/WriteAlarmPoint_NotifyFailure" xmlns:ns1142="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateTouchpoint_ZIONLocal" xmlns:ns115="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKSchemaFailure" xmlns:ns1151="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/ArchiveResponseToSFTP" xmlns:ns11511="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/ReplyFailureGFH_NotifyFailure" xmlns:ns1152="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateTouchpoint_ZIONLocal" xmlns:ns116="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKSchemaFailure" xmlns:ns1161="http://www.example.com/Origination/sftp/bin/OriginationServiceSecureProcess/GFHArchiveResponse" xmlns:ns1162="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_ZIONLocal" xmlns:ns117="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKRemoveNSFailure" xmlns:ns1171="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/GFHArchiveResponse" xmlns:ns1172="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateCase_ZIONLocal" xmlns:ns118="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKRemoveNSFailure" xmlns:ns1181="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocumentsProcess/CreateCase_ZIONLocal" xmlns:ns119="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrLogVendorSpecificACKNACKRemoveNSFailure" xmlns:ns1191="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_ZIPArchiveFailed_ZIONLocal" xmlns:ns12="http://www.example.com/Origination/http/bin/OriginationProcess/WriteLenderExceptionResultToQAArchive" xmlns:ns120="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErroLogRemoveNSFailureGFH" xmlns:ns1201="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCase_ZIPArchiveFailed_ZIONLocal" xmlns:ns121="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErroLogRemoveNSFailureGFH" xmlns:ns1210="http://www.example.com/OriginationService/file/bin/OriginationServiceSecureProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns12101="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/ExtractManifestFileFromZip" xmlns:ns1211="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteInterchangeFile" xmlns:ns1212="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_UploadToS3AndInvokeDonwstreamSystemFailed_ZIONLocal" xmlns:ns122="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErroLogRemoveNSFailureGFH" xmlns:ns1221="http://www.example.com/OriginationService1/http/bin/OriginationServiceProcess/InvokeOriginationProcess" xmlns:ns1222="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateCase_UploadToS3AndInvokeDonwstreamSystemFailed_ZIONLocal" xmlns:ns123="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest" xmlns:ns1231="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteAlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns1232="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.APP_MORTGAGE_INSURANCE_APPLICATION_REQUEST_v3_2_1" xmlns:ns124="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_REQUEST_v2_3_1" xmlns:ns1241="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/WriteAlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns125="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteTransformMISMO3XToQAArchive" xmlns:ns1251="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCaseFailure_WriteRemoveTempFilesFailed_ZIONLocal" xmlns:ns126="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1" xmlns:ns1261="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/llCreateSFDCCaseFailure_WriteRemoveTempFilesFailed_ZIONLocal" xmlns:ns127="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRemoveEmptyElementsFailure" xmlns:ns1271="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCaseFailure_WriteRemoveTempFilesFailed_ZIONLocal" xmlns:ns128="http://www.example.com/Origination/file/bin/OriginationProcess/WriteRemoveEmptyElementsFailure" xmlns:ns1281="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCaseFailure_ReceiveFailureErrorLog_ZIONLocal" xmlns:ns129="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRemoveNSFailure" xmlns:ns1291="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCaseFailure_ReceiveFailureErrorLog_ZIONLocal" xmlns:ns13="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteLenderExceptionResultToQAArchive" xmlns:ns130="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRemoveNSFailure" xmlns:ns1301="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCaseSuccess_CreateActivityNodeFailed_ZIONLocal" xmlns:ns131="http://www.example.com/Origination/http/bin/OriginationProcess/WriteGenerateNACKFailureGFH" xmlns:ns1311="http://www.example.com/EDI872/sftp/bin/EDIOriginationProcess/WriteInterchangeFile" xmlns:ns1312="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCaseSuccess_CreateActivityNodeFailed_ZIONLocal" xmlns:ns132="http://www.example.com/Origination/http/bin/OriginationProcess/WriteGenerateNACKFailureGFH" xmlns:ns1321="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCase_FailedRecordXML_ZIONLocal" xmlns:ns133="http://www.example.com/Origination/file/bin/OriginationProcess/WriteGenerateNACKFailureGFH" xmlns:ns1331="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_FailedRecordXML_ZIONLocal" xmlns:ns134="http://www.example.com/Origination/file/bin/OriginationProcess/WriteRemoveNSFailure" xmlns:ns1341="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCaseSuccess_RemoveTempFolderFilesFail" xmlns:ns135="http://www.example.com/Origination/http/bin/OriginationProcess/WriteGenerateNACKSchemaFailure" xmlns:ns1351="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_RemoveTempFolderFilesFail_ZIONLocal" xmlns:ns136="http://www.example.com/Origination/http/bin/OriginationProcess/WriteGenerateNACKSchemaFailure" xmlns:ns1361="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCase_RemoveTempFolderFilesFail_ZIONLocal" xmlns:ns137="http://www.example.com/Origination/file/bin/OriginationProcess/WriteGenerateNACKSchemaFailure" xmlns:ns1371="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteFailedRecordXMLToSFTPFailed" xmlns:ns138="http://www.radian.biz/ClientConnectivity/zion/ComputeSHADigest" xmlns:ns1381="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_WriteFailedRecordXMLToSFTPFailed_ZIONLocal" xmlns:ns139="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRemoveEmptyElementsfromTransformationFailure" xmlns:ns1391="http://www.example.com/OriginationDocuments/file/bin/OriginationDocumentsProcess/CreateSFDCCase_WriteFailedRecordXMLToSFTPFailed_ZIONLocal" xmlns:ns14="http://www.radian.biz/ClientConnectivity/zion/AuthenticationResponse" xmlns:ns140="http://www.example.com/Origination/http/bin/OriginationProcess/ComputeSHA512OfRequestCredentials" xmlns:ns1401="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_WriteFailedRecordXMLToSFTPFailed" xmlns:ns141="http://www.example.com/Origination/http/bin/OriginationProcess/ComputeSHA512ofRequestCredentials" xmlns:ns1410="http://www.example.com/OriginationService/http/bin/OriginationServiceSecureProcess/WriteAlertLog" xmlns:ns1411="http://www.radian.biz/ClientConnectivity/Xion/Origination/AppConfig" xmlns:ns1412="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_FailedRecordXML" xmlns:ns142="http://www.example.com/Origination/http/bin/OriginationProcess/ComputeSHAfRequestCredentials" xmlns:ns1421="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_RemoveTempFolderFilesFail" xmlns:ns143="http://www.example.com/Origination/http/bin/OriginationProcess/ComputeSHAofRequestCredentials" xmlns:ns1431="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_ReceiveFailureErrorLog" xmlns:ns144="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRemoveEmptyElementsfromTransformationFailure" xmlns:ns1441="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_CreateActivityNodeFailed" xmlns:ns145="http://www.example.com/Origination/file/bin/OriginationProcess/WriteRemoveEmptyElementsfromTransformationFailure" xmlns:ns1451="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_WriteRemoveTempFilesFailed" xmlns:ns146="http://Radian.Services.Schemas" xmlns:ns1461="m" xmlns:ns147="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteTransformTransformedToQAArchive" xmlns:ns1471="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateSFDCCase_ZIPArchiveFailed" xmlns:ns148="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteTransformedResponseToQAArchive" xmlns:ns1481="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_S3Failure" xmlns:ns149="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteDownstreamRequestToQArchive" xmlns:ns1491="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_UploadToS3AndInvokeDonwstreamSystemFailed" xmlns:ns15="http://Radian.Matrix.MortgageIns.Origination.MDC.PublishTPProfileData" xmlns:ns150="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteDownstreamResponseToQAArchive" xmlns:ns1501="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteAlarmPointLog_CreateSFDCCase" xmlns:ns151="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeWSCall" xmlns:ns1510="http://www.example.com/OriginationService/file/bin/OriginationServiceSecureProcess/WriteAlertLog" xmlns:ns1511="http://www.example.com/OriginationService/http/bin/OriginationServiceProcess/Invoke1" xmlns:ns1512="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/UpdateZipFile" xmlns:ns152="http://Radian.Matrix.MortgageIns.Origination.RateQuote" xmlns:ns1521="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/UploadToS3AndInvokeDonwstreamSystemFailed_CreateCase" xmlns:ns153="http://www.example.com/Origination/bpel/OriginationAsynchronousPostBackProcessArtifacts" xmlns:ns1531="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateCase_WriteAlarmPointLog" xmlns:ns1532="http://www.example.com/Origination/bpel/OriginationProcessArtifacts" xmlns:ns154="http://www.example.com/Origination/http/bin/OriginationProcess/WriteDownstreamRequesttoSFTP" xmlns:ns1541="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteRemoveTempFilesFailed_NotifyFailure" xmlns:ns155="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteDownstreamRequesttoSFTP" xmlns:ns1551="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/ZIPArchiveFailed_NotifyFailure" xmlns:ns156="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponseXML" xmlns:ns1561="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/S3Failure_NotifyFailure" xmlns:ns157="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponseXML" xmlns:ns1571="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/UploadToS3AndInvokeDonwstreamSystemFailed_NotifyFailure" xmlns:ns158="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteACKNACKResponseXML" xmlns:ns1581="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteAlarmPointLog_NotifyFailure" xmlns:ns159="http://www.example.com/Origination/http/bin/OriginationProcess/WriteCanonicalRequestRemoveEmptyElementsFailure" xmlns:ns1591="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateActivityNodeFailed_NotifyFailure" xmlns:ns16="http://www.example.com/Origination/http/bin/OriginationProcess/WritePreProcessXformQAArchive" xmlns:ns160="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrLogACKNACKResponseFailure" xmlns:ns1601="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteFailedRecordXMLToSFTPFailed_NotifyFailure" xmlns:ns161="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrLogACKNACKResponseFailure" xmlns:ns1610="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns1611="http://www.example.com/OriginationService/http/bin/OriginationServiceProcess/ArchiveRequest" xmlns:ns16111="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/FailedRecordXML_NotifyFailure" xmlns:ns1612="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/UpdateZipFile" xmlns:ns162="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrLogArchiveACKNACKResponseFailure" xmlns:ns1621="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/RemoveTempFolderFilesFail_NotifyFailure" xmlns:ns163="http://www.example.com/Origination/http/bin/OriginationProcess/WriteCanonicalRequestRemoveEmptyElementsFailure" xmlns:ns1631="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/ReceiveFailureErrorLog_NotifyFailure" xmlns:ns164="http://www.example.com/Origination/file/bin/OriginationProcess/WriteCanonicalRequestRemoveEmptyElementsFailure" xmlns:ns1641="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/ZIPArchiveFailed_InvokeNotifyFailure" xmlns:ns165="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTransformedMIResponseToQAArchive" xmlns:ns1651="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteDownstreamSystemInvocationFailedXCMToEncryptedLocationFailed_InvokeNotifyFailure" xmlns:ns166="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTransformedMIResponseToQAArchive" xmlns:ns1661="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteAlarmPointLog_InvokeFailureNotificationComponent" xmlns:ns167="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteTransformedMIResponseToQAArchive" xmlns:ns1671="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/TAInvokeNotifyFailureComponent_RemoveTempFolderFilesFail" xmlns:ns168="http://www.example.com/Origination/http/bin/OriginationProcess/WritePostProcessedResponseTransformToQAArchive" xmlns:ns1681="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/CreateActivityNodeFailed_InvokeNotifyFailure" xmlns:ns169="http://www.example.com/Origination/http/bin/OriginationProcess/WritePostProcessedResponseTransformToQAArchive" xmlns:ns1691="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/ReceiveFailureErrorLog_InvokeNotifyFailure" xmlns:ns17="http://www.example.com/Origination/http/bin/OriginationProcess/WritePreProcessXformQAArchive" xmlns:ns170="http://www.example.com/Origination/sftp/bin/OriginationProcess/WritePostProcessedResponseTransformToQAArchive" xmlns:ns1701="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/WriteRemoveTempFilesFailed_InvokeNotifyFailure" xmlns:ns171="http://www.example.com/Origination/http/bin/OriginationProcess/WriteModifiedResponsetoArchive" xmlns:ns1710="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/InvokeOriginationProcess" xmlns:ns1711="http://www.radian.biz/ClientConnectivity/zion/Origination/OnBoardingConfig" xmlns:ns17111="http://www.example.com/OriginationDocuments/http/bin/OriginationDocumentsProcess/UploadToS3AndInvokeDonwstreamSystemFailed_InvokeNotifyFailure" xmlns:ns1712="http://www.example.com/OriginationService/sftp/bin/OriginationServiceProcess/ArchiveRequest" xmlns:ns1713="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke2" xmlns:ns172="http://www.example.com/Origination/http/bin/OriginationProcess/WriteModifiedResponsetoArchive" xmlns:ns1721="http://www.example.com/Origination/http/bin/EDIOriginationProcess/InvokeCreateEventComponent_RequestRecieveSuccess" xmlns:ns173="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteModifiedResponsetoArchive" xmlns:ns174="http://www.example.com/Origination/http/bin/OriginationProcess/WriteModifiedResoponseToArchiveFailureLog" xmlns:ns1741="http://www.example.com/Origination/http/bin/EDIOriginationProcess/DecryptAppConfig" xmlns:ns175="http://www.example.com/Origination/http/bin/OriginationProcess/WriteModifiedResoponseToArchiveFailureLog" xmlns:ns176="http://www.example.com/Origination/file/bin/OriginationProcess/WriteModifiedResoponseToArchiveFailureLog" xmlns:ns177="http://www.example.com/Origination/http/bin/OriginationProcess/Invoke" xmlns:ns178="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorOnResponseContainsErrorXML" xmlns:ns179="http://www.example.com/Origination/http/bin/OriginationProcess/WriteLogOnWarninginDownstreamResponse" xmlns:ns18="http://www.example.com/Origination/sftp/bin/OriginationProcess/WritePreProcessXformQAArchive" xmlns:ns180="http://www.example.com/Origination/file/bin/OriginationProcess/WriteLogOnWarninginDownstreamResponse" xmlns:ns181="http://www.example.com/OriginationService/http/bin/OriginationAsyncPostBack/Receive" xmlns:ns1811="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/InvokeOriginationCoreWorkflow" xmlns:ns1812="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteUpdatedZipToSFTP" xmlns:ns182="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns1821="http://www.example.com/Origination/http/bin/OriginationProcess/DecryptCredentials" xmlns:ns183="http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher" xmlns:ns184="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteRequestArchivalFailure" xmlns:ns1841="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveRequestToESGFolder" xmlns:ns185="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/ArchiveInboundRequestToSFTP" xmlns:ns1851="http://www.example.com/Origination/file/bin/OriginationProcess/ArchiveRequestToESGFolder" xmlns:ns186="http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/Invoke" xmlns:ns1861="http://www.example.com/Origination/http/bin/OriginationProcess/ArchivetoESGFolderFailure" xmlns:ns187="http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/DecryptCredentials" xmlns:ns1871="http://www.example.com/Origination/file/bin/OriginationProcess/ArchivetoESGFolderFailure" xmlns:ns188="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteRemoveEmptyElementsfromTransformationFailure" xmlns:ns1881="http://www.example.com/Origination/http/bin/OriginationProcess/WruteArchiveRequestToLocalFolderFailure" xmlns:ns189="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteRemoveEmptyElementsFailure" xmlns:ns1891="http://www.example.com/Origination/http/bin/OriginationProcess/WriteArchiveRequestToLocalFolderFailure" xmlns:ns19="http://www.example.com/Origination/http/bin/OriginationProcess/WriteCanonicalRequest" xmlns:ns190="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteXformtoMISMO231QAArchive" xmlns:ns1901="http://www.example.com/Origination/file/bin/OriginationProcess/WriteArchiveRequestToLocalFolderFailure" xmlns:ns191="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteACKNACKResponseWriteFailure" xmlns:ns1910="http://www.example.com/Origination/sftp/bin/OriginationServiceSecureProcess/ArchiveSOAP11Request" xmlns:ns1911="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocuments/WriteUpdatedZipToSFTP" xmlns:ns1912="http://www.example.com/Origination/file/bin/OriginationProcess/WriteArchiveRequestToLocalESGFolder" xmlns:ns192="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteACKNACKResponse" xmlns:ns1921="http://www.example.com/OriginationService/http/bin/OriginationServiceProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns1922="http://www.example.com/Origination/http/bin/OriginationProcess/WriteArchiveRequestToSFTPFailed" xmlns:ns193="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteVendorIDMisMismatch" xmlns:ns1931="http://www.example.com/Origination/file/bin/OriginationProcess/WriteArchiveRequestToSFTPFailed" xmlns:ns194="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteCanonicalRequestRemoveEmptyElementsFailure" xmlns:ns1941="http://www.example.com/Origination/http/bin/OriginationProcess/WriteArchiveRequestToLocalESGFolderFailed" xmlns:ns195="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteCanonicalRequest" xmlns:ns1951="http://www.example.com/Origination/file/bin/OriginationProcess/WriteArchiveRequestToLocalESGFolderFailed" xmlns:ns196="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteDownstreamRequestToQArchive" xmlns:ns1961="http://www.example.com/Origination/file/bin/OriginationProcess/ArchivetoESGFolderFailed" xmlns:ns197="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteDownstreamRequesttoSFTP" xmlns:ns1971="http://www.example.com/Origination/file/bin/OriginationProcess/WriteRequestArchivalFailed" xmlns:ns198="http://www.example.com/OriginationService/http/bin/OriginationAsyncPostBack/InvokeDownstreamSystem" xmlns:ns1981="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTALogGFH" xmlns:ns199="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteDownstreamResponseToQAArchive" xmlns:ns1991="http://www.example.com/Origination/file/bin/OriginationProcess/WriteTALogGFH" xmlns:ns2="http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig" xmlns:ns20="http://www.example.com/Origination/http/bin/OriginationProcess/WriteCanonicalRequest" xmlns:ns200="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteLogOnWarninginDownstreamResponse" xmlns:ns2001="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogSyncErrorResponseSchemaFail" xmlns:ns201="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteTransformedResponseToQAArchive" xmlns:ns2010="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteAlertLog" xmlns:ns2011="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteTALogonSuccess" xmlns:ns2012="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke3" xmlns:ns2013="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrorLogSyncErrorResponseSchemaFail" xmlns:ns202="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WritePostProcessTransformToQAArchive" xmlns:ns2021="http://www.example.com/OriginationService/file/bin/OriginationServiceProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns2022="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogOnSyncErrorResponseGenerationFailure" xmlns:ns203="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteResponseToArchiveFailureAlarmLog" xmlns:ns2031="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrorLogOnSyncErrorResponseGenerationFailure" xmlns:ns204="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteResponsetoArchive" xmlns:ns2041="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogACKNACKLoadfailatGFH" xmlns:ns205="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErrLogArchiveACKNACKResponseFailure" xmlns:ns2051="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrorLogACKNACKLoadfailatGFH" xmlns:ns206="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteACKNACKResponseXML" xmlns:ns2061="http://www.example.com/Origination/http/bin/OriginationProcess/WriteErrorLogACKNACKSchemaFailatGFH" xmlns:ns207="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteTransformedMIResponseToQAArchive" xmlns:ns2071="http://www.example.com/Origination/file/bin/OriginationProcess/WriteErrorLogACKNACKSchemaFailatGFH" xmlns:ns208="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WritePostProcessedResponseTransformToQAArchive" xmlns:ns2081="http://www.example.com/Origination/http/bin/OriginationProcess/WritePostProcessTransformOutputToQAArchive" xmlns:ns209="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteModifiedResoponseToArchiveFailureLog" xmlns:ns2091="http://www.example.com/Origination/sftp/bin/OriginationProcess/WritePostProcessTransformOutputToQAArchive" xmlns:ns21="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteCanonicalRequest" xmlns:ns210="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteModifiedResponsetoArchive" xmlns:ns2100="http://www.example.com/OriginationServiceLocal/http/bin/OriginationServiceSecureProcess/Invoke" xmlns:ns2101="http://www.example.com/EDI872/cde/EDI872" xmlns:ns2102="http://www.example.com/OriginationPOCLocal/http/bin/OriginationServiceProcess/Invoke" xmlns:ns2103="http://Radian.MortgageIns.Services.Schemas" xmlns:ns2104="http://www.example.com/Test/jms/bin/Process/Receive" xmlns:ns211="http://www.example.com/OriginationService/http/bin/OriginationAsyncPostBack/InvokeLenderPostbackURL" xmlns:ns2111="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteTAlogonSuccess" xmlns:ns212="http://www.example.com/OriginationService/http/bin/OriginationAsyncPostBack/InvokeLenderPostBackBasicAuthHTTP" xmlns:ns2121="http://www.example.com/Origination/http/bin/OriginationProcess/WriteFileTouchpointToZION" xmlns:ns213="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteToPostbackToSFTPBasicAuth" xmlns:ns2131="http://www.example.com/Origination/file/bin/OriginationProcess/WriteFileTouchpointToZION" xmlns:ns214="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteAsyncTransactionTALog" xmlns:ns2141="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTouchpoint_TO_ZIONLog" xmlns:ns215="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteTALogonSuccess" xmlns:ns2151="http://www.example.com/Origination/file/bin/OriginationProcess/WriteTouchpoint_TO_ZIONLog" xmlns:ns216="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteReceiveFailure" xmlns:ns2161="http://www.example.com/Origination/file/bin/OriginationProcess/WriteUpdatedTouchpointToZIONLocal" xmlns:ns217="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteReceiveFailureTALog" xmlns:ns2171="http://www.example.com/Origination/file/bin/OriginationProcess/CreateTouchpoint_TO_ZIONLog" xmlns:ns218="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteRequestToArchiveAtGFH" xmlns:ns2181="http://www.example.com/Origination/file/bin/OriginationProcess/UpdatedTouchpointToZIONLocal" xmlns:ns219="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteRemoveNSFailure" xmlns:ns2191="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns22="http://www.example.com/Origination/http/bin/OriginationProcess/WriteXformtoMISMO231QAArchive" xmlns:ns220="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteGenerateNACKFailureGFH" xmlns:ns2201="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns221="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteGenerateNACKSchemaFailure" xmlns:ns2211="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTAlogonSuccess" xmlns:ns2212="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ResoponseArchiveFailure_ZIONLog" xmlns:ns222="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErrorLogACKNACKoadfailGFH" xmlns:ns2221="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ResoponseArchiveFailure_ZIONLog" xmlns:ns223="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErrorLogACKNACKSchemaFail" xmlns:ns2231="http://www.example.com/Origination/http/bin/OriginationProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns224="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErrLogVendorSpecificACKNACKRemoveNSFailure" xmlns:ns2241="http://www.example.com/Origination/file/bin/OriginationProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns225="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErrLogVendorSpecificACKNACKLoadFailure" xmlns:ns2251="http://www.example.com/Origination/http/bin/OriginationProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns226="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErrLogVendorSpecificACKNACKSchemaFailure" xmlns:ns2261="http://www.example.com/Origination/file/bin/OriginationProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns227="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteErroLogRemoveNSFailureGFH" xmlns:ns2271="http://www.example.com/Origination/http/bin/OriginationProcess/CreateSFDCCaseFailure_ReceiveFailureErrorLog_ZIONLocal" xmlns:ns228="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteResponseAtGFHFailure" xmlns:ns2281="http://www.example.com/Origination/file/bin/OriginationProcess/CreateSFDCCaseFailure_ReceiveFailureErrorLog_ZIONLocal" xmlns:ns229="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/WriteResponseToArchiveAtGFH" xmlns:ns2291="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns23="http://www.example.com/Origination/http/bin/OriginationProcess/WriteXformtoMISMO231QAArchive" xmlns:ns230="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteAlarmPointLog" xmlns:ns2301="http://www.example.com/Origination/file/bin/OriginationProcess/WriteAlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns231="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/GlobalFaultWriteTALogstoDisk" xmlns:ns2310="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/Invoke1" xmlns:ns2311="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/WriteTALogonSuccess" xmlns:ns2312="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke4" xmlns:ns2313="http://www.example.com/Origination/http/bin/OriginationProcess/CreateSFDCCaseFailure_OnReplyFailureGFH_ArchiveZIONLocal" xmlns:ns232="http://www.example.com/OriginationService/file/bin/OriginationAsyncPostBack/WriteAlertLogOnReplyFailureGFH" xmlns:ns2321="http://www.example.com/OriginationService/http/bin/OriginationServiceProcess/WriteAlertLog" xmlns:ns2322="http://www.example.com/Origination/file/bin/OriginationProcess/CreateSFDCCaseFailure_OnReplyFailureGFH_ArchiveZIONLocal" xmlns:ns233="http://www.example.com/OriginationService/sftp/bin/OriginationAsyncPostBack/Receive" xmlns:ns2331="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_OnWarninginDownstreamResponse_ZIONLog" xmlns:ns234="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/Receive" xmlns:ns2341="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_OnWarninginDownstreamResponse_ZIONLog" xmlns:ns235="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns2351="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ACKNACKResponseWriteFailure_ZIONLog" xmlns:ns236="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteRequestArchivalFailure" xmlns:ns2361="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ACKNACKResponseWriteFailure_ZIONLog" xmlns:ns237="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/ArchiveInboundRequestToSFTP" xmlns:ns2371="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_RemoveEmptyElementsfromTransformationFailure_ZIONLog" xmlns:ns238="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteDownstreamRequestToQArchive" xmlns:ns2381="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_RemoveEmptyElementsfromTransformationFailure_ZIONLog" xmlns:ns239="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteLogOnWarninginDownstreamResponse" xmlns:ns2391="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_VendorIDMisMismatch_ZIONLog" xmlns:ns24="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteXformtoMISMO231QAArchive" xmlns:ns240="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteTransformedResponseToQAArchive" xmlns:ns2401="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_VendorIDMisMismatch_ZIONLog" xmlns:ns241="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WritePostProcessTransformToQAArchive" xmlns:ns2410="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/InvokeOrigination" xmlns:ns2411="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/ScopeWriteReceiveFailure" xmlns:ns2412="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteReceiveFailureErrorLog" xmlns:ns2413="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_RemoveEmptyElementsFailure_ZIONLog" xmlns:ns242="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteResponseToArchiveFailureAlarmLog" xmlns:ns2421="http://www.example.com/OriginationService/file/bin/OriginationServiceProcess/WriteAlertLog" xmlns:ns2422="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_RemoveEmptyElementsFailure_ZIONLog" xmlns:ns243="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteResponsetoArchive" xmlns:ns2431="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_CanonicalRequestRemoveEmptyElementsFailure" xmlns:ns244="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WritePostProcessedResponseTransformToQAArchive" xmlns:ns2441="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_CanonicalRequestRemoveEmptyElementsFailure_ZIONLog" xmlns:ns245="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteModifiedResoponseToArchiveFailureLog" xmlns:ns2451="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_CanonicalRequestRemoveEmptyElementsFailure_ZIONLog" xmlns:ns246="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteModifiedResponsetoArchive" xmlns:ns2461="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_RemoveNSFailureGFH" xmlns:ns247="http://www.example.com/vgfgh/http/bin/OriginationAsyncPostBack/InvokeLenderPostbackURL" xmlns:ns2471="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_RemoveNSFailureGFH_ZIONLog" xmlns:ns248="http://www.example.com/vgfgh/http/bin/OriginationAsyncPostBack/InvokeLenderPostBackBasicAuthHTTP" xmlns:ns2481="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_RemoveNSFailureGFH_ZIONLog" xmlns:ns249="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteToPostbackToSFTPBasicAuth" xmlns:ns2491="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_GenerateNACKSchemaFailure" xmlns:ns25="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRemoveEmptyElementsFailure" xmlns:ns250="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteAsyncTransactionTALog" xmlns:ns2501="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_GenerateNACKSchemaFailure_ZIONLog" xmlns:ns251="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteTALogonSuccess" xmlns:ns2510="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/Invoke" xmlns:ns2511="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteReceiveFailure" xmlns:ns2512="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteReceiveFailureErrorLog" xmlns:ns2513="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_GenerateNACKSchemaFailure_ZIONLog" xmlns:ns252="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteReceiveFailure" xmlns:ns2521="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns2522="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_RemoveNSFailure" xmlns:ns253="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteReceiveFailureTALog" xmlns:ns2531="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_RemoveNSFailure_ZIONLog" xmlns:ns254="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteRequestToArchiveAtGFH" xmlns:ns2541="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_RemoveNSFailure_ZIONLog" xmlns:ns255="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteRemoveNSFailure" xmlns:ns2551="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_GenerateNACKFailureGFH" xmlns:ns256="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteGenerateNACKFailureGFH" xmlns:ns2561="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_GenerateNACKFailureGFH_ZIONLog" xmlns:ns257="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteGenerateNACKSchemaFailure" xmlns:ns2571="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_GenerateNACKFailureGFH_ZIONLog" xmlns:ns258="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteErrorLogACKNACKoadfailGFH" xmlns:ns2581="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_SyncErrorResponseGenerationFailure" xmlns:ns259="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteErrorLogACKNACKSchemaFail" xmlns:ns2591="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_SyncErrorResponseGenerationFailure_ZIONLog" xmlns:ns26="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeSyncDownstreamSystem" xmlns:ns260="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteErrLogVendorSpecificACKNACKRemoveNSFailure" xmlns:ns2601="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_SyncErrorResponseGenerationFailure_ZIONLog" xmlns:ns261="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteErrLogVendorSpecificACKNACKLoadFailure" xmlns:ns2610="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns2611="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/WriteReceiveFailure" xmlns:ns2612="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke5" xmlns:ns2613="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_SyncErrorResponseSchemaFail" xmlns:ns262="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteErrLogVendorSpecificACKNACKSchemaFailure" xmlns:ns2621="http://www.example.com/Origination/http/bin/OriginationServiceProcess/InvokeOriginationProcess" xmlns:ns2622="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_SyncErrorResponseSchemaFail_ZIONLog" xmlns:ns263="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteErroLogRemoveNSFailureGFH" xmlns:ns2631="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_SyncErrorResponseSchemaFail_ZIONLog" xmlns:ns264="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteResponseAtGFHFailure" xmlns:ns2641="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_VendorSpecificACKNACKRemoveNSFailure" xmlns:ns265="http://www.example.com/vgfgh/sftp/bin/OriginationAsyncPostBack/WriteResponseToArchiveAtGFH" xmlns:ns2651="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_VendorSpecificACKNACKRemoveNSFailure_ZIONLog" xmlns:ns266="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteAlarmPointLog" xmlns:ns2661="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_VendorSpecificACKNACKRemoveNSFailure_ZIONLog" xmlns:ns267="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/GlobalFaultWriteTALogstoDisk" xmlns:ns2671="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_VendorSpecificACKNACKLoadFailure" xmlns:ns268="http://www.example.com/vgfgh/file/bin/OriginationAsyncPostBack/WriteAlertLogOnReplyFailureGFH" xmlns:ns2681="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_VendorSpecificACKNACKLoadFailure_ZIONLog" xmlns:ns269="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/Receive" xmlns:ns2691="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_VendorSpecificACKNACKLoadFailure_ZIONLog" xmlns:ns27="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeDownstreamSystem" xmlns:ns270="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns2701="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_VendorSpecificACKNACKSchemaFailure" xmlns:ns271="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteRequestArchivalFailure" xmlns:ns2710="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns2711="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/ReceiveFailureTALog" xmlns:ns2712="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteTALogOnReceiveFailure" xmlns:ns2713="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_VendorSpecificACKNACKSchemaFailure_ZIONLog" xmlns:ns272="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/ArchiveInboundRequestToSFTP" xmlns:ns2721="http://www.example.com/Origination/sftp/bin/OriginationServiceProcess/ArchiveRequest" xmlns:ns2722="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_VendorSpecificACKNACKSchemaFailure_ZIONLog" xmlns:ns273="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteDownstreamRequestToQArchive" xmlns:ns2731="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_ACKNACKSchemaFailatGFH" xmlns:ns274="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteLogOnWarninginDownstreamResponse" xmlns:ns2741="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ACKNACKSchemaFailatGFH_ZIONLog" xmlns:ns275="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteTransformedResponseToQAArchive" xmlns:ns2751="http://www.example.com/Origination/sftp/bin/OriginationProcess/CreateCaseFailure_ACKNACKSchemaFailatGFH_ZIONLog" xmlns:ns276="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WritePostProcessTransformToQAArchive" xmlns:ns2761="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ACKNACKSchemaFailatGFH_ZIONLog" xmlns:ns277="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteResponseToArchiveFailureAlarmLog" xmlns:ns2771="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_ACKNACKLoadfailatGFH" xmlns:ns278="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteResponsetoArchive" xmlns:ns2781="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ACKNACKLoadfailatGFH_ZIONLog" xmlns:ns279="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WritePostProcessedResponseTransformToQAArchive" xmlns:ns2791="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ACKNACKLoadfailatGFH_ZIONLog" xmlns:ns28="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTransformMISMO32ToQAArchive" xmlns:ns280="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteModifiedResoponseToArchiveFailureLog" xmlns:ns2801="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_ArchiveRequestToSFTPFailed" xmlns:ns281="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteModifiedResponsetoArchive" xmlns:ns2810="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/GFHArchiveResponsetoSFTP" xmlns:ns2811="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/ReceiveFailureTALog" xmlns:ns2812="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnReceiveFailure" xmlns:ns2813="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ArchiveRequestToSFTPFailed_ZIONLog" xmlns:ns282="http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/InvokeLenderPostbackURL" xmlns:ns2821="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteAlertLog" xmlns:ns2822="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ArchiveRequestToSFTPFailed_ZIONLog" xmlns:ns283="http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/InvokeLenderPostBackBasicAuthHTTP" xmlns:ns2831="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_ArchiveRequestToLocalESGFolderFailed" xmlns:ns284="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteToPostbackToSFTPBasicAuth" xmlns:ns2841="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ArchiveRequestToLocalESGFolderFailed_ZIONLog" xmlns:ns285="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteAsyncTransactionTALog" xmlns:ns2851="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ArchiveRequestToLocalESGFolderFailed_ZIONLog" xmlns:ns286="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteTALogonSuccess" xmlns:ns2861="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCase_ArchiveResponseAtGFHFailure" xmlns:ns287="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteReceiveFailure" xmlns:ns2871="http://www.example.com/Origination/http/bin/OriginationProcess/CreateCaseFailure_ArchiveResponseAtGFHFailure_ZIONLog" xmlns:ns288="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteReceiveFailureTALog" xmlns:ns2881="http://www.example.com/Origination/file/bin/OriginationProcess/CreateCaseFailure_ArchiveResponseAtGFHFailure_ZIONLog" xmlns:ns289="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteRequestToArchiveAtGFH" xmlns:ns2891="http://www.example.com/Origination/custom/bin/OriginationProcess/Invoke" xmlns:ns29="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResponsetoArchive" xmlns:ns290="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteRemoveNSFailure" xmlns:ns2901="http://www.example.com/Origination/custom/bin/OriginationProcess/DownloadDocumentFromS3" xmlns:ns291="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteGenerateNACKFailureGFH" xmlns:ns2910="http://www.example.com/Origination/sftp/bin/OriginationServiceSecureProcess/GFHArchiveResponsetoSFTP" xmlns:ns2911="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteRequestToArchiveAtGFH" xmlns:ns2912="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke6" xmlns:ns2913="http://Radian.Operations.MortgageIns.Common.Schemas.MORTGAGEINS_XCM" xmlns:ns292="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteGenerateNACKSchemaFailure" xmlns:ns2921="http://www.example.com/Origination/http/bin/OriginationServiceProcess/Invoke1" xmlns:ns293="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteErrorLogACKNACKoadfailGFH" xmlns:ns294="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteErrorLogACKNACKSchemaFail" xmlns:ns295="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteErrLogVendorSpecificACKNACKRemoveNSFailure" xmlns:ns2951="http://www.example.com/Origination/http/bin/OriginationProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure" xmlns:ns296="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteErrLogVendorSpecificACKNACKLoadFailure" xmlns:ns2961="http://www.example.com/Origination/http/bin/OriginationProcess/RequestArchivalFailed_NotifyFailure" xmlns:ns297="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteErrLogVendorSpecificACKNACKSchemaFailure" xmlns:ns298="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteErroLogRemoveNSFailureGFH" xmlns:ns299="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteResponseAtGFHFailure" xmlns:ns3="http://www.radian.biz/ClientConnectivity/zion/TransactionActivity" xmlns:ns30="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResponsetoArchive" xmlns:ns300="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteResponseToArchiveAtGFH" xmlns:ns3001="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveRequesttoESGFolderFailed_NotifyFailure" xmlns:ns301="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteAlarmPointLog" xmlns:ns3010="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/WriteAlertLogReceiveFailure" xmlns:ns3011="http://www.example.com/EDI872/sftp/bin/EDIOriginationProcess/WriteRequestToArchiveAtGFH" xmlns:ns3012="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteErrorLog" xmlns:ns302="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/GlobalFaultWriteTALogstoDisk" xmlns:ns3021="http://www.example.com/Origination/http/bin/OriginationServiceProcess/InvokeOrigination" xmlns:ns303="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteAlertLogOnReplyFailureGFH" xmlns:ns304="http://www.example.com/OriginationService/sftp/bin/OriginationAsynchronousPostBack/WriteToPostbackToSFTP" xmlns:ns3041="http://www.example.com/Origination/http/bin/OriginationProcess/ACKNACKResponseWriteFailure_NotifyFailure" xmlns:ns305="http://www.radian.biz/ClientConnectivity/zion/Origination/SOAPProperties" xmlns:ns3051="http://www.example.com/Origination/http/bin/OriginationProcess/ResponseArchivalFailed_NotifyFailure" xmlns:ns306="http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/InvokeSOAPPostbackEndpoint" xmlns:ns3061="http://www.example.com/Origination/http/bin/OriginationProcess/RecieveFailureErrorLog_NotifyFailure" xmlns:ns307="http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/WriteAsyncLoadCreateActivityNodeXSLFailed" xmlns:ns3071="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveRequestESGFolderFailed_NotifyFailure" xmlns:ns308="http://www.example.com/OriginationService/file/bin/OriginationAsynchronousPostBack/WriteAsyncLoadCreateActivityNodeXSLFailed" xmlns:ns3081="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveRequesttoSFTPFailed_NotifyFailure" xmlns:ns309="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBack/Receive" xmlns:ns3091="http://www.example.com/Origination/http/bin/OriginationProcess/ACKNACKSchemaFailatGFH_NotifyFailure" xmlns:ns31="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteResponsetoArchive" xmlns:ns310="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteAsyncLoadCreateActivityNodeXSLFailed" xmlns:ns3101="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/Invoke" xmlns:ns3102="http://www.example.com/OriginationPOCLocal/http/bin/OriginationServiceProcess/InvokeWSLOSService" xmlns:ns311="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBack/WritePostProcessTransformToQAArchive" xmlns:ns3110="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/WriteReceiveFailureTALog" xmlns:ns3111="http://www.example.com/Origination/http/bin/OriginationServiceProcess/Invoke" xmlns:ns3112="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteErrorLog" xmlns:ns312="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBack/DecryptCredentials" xmlns:ns313="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBack/InvokeLenderPostbackURL" xmlns:ns314="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBack/WriteToPostbackToSFTP" xmlns:ns3141="http://www.example.com/OriginationUAT/file/bin/OriginationServiceProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns315="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteResponseToArchiveFailureAlarmLog" xmlns:ns3151="http://www.example.com/Origination/http/bin/OriginationProcess/ACKNACKLoadFailatGFH_NotifyFailure" xmlns:ns316="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBack/WriteResponsetoArchive" xmlns:ns3161="http://www.example.com/Origination/http/bin/OriginationProcess/SyncErrorResponseGenerationFailed_NotifyFailure" xmlns:ns317="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteAsyncTransactionTALog" xmlns:ns3171="http://www.example.com/Origination/http/bin/OriginationProcess/SyncErrorResponseSchemaFailed_NotifyFailure" xmlns:ns318="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteReceiveFailure" xmlns:ns3181="http://www.example.com/Origination/http/bin/OriginationProcess/GenerateNACKFailureGFH" xmlns:ns319="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteReceiveFailureTALog" xmlns:ns3191="http://www.example.com/Origination/http/bin/OriginationProcess/RemoveNSFailure_NotifyFailure" xmlns:ns32="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse" xmlns:ns320="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBack/WriteRequestToArchiveAtGFH" xmlns:ns3201="http://www.example.com/Origination/http/bin/OriginationProcess/GenerateNACKSchemaFailure_NotifyFailure" xmlns:ns321="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteAlarmPointLog" xmlns:ns3210="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteReceiveFailureTALog" xmlns:ns3211="http://www.example.com/EDI872/rawtcp/bin/EDIOriginationProcess/WriteRequestToArchiveAtGFH" xmlns:ns3212="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke7" xmlns:ns322="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/GlobalFaultWriteTALogstoDisk" xmlns:ns3221="http://www.example.com/Origination/http/bin/OriginationServiceProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns323="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteAlertLogOnReplyFailureGFH" xmlns:ns324="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBack/Invoke" xmlns:ns3241="http://www.example.com/OriginationUAT/http/bin/OriginationServiceProcess/InvokeOrigination" xmlns:ns325="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBack/WriteTALogGFH" xmlns:ns3251="http://www.example.com/Origination/http/bin/OriginationProcess/VendorSpecificACKNACKRemoveNSFailure_NotifyFailure" xmlns:ns326="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBack/WriteTALogGFH" xmlns:ns3261="http://www.example.com/Origination/http/bin/OriginationProcess/VendorSpecificACKNACKSchemaFailure" xmlns:ns327="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBack/WriteTransformedResponseToQAArchive" xmlns:ns3271="http://www.example.com/Origination/http/bin/OriginationProcess/VendorSpecificACKNACKSchemaFailure_NotifyFailure" xmlns:ns328="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBack/WriteTransformedResponseToQAArchive" xmlns:ns3281="http://www.example.com/Origination/http/bin/OriginationProcess/VendorSpecificACKNACKLoadFailure_NotifyFailure" xmlns:ns329="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DecryptCredentials" xmlns:ns3291="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveResponseatGFHFailure_NotifyFailure" xmlns:ns33="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeLenderPostbackURL" xmlns:ns330="http://www.example.com/Origination/cde/EDI263" xmlns:ns3301="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAlarmPointLog_NotifyFailure" xmlns:ns331="http://www.radian.biz/ClientConnectivity/zion/http/OriginationAsyncPostBackService" xmlns:ns3310="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteAlertLogReceiveFailure" xmlns:ns3311="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/GlobalFaultWriteTALogstoDisk" xmlns:ns3312="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteTALogOnFailure" xmlns:ns332="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnSyncErrorResponseGenerationFailure" xmlns:ns3321="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns333="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnSyncErrorResponseGenerationFailure" xmlns:ns334="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnErrorResponseGenerationFailure" xmlns:ns3341="http://www.example.com/OriginationUAT/sftp/bin/OriginationServiceProcess/ArchiveRequest" xmlns:ns335="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnGenericErrorResponseGenerationFailure" xmlns:ns3351="http://www.example.com/Origination/http/bin/OriginationProcess/OnReplyFailureGFH_NotifyFailure" xmlns:ns336="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnGenericErrorResponseGenerationFailure" xmlns:ns3361="http://www.example.com/Origination/http/bin/OriginationProcess/RemoveNSFailureGFH_NotifyFailure" xmlns:ns337="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnDetermineRequestType" xmlns:ns3371="http://www.example.com/Origination/http/bin/OriginationProcess/CanonicalRequestRemoveEmptyElementsFailure_NotifyFailure" xmlns:ns338="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnDetermineRequestType" xmlns:ns3381="http://www.example.com/Origination/http/bin/OriginationProcess/VendorIDMismatch_NotifyFailure" xmlns:ns339="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnErrorResponseGenerationXSLFailure" xmlns:ns3391="http://www.example.com/Origination/http/bin/OriginationProcess/RemoveEmptyElementsfromTransformationFailure_NotifyFailure" xmlns:ns34="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeLenderPostbackURL" xmlns:ns340="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnErrorResponseGenerationXSLFailure" xmlns:ns3401="http://www.example.com/Origination/http/bin/OriginationProcess/RemoveEmptyElementsFailure_NotifyFailure" xmlns:ns341="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnErrorResponseGenerationSchemaValidationFailure" xmlns:ns3410="http://www.example.com/Origination/sftp/bin/OriginationServiceSecureProcess/ArchiveRequestToSFTP" xmlns:ns3411="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/GlobalFaultWriteTALogstoDisk" xmlns:ns3412="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnFailure" xmlns:ns342="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteErrorLogOnErrorResponseGenerationSchemaValidationFailure" xmlns:ns3421="http://www.example.com/Origination/http/bin/OriginationServiceProcess/GFHArchiveResponsetoSFTP" xmlns:ns343="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WriteTransformedResponseToQAArchive" xmlns:ns344="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WritePostProcessTransformToQAArchive" xmlns:ns3441="http://www.example.com/OriginationUAT/file/bin/OriginationServiceProcess/WriteAlertLog" xmlns:ns345="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WriteToPostbackToSFTP" xmlns:ns3451="http://www.example.com/Origination/http/bin/OriginationProcess/DownloadDocumentFromS3_Failure" xmlns:ns346="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WriteRequestToArchiveAtGFH" xmlns:ns347="http://radian.esb.services/" xmlns:ns3471="http://www.example.com/Origination/http/bin/OriginationProcess/OnWarningDownstreamResponse_NotifyFailure" xmlns:ns348="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/Invoke" xmlns:ns349="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/Write" xmlns:ns35="http://www.radian.biz/ClientConnectivity/zion/AuthorizationResponse" xmlns:ns350="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteTouchpoint_To_ZIONLocal" xmlns:ns351="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateTouchpointZIONLocal" xmlns:ns3510="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/ArchiveRequestToESGFolder" xmlns:ns3511="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteTALogGFH" xmlns:ns3512="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/WriteUpdatedZipToSFTP" xmlns:ns352="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/UpdateTouchpointZIONLocal" xmlns:ns3521="http://www.example.com/Origination/sftp/bin/OriginationServiceProcess/GFHArchiveResponsetoSFTP" xmlns:ns353="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ResoponseArchiveFailure_ZIONLog" xmlns:ns354="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ResoponseArchiveFailure_ZIONLog" xmlns:ns3541="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns355="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorResponseGenerationXSLFailure_ZIONLog" xmlns:ns356="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorResponseGenerationXSLFailure_ZIONLog" xmlns:ns357="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorResponseGenerationFailure_ZIONLog" xmlns:ns358="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorResponseGenerationFailure_ZIONLog" xmlns:ns359="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorResponseGenerationSchemaValidationFailure_ZIONLog" xmlns:ns36="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponse" xmlns:ns360="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorResponseGenerationSchemaValidationFailure_ZIONLog" xmlns:ns361="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteAlarmPointLog_CreateSFDCCase" xmlns:ns3610="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/ArchivetoESGFolderFailed" xmlns:ns3611="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/WriteTALogGFH" xmlns:ns3612="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke8" xmlns:ns362="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns3621="http://www.example.com/Origination/file/bin/OriginationServiceProcess/Invoke" xmlns:ns363="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/AlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns364="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns3641="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/InvokeOrigination" xmlns:ns365="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns366="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorDetermineRequestType_ZIONLog" xmlns:ns367="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateCaseFailure_ErrorDetermineRequestType_ZIONLog" xmlns:ns368="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateSFDCCase_OnReplyFailureGFH" xmlns:ns369="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/CreateSFDCCaseFailure_OnReplyFailureGFH_ArchiveZIONLocal" xmlns:ns37="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponse" xmlns:ns370="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/CreateSFDCCaseFailure_OnReplyFailureGFH_ArchiveZIONLocal" xmlns:ns371="http://www.example.com/Origination/rawtcp/bin/OriginationAsynchronousPostBackProcess/Invoke" xmlns:ns3710="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteRequestArchivalFailed" xmlns:ns3711="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/ScopeWriteAlarmPointLog" xmlns:ns3712="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/RemoveTempFiles" xmlns:ns372="http://www.example.com/Origination/custom/bin/OriginationAsynchronousPostBackProcess/Invoke" xmlns:ns3721="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteReceiveFailure" xmlns:ns373="http://www.example.com/Origination/custom/bin/OriginationAsynchronousPostBackProcess/DownloadDocumentFromS3" xmlns:ns374="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure" xmlns:ns3741="http://www.example.com/Origination/sftp/bin/OriginationServiceStringProcess/ArchiveRequest" xmlns:ns375="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ResponseArchiveFailed_NotifyFailure" xmlns:ns376="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RecieveFailedErrorLog_NotifyFailure" xmlns:ns377="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorDetermineRequestType_NotifyFailure" xmlns:ns378="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationFailed_NotifyFailure" xmlns:ns379="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationSchemaValidationFailed_NotifyFailure" xmlns:ns38="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteACKNACKResponse" xmlns:ns380="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationXSLFailed_NotifyFailure" xmlns:ns381="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteAlarmPointLog_NotifyFailure" xmlns:ns3810="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/WriteResponseToArchiveFailureAlarmLog" xmlns:ns3811="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteAlarmPointLog" xmlns:ns3812="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/RemoveTempFiles" xmlns:ns382="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/OnReplyFailureGFH_NotifyFailure" xmlns:ns3821="http://www.example.com/Origination/http/bin/OriginationServiceProcess/WriteRequestToArchive" xmlns:ns383="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DownloadDocumentFromS3Failure" xmlns:ns384="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteTransformedResponseToQAArchive" xmlns:ns3841="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/WriteAlertLog" xmlns:ns385="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WritePostProcessTransformToQAArchive" xmlns:ns3851="http://www.example.com/Origination/http/bin/OriginationProcess/OnWraningMISMO33DownstreamResponse_NotifyFailure" xmlns:ns386="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WriteResponsetoArchive" xmlns:ns3861="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveInboundRequestToArchiveComponet" xmlns:ns387="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteResponsetoArchive" xmlns:ns3871="http://www.example.com/Origination/http/bin/OriginationProcess/WriteDownstreamRequestToQArchive" xmlns:ns388="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ArchivePostbackRequest" xmlns:ns3881="http://www.example.com/Origination/http/bin/OriginationProcess/WriteDownstreamResponseToQAArchive" xmlns:ns389="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteRequestToArchiveAtGFH" xmlns:ns3891="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTransformedResponseToQAArchive" xmlns:ns39="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteTransformMISMO32ToQAArchive" xmlns:ns390="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ArchiveResponseAtGFH" xmlns:ns3901="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToRequestToArchiveAtGFH" xmlns:ns391="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/WriteAlarmPointLog" xmlns:ns3911="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke9" xmlns:ns392="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ArchiveRequestToSFTP" xmlns:ns393="http://www.example.com/OriginationServiceLocal/http/bin/OriginationServiceSecureProcess/InvokeOriginationProcess" xmlns:ns394="http://www.example.com/OriginationServiceLocal/http/bin/OriginationServiceSecureProcess/Receive" xmlns:ns3941="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/Invoke" xmlns:ns395="http://www.example.com/Origination/sftp/bin/OriginationServiceSecureProcess/ArchiveResponseToSFTP" xmlns:ns3951="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentTo_ResponseToArchiveAtGFH" xmlns:ns396="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToRequestToArchiveAtGFH" xmlns:ns3961="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToLenderExceptionResultToQAArchive" xmlns:ns397="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponseAtGFH" xmlns:ns3971="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToPreProcessXformQAArchive" xmlns:ns398="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToTransformedResponseToQAArchive" xmlns:ns3981="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToACKNACKResponse" xmlns:ns399="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToPostProcessTransformToQAArchive" xmlns:ns3991="http://www.example.com/Origination/http/bin/OriginationProcess/AInvokeArchiveComponentToACKNACKResponse" xmlns:ns4="http://www.radian.biz/ClientConnectivity/zion/Origination/AppConfig" xmlns:ns40="http://www.example.com/Origination/http/bin/OriginationProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns400="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponsetoArchive" xmlns:ns4001="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToWriteACKNACKResponse" xmlns:ns401="http://www.example.com/Origination/sftp/bin/OriginationServiceProcess/ArchiveRequestToSFTP" xmlns:ns4011="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns4012="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteRemoveTempFilesFailed" xmlns:ns402="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/UpdateTouchpointEventInvoke" xmlns:ns4021="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns403="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeUpdateTouchpointEvent" xmlns:ns4031="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToArchive_DownstreamRequestToQArchive" xmlns:ns404="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeCreateEvent_TransactionCompleted" xmlns:ns4041="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToArchiveDownstreamResponseToQAArchive" xmlns:ns405="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DecryptAppConfig" xmlns:ns4051="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToResponseArchival" xmlns:ns406="http://www.example.com/Origination/custom/bin/OriginationAsynchronousPostBackProcess/InvokeS3ComponentToDownloadDocumentFromS3" xmlns:ns4061="http://www.example.com/Origination/sftp/bin/OriginationProcess/InvokeArchiveCompomentToArchivePostProcessTransformOutputToQAArchive" xmlns:ns407="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeS3ComponentToDownloadDocumentFromS3" xmlns:ns4071="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveComponentToArchiveTransformedResponseToQAArchive" xmlns:ns408="http://www.radian.biz/ClientConnectivity/zion/ComponentResponse" xmlns:ns4081="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeArchiveCompomentToArchivePostProcessTransformOutputToQAArchive" xmlns:ns409="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeCreateTouchpointEventComponent" xmlns:ns41="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRequestToArchiveAtGF" xmlns:ns410="http://www.example.com/TestLoadXSL/http/bin/OriginationServiceSecureProcess/InvokeOriginationProcess" xmlns:ns4101="http://www.example.com/EDI872/ftp/bin/EDIOriginationProcess/Invoke" xmlns:ns4102="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.APP_MORTGAGE_INSURANCE_APPLICATION_REQUEST_v2_3_1" xmlns:ns4103="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/ExceptionConfig" xmlns:ns411="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns4111="http://www.example.com/EDI872/file/bin/EDIOriginationProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns4112="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ArchiveResponse" xmlns:ns4113="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteRemoveTempFilesFailed" xmlns:ns412="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns413="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseReceived_InvokeCreateEvent" xmlns:ns414="http://www.example.com/Origination/http/bin/OriginationProcess/UpdateTouchpointEventInvocation" xmlns:ns415="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeCreateEventComponent_RequestRecievedSuccess" xmlns:ns416="http://www.example.com/Origination/http/bin/OriginationProcess/CreateEventComponent_TransactionCompleted" xmlns:ns417="http://www.example.com/Origination/http/bin/OriginationProcess/DecryptAppConfig" xmlns:ns418="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RemoveNSFromResponseSuccess_InvokeCreateEventComponent" xmlns:ns419="http://www.example.com/Origination/custom/bin/OriginationProcess/InvokeS3ComponentToDownloadDocumentFromS3" xmlns:ns42="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRequestToArchiveAtGFH" xmlns:ns420="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeS3ComponentToDownloadDocumentFromS3" xmlns:ns421="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns4211="http://www.example.com/Origination/http/bin/EDIOriginationProcess/Invoke" xmlns:ns4212="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ArchiveResponseToSFTP" xmlns:ns4213="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke10" xmlns:ns422="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/GFHArchiveResponsetoSFTP" xmlns:ns423="http://www.example.com/Origination/http/bin/OriginationProcess/CreateEvent_CreateDownstreamRequestSuccess" xmlns:ns424="http://www.example.com/Sample/http/bin/Process/Receive" xmlns:ns425="http://www.example.com/Origination/http/bin/OriginationProcess/TransactionCompletedCreateEventFailed_NotifyFailure" xmlns:ns426="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponseSuccess_CreateEventFailed_NotifyFailure" xmlns:ns427="http://www.example.com/Origination/http/bin/OriginationProcess/CreateEvent_WriteACKNACKResponseSuccess" xmlns:ns428="http://www.example.com/Origination/http/bin/OriginationProcess/RequestRecieved_CreateEventFailed_InvokeNotifyFailure" xmlns:ns429="http://www.example.com/Origination/http/bin/OriginationProcess/RequestRecieved_createEvent" xmlns:ns43="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteRequestToArchiveAtGFH" xmlns:ns430="http://www.example.com/Origination/http/bin/OriginationProcess/CreateDownstreamRequestSuccess_CreateEventFailed_NotifyFailure" xmlns:ns431="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns4311="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CleanEDI" xmlns:ns4312="http://www.example.com/Origination/sftp/bin/OriginationServiceProcess/ArchiveResponseToSFTP" xmlns:ns4313="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteTALogOnAppConfigFailure" xmlns:ns432="http://www.example.com/Origination/sftp/bin/OriginationServiceStringProcess/GFHArchiveResponsetoSFTP" xmlns:ns433="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeDownStreamSystemSuccess_CreateEventFailed_NotifyFailure" xmlns:ns434="http://www.example.com/Origination/http/bin/OriginationProcess/CreateEvent_InvokeDownStreamSystemSuccess" xmlns:ns435="http://www.example.com/Origination/http/bin/OriginationProcess/UpdateTouchpoint" xmlns:ns436="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_InvokeCreateEventComponent" xmlns:ns437="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseReceived_InvokeCreateEventComponent" xmlns:ns438="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LenderPostbackSuccess_InvokeCreateEventComponent" xmlns:ns439="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure" xmlns:ns44="http://www.example.com/Origination/http/bin/OriginationProcess/WritePostProcessResponseQAArchive" xmlns:ns440="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure" xmlns:ns441="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns4411="http://www.example.com/Origination/custom/bin/EDIOriginationProcess/CleanEDI" xmlns:ns4412="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ArchiveRequestToESGFolder" xmlns:ns4413="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnAppConfigFailure" xmlns:ns442="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/Invoke" xmlns:ns443="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure" xmlns:ns444="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure" xmlns:ns445="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted" xmlns:ns446="http://www.example.com/Test/http/bin/Process/Receive" xmlns:ns447="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/invokw" xmlns:ns448="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed" xmlns:ns45="http://www.example.com/Origination/sftp/bin/OriginationProcess/WritePostProcessResponseQAArchive" xmlns:ns451="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns4511="http://www.informatica.com/B2B/X12Wrapper" xmlns:ns4512="http://www.example.com/Origination/file/bin/OriginationServiceProcess/ArchiveRequestToESGFolder" xmlns:ns4513="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/Provider" xmlns:ns452="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/WriteReceiveFailure" xmlns:ns46="http://www.example.com/Origination/http/bin/OriginationProcess/WritePostProcessTransformToQAArchive" xmlns:ns461="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns4611="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ArchivetoESGFolderFailed" xmlns:ns46111="http://www.example.com/Origination/cde/EDI872" xmlns:ns4612="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/BlitzDocs/DocumentUpload" xmlns:ns462="http://www.example.com/Origination/sftp/bin/OriginationServiceStringProcess/ArchiveResponseToSFTP" xmlns:ns47="http://www.example.com/Origination/http/bin/OriginationProcess/WritePostProcessTransformToQAArchive" xmlns:ns471="http://www.example.com/Origination/sftp/bin/EDIOriginationProcess/Receive" xmlns:ns4711="http://www.example.com/OriginationDocuments/cde/TextToXMLNYCB" xmlns:ns472="http://www.example.com/Origination/file/bin/OriginationServiceProcess/ArchivetoESGFolderFailed" xmlns:ns473="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_ResponseArchivalFailure_ZIONLog" xmlns:ns474="http://www.example.com/Origination/sftp/bin/OriginationServiceStringProcess/ArchiveRequestToSFTP" xmlns:ns48="http://www.example.com/Origination/sftp/bin/OriginationProcess/WritePostProcessTransformToQAArchive" xmlns:ns481="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_ResponseArchivalFailure_ZIONLog" xmlns:ns4811="http://www.example.com/Origination/http/bin/OriginationServiceProcess/WriteRequestArchivalFailed" xmlns:ns48111="http://www.example.com/Origination/sftp/bin/EDIOriginationProcess/Write997File" xmlns:ns4812="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke11" xmlns:ns482="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/ArchiveRequestToESGFolder" xmlns:ns49="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeWSCall" xmlns:ns491="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateCaseFailure_ReceiveFailureErrorLog_ZIONLog" xmlns:ns4911="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteRequestArchivalFailed" xmlns:ns49111="http://www.example.com/Origination/http/bin/EDIOriginationProcess/WriteEDIInputFileToMatrix" xmlns:ns4912="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/ExtractEachZipFile" xmlns:ns492="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/ArchivetoESGFolderFailed" xmlns:ns5="http://www.radian.biz/ClientConnectivity/zion/Origination/StatusCodeConfig" xmlns:ns50="http://www.example.com/Origination/http/bin/OriginationProcess/WriteMIOnlineRequestToQArchive" xmlns:ns501="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateCaseFailure_ReceiveFailureErrorLog_ZIONLog" xmlns:ns5011="http://www.example.com/Origination/http/bin/EDIOriginationProcess/WriteEDIInputFileToDownstreamSystem" xmlns:ns5012="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteResponseToArchiveFailureAlarmLog" xmlns:ns5013="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/ExtractEachZipFile" xmlns:ns502="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/WriteRequestArchivalFailed" xmlns:ns51="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteMIOnlineRequestToQArchive" xmlns:ns510="http://www.example.com/OriginationService/http/bin/OriginationServiceSecureProcess/InvokeOriginationProcess" xmlns:ns5101="http://www.example.com/EDI872/sftp/bin/EDIOriginationProcess/Invoke" xmlns:ns5102="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.APP_MORTGAGE_INSURANCE_APPLICATION_RESPONSE_v2_3_1" xmlns:ns5103="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/Invoke" xmlns:ns511="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_WriteAlarmPointLog_ArchiveZIONLocal" xmlns:ns5111="http://www.example.com/Origination/rawtcp/bin/EDIOriginationProcess/WriteEDIInputFileToDownstreamSystem" xmlns:ns5112="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/RetrieveZipFile" xmlns:ns512="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/WriteResponseToArchiveFailureAlarmLog" xmlns:ns52="http://www.example.com/Origination/http/bin/OriginationProcess/WriteDownstreamRequesttoSFTP" xmlns:ns521="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_WriteAlarmPointLog_ArchiveZIONLocal" xmlns:ns5211="http://www.example.com/Origination/http/bin/OriginationServiceProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns52111="http://www.example.com/Origination/sftp/bin/EDIOriginationProcess/WriteEDIInputFileToDownstreamSystem" xmlns:ns5212="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/RetrieveEachZipFile" xmlns:ns53="http://www.example.com/Origination/http/bin/OriginationProcess/WriteMIOnlineResponseToQAArchive" xmlns:ns531="http://www.example.com/Origination/http/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns5311="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns5312="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocuments/WriteEachZipToSFTP" xmlns:ns532="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns54="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteMIOnlineResponseToQAArchive" xmlns:ns541="http://www.example.com/Origination/file/bin/OriginationServiceSecureProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns5411="http://www.example.com/Origination/sftp/bin/EDIOriginationProcess/Write997ACKFile" xmlns:ns5412="http://www.example.com/Origination/http/bin/OriginationServiceProcess/CreateCaseFailure_ReceiveFailureErrorLog_ZIONLog" xmlns:ns5413="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/CreateZipFile" xmlns:ns542="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns55="http://www.w3.org/1999/xlink" xmlns:ns551="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateCaseFailure_ReceiveFailureErrorLog_ZIONLog" xmlns:ns5511="http://www.example.com/Origination/http/bin/EDIOriginationProcess/InvokeOriginationCoreWorkflow" xmlns:ns5512="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTAlogonSucces" xmlns:ns552="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns56="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAsyncTransactionTALog" xmlns:ns561="http://www.example.com/Origination/http/bin/OriginationServiceProcess/WriteAlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns5611="http://www.example.com/Origination/http/bin/EDIOriginationProcess/InvokeDownstreamSystem" xmlns:ns5612="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/RemoveTempFolderFiles" xmlns:ns562="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns57="http://www.example.com/Origination/http/bin/OriginationProcess/WriteToPostBackToSFTP" xmlns:ns571="http://www.example.com/Origination/file/bin/OriginationServiceProcess/WriteAlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns5711="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/RemoveTempFolderFiles" xmlns:ns5712="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns58="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteToPostBackToSFTP" xmlns:ns581="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateSFDCCaseFailure_WriteAlarmPointLog_ArchiveZIONLocal" xmlns:ns5811="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteRemoveTempFolderFilesFailtoAlarmpoint" xmlns:ns5812="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns59="http://www.example.com/Origination/http/bin/OriginationProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns591="http://www.example.com/Origination/http/bin/OriginationServiceProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns5911="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateTouchpointZIONLocal" xmlns:ns5912="http://www.example.com/OriginationDocuments/ftp/bin/OriginationDocuments/WriteRemoveTempFolderFilesFailtoAlarmpoint" xmlns:ns592="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_ResponseArchivalFailure_ZIONLog" xmlns:ns6="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveInboundRequestToSFTP" xmlns:ns60="http://www.example.com/Origination/file/bin/OriginationProcess/WriteLoadCreateActivityNodeXSLFailed" xmlns:ns601="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns6011="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateTouchpointZIONLocal" xmlns:ns6012="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteRemoveTempFolderFilesFailtoAlarmpoint" xmlns:ns602="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_ResponseArchivalFailure_ZIONLog" xmlns:ns61="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAlarmPointLog" xmlns:ns610="http://www.example.com/OriginationService1/http/bin/OriginationServiceSecureProcess/InvokeOriginationProcess" xmlns:ns6101="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/Invoke1" xmlns:ns6102="http://www.example.com/OriginationServiceLocal/http/bin/OriginationServiceProcess/InvokeWSLOSService" xmlns:ns6103="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteCreateActivityNodeXSLFailtoAlarmpoint" xmlns:ns611="http://www.example.com/Origination/http/bin/OriginationServiceProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns6111="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTAlogFileonSuccess" xmlns:ns6112="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateCaseFailure_ReceiveFailureErrorLog_ZIONLog" xmlns:ns62="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAlarmPointLog" xmlns:ns621="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateSFDCCaseFailure_ArchivetoESGFolderFailed_ZIONLog" xmlns:ns6211="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnFailur" xmlns:ns6212="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateSFDCCase_WriteAlarmPointLog" xmlns:ns63="http://www.example.com/Origination/file/bin/OriginationProcess/WriteAlarmPointLog" xmlns:ns631="http://www.example.com/Origination/http/bin/OriginationServiceProcess/CreateSFDCCaseFailure_ResponseArchivalFailure_ZIONLog" xmlns:ns6311="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns6312="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnAppConfigFailur" xmlns:ns632="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_WriteAlarmPointLog_ArchiveZIONLocal" xmlns:ns64="http://www.example.com/Origination/http/bin/OriginationProcess/GlobalFaultWriteTALogstoDisk" xmlns:ns641="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateSFDCCaseFailure_ResponseArchivalFailure_ZIONLog" xmlns:ns6411="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateCaseFailure_LoadCreateActivityNodeXSLFailed_ArchiveZIONLocal" xmlns:ns6412="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteErrorLo" xmlns:ns642="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_WriteAlarmPointLog_ArchiveZIONLocal" xmlns:ns65="http://www.example.com/Origination/http/bin/OriginationProcess/GlobalFaultWriteTALogstoDisk" xmlns:ns650="http://www.mismo.org/residential/2009/schemas" xmlns:ns651="http://www.example.com/Origination/file/bin/OriginationServiceProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns6511="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateSFDCCaseFailure_ReceiveFailureErrorLog_ZIONLocal" xmlns:ns6512="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnAppConfiFailure" xmlns:ns652="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateCase_ReplyFailureGFH" xmlns:ns66="http://www.example.com/Origination/file/bin/OriginationProcess/GlobalFaultWriteTALogstoDisk" xmlns:ns661="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateSFDCCaseFailure_ReceiveFailureErrorLog_ZIONLocal" xmlns:ns6611="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnFailue" xmlns:ns662="http://www.example.com/Origination/http/bin/OriginationServiceProcess/CreateSFDCCaseFailure_RequestArchivalFailed_ZIONLog" xmlns:ns663="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns67="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTALogonSuccess" xmlns:ns671="http://www.example.com/Origination/file/bin/EDIOriginationProcess/Invoke" xmlns:ns6711="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteCreateActivityNodeXSLFailtoAlarmPoint" xmlns:ns672="http://www.example.com/EDI872/http/bin/EDIOriginationProcess/Receive" xmlns:ns6721="http://www.example.com/Origination/file/bin/OriginationServiceStringProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns68="http://www.example.com/Origination/http/bin/OriginationProcess/WriteTALogonSuccess" xmlns:ns681="http://www.example.com/Origination/file/bin/EDIOriginationProcess/AlarmPointLog_CreateSFDCCaseFailure_ArchiveZIONLocal" xmlns:ns6811="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/TransactionUUIDFiles" xmlns:ns69="http://www.example.com/Origination/file/bin/OriginationProcess/WriteTALogonSuccess" xmlns:ns691="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateSFDCCaseFailure_ReplyFailureGFH_ZIONLog" xmlns:ns6911="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/RemoveExtractedTempFiles" xmlns:ns7="http://www.example.com/Origination/http/bin/OriginationProcess/ArchiveInboundRequestToSFTP" xmlns:ns70="http://www.example.com/Origination/http/bin/OriginationProcess/WriteReceiveFailure" xmlns:ns701="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ArchiveDownstreamRequestToSFTP" xmlns:ns7011="http://Radian.Operations.MortgageIns.Common.Schemas.MORTGAGEINS_XCM.Wrapper" xmlns:ns71="http://www.example.com/Origination/http/bin/OriginationProcess/WriteReceiveFailure" xmlns:ns710="http://www.example.com/EDI872/sftp/bin/EDIOriginationProcess/Invoke1" xmlns:ns7101="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteCreateActivityNodeXSLFailtoAlarmpoint" xmlns:ns711="http://www.example.com/Origination/sftp/bin/EDIOriginationProcess/ArchiveDownstreamRequestToSFTP" xmlns:ns72="http://www.example.com/Origination/file/bin/OriginationProcess/WriteReceiveFailure" xmlns:ns721="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ArchiveRequestToESGFolder" xmlns:ns7211="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteFailedZipToEncryptedLocation" xmlns:ns73="http://www.example.com/Origination/http/bin/OriginationProcess/WriteReceiveFailureTALog" xmlns:ns731="http://www.example.com/Origination/file/bin/EDIOriginationProcess/ArchiveRequestToESGFolder" xmlns:ns7311="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedZipToEncryptedLocation" xmlns:ns74="http://www.example.com/Origination/http/bin/OriginationProcess/WriteReceiveFailureTALog" xmlns:ns741="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateCase_RequestArchivalFailure" xmlns:ns7411="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedZipToEncryptedLocationFailedAlarmpoint" xmlns:ns75="http://www.example.com/Origination/file/bin/OriginationProcess/WriteReceiveFailureTALog" xmlns:ns751="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateCaseFailure_RequestArchivalFailure_WriteOnZIONLog" xmlns:ns7511="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedZipToEncryptedLocationFailedAlarmpoin" xmlns:ns76="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeLenderPostBackBasicAuthHTTP" xmlns:ns761="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateCaseFailure_RequestArchivalFailure_WriteOnZIONLog" xmlns:ns7611="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteFailedZipToEncryptedLocationFailedAlarmpoint" xmlns:ns77="http://www.example.com/Origination/http/bin/OriginationProcess/InvokeLenderPostBackBasicAuthHTTP" xmlns:ns771="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateCaseFailure_RequestArchivalToESGFailure_WriteOnZIONLog" xmlns:ns7711="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteCreateActivityNodeXSLFaillAlarmpoint" xmlns:ns78="http://www.example.com/Origination/http/bin/OriginationProcess/WriteToPostbackToSFTPBasicAuth" xmlns:ns781="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ArchiveDownstreamResponseToSFTP" xmlns:ns7811="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteCreateActivityNodeXSLFaillAlarmpoint" xmlns:ns79="http://www.example.com/Origination/http/bin/OriginationProcess/WriteToPostbackToSFTPBasicAuth" xmlns:ns791="http://www.example.com/Origination/sftp/bin/EDIOriginationProcess/ArchiveDownstreamResponseToSFTP" xmlns:ns7911="http://www.example.com/OriginationDocuments/cde/NYCBTextToXML" xmlns:ns8="http://www.example.com/Origination/sftp/bin/OriginationProcess/ArchiveInboundRequestToSFTP" xmlns:ns80="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteToPostbackToSFTPBasicAuth" xmlns:ns801="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateCase_ResponseArchivalFailure" xmlns:ns8011="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/AddFileNames" xmlns:ns81="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAsyncTransactionTALog" xmlns:ns810="http://www.example.com/OriginationService/http/bin/OriginationServiceSecureProcess/Invoke1" xmlns:ns8101="http://www.example.com/OriginationServiceLocal/http/bin/OriginationServiceProcess/Invoke" xmlns:ns8102="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/AppConfig" xmlns:ns811="http://www.example.com/Origination/file/bin/EDIOriginationProcess/CreateCaseFailure_ResponseArchivalFailure_WriteOnZIONLog" xmlns:ns8111="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteAlarmPointLog" xmlns:ns82="http://www.example.com/Origination/file/bin/OriginationProcess/WriteAsyncTransactionTALog" xmlns:ns821="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateCase_LoadCreateActivityStyleSheetFailure" xmlns:ns8211="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteReceiveFailureAlarmPointLog" xmlns:ns83="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResponseToArchiveAtGFH" xmlns:ns831="http://www.example.com/Origination/http/bin/EDIOriginationProcess/RequestArchivalFailure_CreateCase" xmlns:ns8311="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteFailedXCMToSFTP" xmlns:ns84="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResponseToArchiveAtGFH" xmlns:ns841="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ResponseArchivalFailed_CreateCase" xmlns:ns8411="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedXCMToSFTP" xmlns:ns85="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteResponseToArchiveAtGFH" xmlns:ns851="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ResponseArchivalFailed_NotifyFailure" xmlns:ns8511="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/Errorrecords" xmlns:ns86="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRequestArchivalFailure" xmlns:ns861="http://www.example.com/Origination/http/bin/EDIOriginationProcess/RecieveFailure_NotifyFailure" xmlns:ns8611="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocuments/WriteFailedXCMToSFTP" xmlns:ns87="http://www.example.com/Origination/http/bin/OriginationProcess/AlertLogOnReplyFailureGFH" xmlns:ns871="http://www.example.com/Origination/http/bin/EDIOriginationProcess/WriteAlarmPointLog_NotifyFailure" xmlns:ns8711="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocuments/WriteFailedRecordXMLToSFTP" xmlns:ns88="http://www.example.com/Origination/http/bin/OriginationProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns881="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ReplyFailureGFH_NotifyFailure" xmlns:ns8811="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedRecordXMLAlarmpoint" xmlns:ns89="http://www.example.com/Origination/file/bin/OriginationProcess/WriteAlertLogOnReplyFailureGFH" xmlns:ns891="http://www.example.com/EDI872/cde/EDI997" xmlns:ns8911="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedRecordXMLAlarmpoint1" xmlns:ns892="http://www.example.com/Origination/http/bin/EDIOriginationProcess/LoadCreateActivityStyleSheetFailure_NotifyFailure" xmlns:ns9="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationRequest" xmlns:ns90="http://www.example.com/Origination/http/bin/OriginationProcess/WriteRequestArchivalFailure" xmlns:ns901="http://www.example.com/Origination/http/bin/OriginationServiceProcess/RecieveFailureErrorLog_NotifyFailure" xmlns:ns9011="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteFailedRecordXMLAlarmpoint" xmlns:ns902="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ArchiveDownstreamRequest" xmlns:ns91="http://www.example.com/Origination/sftp/bin/OriginationProcess/WriteRequestArchivalFailure" xmlns:ns910="http://www.example.com/OriginationService/http/bin/OriginationServiceSecureProcess/ArchiveSOAP11Request" xmlns:ns9101="http://www.radian.biz/ClientConnectivity/zion/OriginationDocuments/StatusCodeConfig" xmlns:ns911="http://www.informatica.com/B2B/X12.Wrapper" xmlns:ns9111="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteFailedZipFileToEncryptedLocationFailedAlarmpoint" xmlns:ns912="http://www.example.com/Origination/http/bin/EDIOriginationProcess/ArchiveDownstreamResponse" xmlns:ns92="http://www.example.com/Origination/file/bin/OriginationProcess/WriteRequestArchivalFailure" xmlns:ns921="http://www.example.com/Origination/http/bin/OriginationServiceProcess/WriteAlarmPointLog_NotifyFailure" xmlns:ns9211="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedZipFileToEncryptedLocationFailedAlarmpoint" xmlns:ns922="http://www.example.com/Origination/http/bin/EDIOriginationProcess/CreateTouchpointEventInvoke" xmlns:ns93="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponseWriteFailure" xmlns:ns931="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ReplyFailureGFH_NotifyFailure" xmlns:ns932="http://www.example.com/OriginationDocuments/http/bin/OriginationDocuments/WriteFailedRecordXMLToSFTPFailedAlarmPoint" xmlns:ns94="http://www.example.com/Origination/http/bin/OriginationProcess/WriteACKNACKResponseWriteFailure" xmlns:ns941="http://www.example.com/Origination/http/bin/OriginationServiceProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure" xmlns:ns942="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteFailedRecordXMLToSFTPFailedAlarmPoint" xmlns:ns95="http://www.example.com/Origination/file/bin/OriginationProcess/WriteACKNACKResponseWriteFailure" xmlns:ns951="http://www.example.com/Origination/http/bin/OriginationServiceProcess/RequestArchivalFailed_NotifyFailure" xmlns:ns952="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteTALogOnReceiveFailure1" xmlns:ns96="http://www.example.com/Origination/http/bin/OriginationProcess/WriteVendorIDMisMismatch" xmlns:ns961="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ArchiveToESGFolderFailed_NotifyFailure" xmlns:ns962="http://www.example.com/OriginationDocuments/custom/bin/OriginationDocuments/RemoveTempFiles1" xmlns:ns97="http://www.example.com/Origination/http/bin/OriginationProcess/WriteResoponseToArchiveFailure" xmlns:ns971="http://www.example.com/Origination/http/bin/OriginationServiceProcess/ResponseArchivalFailed_NotifyFailure" xmlns:ns972="http://www.example.com/OriginationDocuments/file/bin/OriginationDocuments/WriteRemoveTempFilesFailed1" xmlns:ns98="http://www.example.com/Origination/file/bin/OriginationProcess/WriteResoponseToArchiveFailure" xmlns:ns981="http://www.example.com/OriginationServiceLocal/http/bin/OriginationServiceProcess/InvokeOriginationProcess" xmlns:ns9811="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/LoadCreateActivityNodeXSLFailed_NOtifyFailure" xmlns:ns982="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocumentsProcess/Receive" xmlns:ns99="http://www.example.com/Origination/file/bin/OriginationProcess/WriteResponseToArchiveFailureAlarmLog" xmlns:ns991="http://www.example.com/OriginationPOCLocal/http/bin/OriginationServiceProcess/Receive" xmlns:ns9911="http://www.example.com/Origination/http/bin/OriginationServiceStringProcess/RequestArchivalFailed_NotifyFailure" xmlns:ns992="http://www.example.com/OriginationDocuments/sftp/bin/OriginationDocumentsProcess/UploadEachZipToS3" xmlns:rdelivery="http://www.intel.com/soae/localService/ReliableDelivery-2009a/" xmlns:soae-bpel="http://www.intel.com/soae/bpel/bpel20-2007a/" xmlns:soae-cache="http://www.intel.com/soae/data-cache/2007a/" xmlns:soae-fault="http://www.intel.com/soae/bpelFault-2009a/" xmlns:soae-wsse="http://www.intel.com/soae/localService/wssecDefinition-2007a/" xmlns:soae-xf="http://www.intel.com/soae/xpath/" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soapenv12="http://www.w3.org/2003/05/soap-envelope" xmlns:sql="urn:soae.intel.com/sql" xmlns:sref="http://docs.oasis-open.org/wsbpel/2.0/serviceref" xmlns:tns="http://www.example.com/Origination/bpel/OriginationAsynchronousPostBackProcess" xmlns:tns1="http://www.example.com/OriginationServiceLocal/bpel/OriginationServiceSecureProcess" xmlns:tns11="http://www.example.com/EDI872/bpel/EDIOriginationProcess" xmlns:tns12="http://www.example.com/OriginationPOCLocal/bpel/OriginationServiceProcess" xmlns:tns13="http://www.example.com/OriginationDocuments/bpel/OriginationDocumentsProcess" xmlns:tns2="http://www.example.com/Origination/bpel/OriginationProcess" xmlns:tns21="http://www.example.com/OriginationPOCLocal/bpel/OriginationServiceStringProcess" xmlns:tns3="http://www.example.com/Test/bpel/Process" xmlns:tns4="http://www.example.com/Sample/bpel/Process" xmlns:wed="http://www.intel.com/soae/localService/wsaddressingEprDefinition-2007a/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:wsse="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd" xmlns:wsse200207="http://schemas.xmlsoap.org/ws/2002/07/secext" xmlns:wsse200212="http://schemas.xmlsoap.org/ws/2002/12/secext" xmlns:wsse200306="http://schemas.xmlsoap.org/ws/2003/06/secext" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" soae-bpel:version="2" exitOnStandardFault="no" name="OriginationAsynchronousPostBackProcess" suppressJoinFailure="yes" targetNamespace="http://www.example.com/Origination/bpel/OriginationAsynchronousPostBackProcess">
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/SOAPProperties.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/Origination/SOAPProperties"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/ComputeBlockCipher.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/LPA/schTradingPartnerMessage.xsd" namespace="http://Radian.Matrix.MortgageIns.Origination.MDC.PublishTPProfileData"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" location="OriginationAsynchronousPostBackProcessArtifacts.wsdl" namespace="http://www.example.com/Origination/bpel/OriginationAsynchronousPostBackProcessArtifacts"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" location="wsdl/RateQuote.wsdl" namespace="http://Radian.Matrix.MortgageIns.Origination.RateQuote"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/XCM4.0.4/MESSAGE.xsd" namespace="http://Radian.Services.Schemas"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/AppConfig.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/Origination/AppConfig"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/ComputeSHACredentials.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/ComputeSHADigest"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/MISMO2.3.1/MI_Query_Response_2_3_1.xsd" namespace="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/MISMO2.3.1/MI_Query_Request_2_3_1.xsd" namespace="http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_REQUEST_v2_3_1"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/MISMO3.3/MISMO_3.3.0_B299.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/Reference_Model_v3.2.0_CR_B291_20120601/xlink.xsd" namespace="http://www.w3.org/1999/xlink"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/AuthorizationResponse.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/AuthorizationResponse"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="MISMO2.3.1/MORTGAGE_INSURANCE_APPLICATION_RESPONSE_v2_3_1_NewNamespace.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/AuthenticationResponse.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/AuthenticationResponse"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="systemLib/localServices/wsaddressEprDefinition.xsd" namespace="http://www.intel.com/soae/localService/wsaddressingEprDefinition-2007a/"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="MISMO2.3.1/MORTGAGE_INSURANCE_APPLICATION_REQUEST_v2_3_1_NewNameSpace.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationRequest"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" location="systemLib/localServices/soaeHttpFaults.wsdl" namespace="http://www.intel.com/soae/bpelFault-2009a/"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/StatusCodeConfig.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/Origination/StatusCodeConfig"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/TransactionActivity.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/TransactionActivity"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/ExceptionConfig.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="xsd/LoadConfig.xsd" namespace="http://www.radian.biz/ClientConnectivity/zion/LoadConfig"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="systemLib/localServices/soaeBpelFault.xsd" namespace="http://www.intel.com/soae/bpelFault-2009a/"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" location="systemLib/localServices/ldap.wsdl" namespace="http://www.intel.com/soae/localService/ldap-2007a/"/>
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/" location="systemLib/localServices/kerberosKDC.wsdl" namespace="http://www.intel.com/soae/localService/kerberosKDC-2009a/"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="systemLib/metadata/metadata.xsd" namespace="http://www.intel.com/soae/protocolMetadata-2007a.xsd"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="systemLib/importedSchemas/soap-envelope-12.xsd" namespace="http://www.w3.org/2003/05/soap-envelope"/>
    <bpws:import importType="http://www.w3.org/2001/XMLSchema" location="systemLib/importedSchemas/soap-envelope.xsd" namespace="http://schemas.xmlsoap.org/soap/envelope/"/>
    <bpws:partnerLinks>
        <bpws:partnerLink myRole="role" name="Receive" partnerLinkType="ns309:ReceiveServicePartnerLinkType"/>
        <bpws:partnerLink name="InvokeLenderPostbackURL" partnerLinkType="ns313:InvokeLenderPostbackURLServicePartnerLinkType" partnerRole="role"/>
        <bpws:partnerLink name="GlobalFaultWriteTALogstoDisk" partnerLinkType="ns322:GlobalFaultWriteTALogstoDiskServicePartnerLinkType" partnerRole="role"/>
        <bpws:partnerLink name="WriteReceiveFailureTALog" partnerLinkType="ns319:WriteReceiveFailureTALogServicePartnerLinkType" partnerRole="role"/>
        <bpws:partnerLink name="WriteToPostbackToSFTP" partnerLinkType="ns314:WriteToPostbackToSFTPServicePartnerLinkType" partnerRole="role"/>
        <bpws:partnerLink name="WriteAsyncTransactionTALog" partnerLinkType="ns317:WriteAsyncTransactionTALogServicePartnerLinkType" partnerRole="role"/>
        <bpws:partnerLink name="DecryptCredentials" partnerLinkType="ns312:DecryptCredentialsServicePartnerLinkType" partnerRole="role"/>
        <bpws:partnerLink name="WriteTALogGFH" partnerLinkType="ns326:WriteTALogGFHServicePartnerLinkType" partnerRole="role"/>
    </bpws:partnerLinks>
    <bpws:variables>
        <bpws:variable name="Receive_IMA_Key" type="xsd:anyType"/>
    </bpws:variables>
    <bpws:faultHandlers>
        <bpws:catchAll>
            <bpws:sequence>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetTransactionStatusFailed" expression="xpath:{soae-xf:set-request-status-failed()}" keepSrcElementName="false" name="SetTransactionStatusFailed" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AppName" expression="xpath:{'Origination'}" keepSrcElementName="false" name="AppName" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{''}" keepSrcElementName="false" name="ResponseXML" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ErrorLogPath" expression="xpath:{'/opt/apps/zion/logs/'}" keepSrcElementName="false" name="AssignErrorLogPath" xDestination="$ErrorLogPath"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALogPath" expression="xpath:{'/opt/apps/zion/transactionlogs/'}" keepSrcElementName="false" name="AssignTALogPath" xDestination="$TALogPath"/>
                </bpws:extensionActivity>
                <bpws:if name="If_GlobalError_is_Nan">
                    <bpws:condition>soae-cache:is-nan(soae-cache:get-string('msg:GlobalError'))</bpws:condition>
                    <bpws:sequence name="Sequence25">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ReceiveTransactionUUID" expression="xpath:{soae-xf:get-UUID()}" keepSrcElementName="false" name="ReceiveTransactionUUID" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ReceiveFault_ZIONLog" logLevel="verbose" name="ReceiveFault_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                <soae-ab:comment>Receive failure happened.</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="ReceiveFailure" name="ReceiveFailure">
                                <soae-ab:data>
                                    <ns2:EXCEPTIONS>
                                    <ns2:EXCEPTION>
                                    <ns2:RequestUUID>xpath:{$ReceiveTransactionUUID}</ns2:RequestUUID>
                                    <ns2:TransactionID>xpath:{soae-xf:get-transaction-id()}</ns2:TransactionID>
                                    <ns2:CertificateNumber>xpath:{'NA'}</ns2:CertificateNumber>
                                    <ns2:DateTimeStamp>xpath:{soae-xf:get-time()}</ns2:DateTimeStamp>
                                    <ns2:ApplicationName>xpath:{'Origination'}</ns2:ApplicationName>
                                    <ns2:ExceptionCode>xpath:{'ZION_APP_5001'}</ns2:ExceptionCode>
                                    <ns2:ExceptionName>xpath:{'ReceiveFailed'}</ns2:ExceptionName>
                                    <ns2:Description>xpath:{'Failed to receive request'}</ns2:Description>
                                    <ns2:LogLevel>xpath:{'ERROR'}</ns2:LogLevel>
                                    <ns2:Priority>xpath:{'P1'}</ns2:Priority>
                                    <ns2:Severity>xpath:{'CRITICAL'}</ns2:Severity>
                                    <ns2:AdditionalInfo>xpath:{'OriginationAsynchronousPostBack - Failed to receive the request'}</ns2:AdditionalInfo>
                                    <ns2:ProviderName>xpath:{'NA'}</ns2:ProviderName>
                                    <ns2:ResponseName>xpath:{'Communication'}</ns2:ResponseName>
                                    <ns2:ResponseCondition>xpath:{'Error'}</ns2:ResponseCondition>
                                    <ns2:ResponseCode>xpath:{'6001'}</ns2:ResponseCode>
                                    <ns2:ResponseDescription>xpath:{'System not available'}</ns2:ResponseDescription>
                                    <ns2:IncomingFileName>xpath:{'NA'}</ns2:IncomingFileName>
                                    </ns2:EXCEPTION>
                                    </ns2:EXCEPTIONS>
                                </soae-ab:data>
                                <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTION" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}RequestUUID" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{$ReceiveTransactionUUID}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}TransactionID" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.1" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{soae-xf:get-transaction-id()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}CertificateNumber" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.2" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}DateTimeStamp" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.3" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{soae-xf:get-time()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ApplicationName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.4" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{'Origination'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ExceptionCode" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.5" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.5/@element">
                                    <value>xpath:{'ZION_APP_5001'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ExceptionName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.6" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.6/@element">
                                    <value>xpath:{'ReceiveFailed'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Description" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.7" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.7/@element">
                                    <value>xpath:{'Failed to receive request'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}LogLevel" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.8" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.8/@element">
                                    <value>xpath:{'ERROR'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Priority" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.9" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.9/@element">
                                    <value>xpath:{'P1'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Severity" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.10" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.10/@element">
                                    <value>xpath:{'CRITICAL'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}AdditionalInfo" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.11" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.11/@element">
                                    <value>xpath:{'OriginationAsynchronousPostBack - Failed to receive the request'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ProviderName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.12" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.12/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.13" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.13/@element">
                                    <value>xpath:{'Communication'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseCondition" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.14" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.14/@element">
                                    <value>xpath:{'Error'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseCode" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.15" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.15/@element">
                                    <value>xpath:{'6001'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseDescription" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.16" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.16/@element">
                                    <value>xpath:{'System not available'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}IncomingFileName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.17" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.17/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="false" form="qualified" index="1" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                </soae-ab:data2>
                                <soae-ab:variables/>
                            </soae-ab:XMLBuilder>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig" destinationTypeKind="ELEMENT" destinationVariable="LoadingConfigs" name="LoadingConfigs">
                                <soae-ab:explicitImports>
                                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/LoadConfig.xsd" tns="http://www.radian.biz/ClientConnectivity/zion/LoadConfig"/>
                                </soae-ab:explicitImports>
                                <soae-ab:data>
                                    <ns1:LoadConfig>
                                    <ns1:Load>'LOAD'</ns1:Load>
                                    </ns1:LoadConfig>
                                </soae-ab:data>
                                <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}Load" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <value>'LOAD'</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                </soae-ab:data2>
                                <soae-ab:variables/>
                            </soae-ab:XMLBuilder>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="ReceiveFailureTAXML" name="ReceiveFailureTAXML">
                                <soae-ab:data>
                                    <ns3:TRANSACTIONACTIVITY>
                                    <ns3:HEADER>
                                    <ns3:TransId>xpath:{soae-xf:get-transaction-id()}</ns3:TransId>
                                    <ns3:NodeName>xpath:{soae-xf:get-node-name()}</ns3:NodeName>
                                    <ns3:SourceApplicationName>xpath:{'Origination'}</ns3:SourceApplicationName>
                                    <ns3:SourceFileIdentifier>xpath:{$ReceiveTransactionUUID}</ns3:SourceFileIdentifier>
                                    <ns3:BatchIdentifier>xpath:{'NA'}</ns3:BatchIdentifier>
                                    <ns3:CertificateIdentifier>xpath:{'NA'}</ns3:CertificateIdentifier>
                                    <ns3:SourceFileName>xpath:{'NA'}</ns3:SourceFileName>
                                    <ns3:TotalRecordCount>xpath:{0}</ns3:TotalRecordCount>
                                    <ns3:TotalMessageCount>xpath:{0}</ns3:TotalMessageCount>
                                    <ns3:TotalTransTimeInSecs>xpath:{0}</ns3:TotalTransTimeInSecs>
                                    <ns3:Status>xpath:{'FAIL'}</ns3:Status>
                                    </ns3:HEADER>
                                    <ns3:ACTIVITIES>
                                    <ns3:ACTIVITY Status="FAIL">
                                    <ns3:DateTime>xpath:{soae-xf:get-time()}</ns3:DateTime>
                                    <ns3:Code>xpath:{'ZION_APP_5001'}</ns3:Code>
                                    <ns3:Description>xpath:{'Failed to receive request'}</ns3:Description>
                                    </ns3:ACTIVITY>
                                    </ns3:ACTIVITIES>
                                    </ns3:TRANSACTIONACTIVITY>
                                </soae-ab:data>
                                <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TransId" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{soae-xf:get-transaction-id()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}NodeName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{soae-xf:get-node-name()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceApplicationName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'Origination'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceFileIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{$ReceiveTransactionUUID}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}BatchIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}CertificateIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.5" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.5/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceFileName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.6" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.6/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalRecordCount" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.7" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.7/@element">
                                    <value>xpath:{0}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalMessageCount" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.8" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.8/@element">
                                    <value>xpath:{0}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalTransTimeInSecs" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.9" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.9/@element">
                                    <value>xpath:{0}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Status" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.10" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.10/@element">
                                    <value>xpath:{'FAIL'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.11"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.1/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}DateTime" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{soae-xf:get-time()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Code" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{'ZION_APP_5001'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Description" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'Failed to receive request'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.3"/>
                                    </children>
                                    <attributes>

                                    <attribute form="qualified" name="Status">FAIL</attribute>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                </soae-ab:data2>
                                <soae-ab:variables/>
                            </soae-ab:XMLBuilder>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeReceiveFailureErrorLog_NotifyFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TAReceiveFailureErrorLog_NotifyFailureRequestTransformationFailed" logLevel="verbose" name="TAReceiveFailureErrorLog_NotifyFailureRequestTransformationFailed" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>ReceiveFailureErrorLog_NotifyFailureRequestTransformationFailed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:catch>
                                <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TAReceiveFailureErrorLog_NotifyFailureInvocationFailed" logLevel="verbose" name="TAReceiveFailureErrorLog_NotifyFailureInvocationFailed" nodeName="true" optionalData="$XSLTransformation_RecieveFailureErrorLog" transactionID="true">
                                    <soae-ab:comment>TAReceiveFailureErrorLog_NotifyFailureInvocationFailed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence109">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_RecieveFailureErrorLog" from="$LoadingConfigs" name="XSLTransformation_RecieveFailureErrorLog" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$ReceiveTransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="''"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$AppName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5001'"/>
                                    <soae-ab:param name="ExceptionName" value="'ReceiveFailed'"/>
                                    <soae-ab:param name="Description" value="'Failed to Receive request'"/>
                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>
                                    <soae-ab:param name="Severity" value="'CRITICAL'"/>
                                    <soae-ab:param name="Priority" value="'P1'"/>
                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - N/A'"/>
                                    <soae-ab:param name="ProviderName" value="''"/>
                                    <soae-ab:param name="ResponseName" value="'Communication Failure'"/>
                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>
                                    <soae-ab:param name="ResponseCode" value="'6001'"/>
                                    <soae-ab:param name="ResponseDescription" value="'System not available'"/>
                                    <soae-ab:param name="IncomingFileName" value="''"/>
                                    <soae-ab:param name="KnowledgeBase" value="''"/>
                                    <soae-ab:param name="Environment" value="''"/>
                                    <soae-ab:param name="OperationName" value="''"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="RecieveFailedErrorLog_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="RecieveFailedErrorLog_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="RecieveFailedErrorLog_NotifyFailure" partnerLink="RecieveFailedErrorLog_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_RecieveFailureErrorLog}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="RecieveFailedErrorLog_NotifyFailureInput" inputMsgPart="body" operation="RecieveFailedErrorLog_NotifyFailureOperation" outputMsg="RecieveFailedErrorLog_NotifyFailureOutput" outputMsgPart="body" port="RecieveFailedErrorLog_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RecieveFailedErrorLog_NotifyFailure}RecieveFailedErrorLog_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RecieveFailedErrorLog_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/RecieveFailedErrorLog_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TAReceiveFailureErrorLog_NotifyFailure_Success" logLevel="verbose" name="TAReceiveFailureErrorLog_NotifyFailure_Success" nodeName="false" optionalData="$XSLTransformation_RecieveFailureErrorLog" transactionID="false">
                                    <soae-ab:comment>TAReceiveFailureErrorLog_NotifyFailure_Success</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopeReceiveFailureTALog">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="WriteTAReceiveFailureFailed_ZIONLog" logLevel="verbose" name="WriteTAReceiveFailureFailed_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Transaction activity log writing failed on receive failure.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:extensionActivity>
                                <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="WriteReceiveFailureTALog" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="concat('file:///opt/apps/zion/transactionlogs/',soae-xf:get-node-name(),'_Origination_',$ReceiveTransactionUUID,'_',exslt:format-date(&quot;now-local&quot;, &quot;ddMMyyyy&quot;),'-',exslt:format-date(&quot;now-local&quot;, &quot;HHmmssSSS&quot;),'.xml')" endpointConfigurationType="Configured" imaKey="WriteReceiveFailureTALog_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="WriteReceiveFailureTALog" partnerLink="WriteReceiveFailureTALog" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$ReceiveFailureTAXML}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="true" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:fileTransport serviceURI="file:///opt/apps/zion/transactionlogs/" soapAction=""/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="WriteReceiveFailureTALogInput" inputMsgPart="body" operation="WriteReceiveFailureTALogOperation" outputMsg="WriteReceiveFailureTALogOutput" outputMsgPart="body" port="WriteReceiveFailureTALogPort" service="{http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteReceiveFailureTALog}WriteReceiveFailureTALogService" soapVersion="1.1" tns="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteReceiveFailureTALog" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/WriteReceiveFailureTALog.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                </soae-ab:InvokeBuilder>
                            </bpws:extensionActivity>
                        </bpws:scope>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ReceiveFailure_ZIONLog" logLevel="verbose" name="ReceiveFailure_ZIONLog" nodeName="false" optionalData="$ReceiveFailure" transactionID="false">
                                <soae-ab:comment>Exception log follows on Receive failure:</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TAlogReceiveFailure_ZIONLog" logLevel="verbose" name="TAlogReceiveFailure_ZIONLog" nodeName="false" optionalData="$ReceiveFailureTAXML" transactionID="false">
                                <soae-ab:comment>Transaction log follows on Receive failure:</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:ReplyBuilder addAttachments="false" compression="identity" destinationVariable="" messageBodyFrom="" name="ReplyReceiveFailure" passThroughEnabled="false" rawEnvelopeFrom="" sendRawEnvelope="false" throwFault="false" xmlResponse="false">
                                <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{&quot;Receive step failed&quot;}"/>
                                <soae-ab:outboundPolicies/>
                            </soae-ab:ReplyBuilder>
                        </bpws:extensionActivity>
                        <bpws:exit name="ExitOnReceiveFailure"/>
                    </bpws:sequence>
                    <bpws:elseif>
                        <bpws:condition>soae-cache:get-string('msg:GlobalError')='01'</bpws:condition>
                        <bpws:sequence name="Sequence58">
                            <bpws:extensionActivity>
                                <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GenericFault_ZIONLog" logLevel="verbose" name="GenericFault_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Generic fault occured in wrokflow process.</soae-ab:comment>
                                </soae-ab:TransactionLog>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="GenericFailure" from="$XMLforGlobalException" name="GenericFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5011'"/>
                                    <soae-ab:param name="ExceptionName" value="'GenericFailure'"/>
                                    <soae-ab:param name="Description" value="'Generic failure occurred processing transaction'"/>
                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>
                                    <soae-ab:param name="Severity" value="'CRITICAL'"/>
                                    <soae-ab:param name="Priority" value="'P1'"/>
                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - NA'"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="'Application'"/>
                                    <soae-ab:param name="ResponseCondition" value="'Error'"/>
                                    <soae-ab:param name="ResponseCode" value="'5001'"/>
                                    <soae-ab:param name="ResponseDescription" value="'Application Error'"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                </soae-ab:XSLTransform>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$GenericFailure}" keepSrcElementName="false" name="UpdateGenericFailure" xDestination="$XMLforGlobalException"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>soae-cache:get-string('msg:GlobalError')='02' </bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="AppConfigFault_ZIONLog" logLevel="verbose" name="AppConfigFault_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                <soae-ab:comment>Application configuration fault occured.</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>soae-cache:get-string('msg:GlobalError')='03'</bpws:condition>
                        <bpws:sequence name="Sequence57">
                            <bpws:extensionActivity>
                                <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GeneralError_ZIONLog" logLevel="verbose" name="GeneralError_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>General error.</soae-ab:comment>
                                </soae-ab:TransactionLog>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ErrorLogPath" expression="xpath:{$AppConfig/ns4:ErrorLogPath/text()}" keepSrcElementName="false" name="UpdateErrLogPath" xDestination="$ErrorLogPath"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALogPath" expression="xpath:{$AppConfig/ns4:TransactionActivityPath/text()}" keepSrcElementName="false" name="UpdateTALogPath" xDestination="$TALogPath"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>soae-cache:get-string('msg:GlobalError')='04'</bpws:condition>
                        <bpws:sequence name="Sequence45">
                            <bpws:extensionActivity>
                                <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ResponseFail_ZIONLog" logLevel="verbose" name="ResponseFail_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Response sending failed.</soae-ab:comment>
                                </soae-ab:TransactionLog>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:elseif>
                </bpws:if>
                <bpws:if name="If_AppConfig_is_Loaded">
                    <bpws:condition>soae-cache:get-string('msg:GlobalError')!='02'</bpws:condition>
                    <bpws:sequence name="Sequence47">
                        <bpws:if name="If_WriteRequest_Enabled_and_not_archived">
                            <bpws:condition>$AppConfig/ns4:RequestResponseArchivalEnabled='true' and $RequestArchivedFlag='false'
							</bpws:condition>
                            <bpws:scope name="ScopeInvokeArchiveComponentToArchiveRequestAtGFH">
                                <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="WriteRequestFailedatGFH_ZIONLog" logLevel="verbose" name="WriteRequestFailedatGFH_ZIONLog" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>FAILED TO ARCHIVE REQUEST at GFH.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence144">
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteRequestToArchiveAtGFH}WriteRequestToArchiveAtGFHOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeArchiveComponentToRequestToArchiveAtGFH" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeArchiveComponentToRequestToArchiveAtGFH_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeArchiveComponentToRequestToArchiveAtGFH" partnerLink="InvokeArchiveComponentToRequestToArchiveAtGFH" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$Receive}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:metadata metadataSource="NEW" xpath="">
                                    <soae-ab:policies/>
                                    <soae-ab:httpRequest method="" query="" uri="/ArchiveComponent" version="HTTP/1.0">
                                    <soae-ab:header name="content-type" value="application/xml"/>
                                    <soae-ab:header name="uuid" value="xpath:{$TransactionUUID}"/>
                                    <soae-ab:header name="appname" value="xpath:{$ApplicationName}"/>
                                    <soae-ab:header name="foldername" value="xpath:{$AppConfig/ns4:RequestArchivalPath}"/>
                                    </soae-ab:httpRequest>
                                    </soae-ab:metadata>
                                    <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="" serviceURI="https://ae1bdcon1:9000/ArchiveComponent" soapAction="" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeArchiveComponentToRequestToArchiveAtGFHInput" inputMsgPart="body" operation="InvokeArchiveComponentToRequestToArchiveAtGFHOperation" outputMsg="InvokeArchiveComponentToRequestToArchiveAtGFHOutput" outputMsgPart="body" port="InvokeArchiveComponentToRequestToArchiveAtGFHPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToRequestToArchiveAtGFH}InvokeArchiveComponentToRequestToArchiveAtGFHService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToRequestToArchiveAtGFH" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToRequestToArchiveAtGFH.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="RequestArchivedFlag" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateRequestFlagAtGFH" xDestination="$RequestArchivedFlag"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                        </bpws:if>
                        <bpws:scope name="ScopeIfLoadConfigFilesFailed">
                            <bpws:faultHandlers>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeErrorDetermineRequestType_NotifyFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAErrorDetermineRequestType_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorDetermineRequestType_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorDetermineRequestType_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TAErrorDetermineRequestType_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="'Transform to FailureNotificationComponent request failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorDetermineRequestType_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTAErrorDetermineRequestType_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAErrorDetermineRequestType_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorDetermineRequestType_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorDetermineRequestType_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAErrorDetermineRequestType_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="'Invocation Of FailureNotificationComponent Failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorDetermineRequestType_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAErrorDetermineRequestType_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence118">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_ErrorDetermineRequestType" from="$XMLforLoadingConfigs" name="XSLTransformation_ErrorDetermineRequestType" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>

                                    <soae-ab:param name="PolicyStatusType" value="''"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="ApplicationName" value="$AppName"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2011'"/>

                                    <soae-ab:param name="ExceptionName" value="'InvalidResponseContent'"/>

                                    <soae-ab:param name="Description" value="'Response content is not in expected format'"/>

                                    <soae-ab:param name="Loglevel" value="'WARNING'"/>

                                    <soae-ab:param name="Severity" value="'WARNING'"/>

                                    <soae-ab:param name="Priority" value="'P4'"/>

                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - N/A'"/>

                                    <soae-ab:param name="ProviderName" value="$VendorID"/>

                                    <soae-ab:param name="ResponseName" value="'Invalid incoming response content'"/>

                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>

                                    <soae-ab:param name="ResponseCode" value="'4007'"/>

                                    <soae-ab:param name="ResponseDescription" value="'Incoming response content is invalid'"/>

                                    <soae-ab:param name="IncomingFileName" value="'HTTPS'"/>

                                    <soae-ab:param name="KnowledgeBase" value="''"/>

                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>

                                    <soae-ab:param name="OperationName" value="$OperationType"/>

                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>

                                    <soae-ab:param name="CasePolicy" value="''"/>

                                    <soae-ab:param name="CaseStatistics" value="''"/>

                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>

                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>

                                    <soae-ab:param name="LoanIdentifierType" value="''"/>

                                    <soae-ab:param name="LoanStateDatetime" value="''"/>

                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="ErrorDetermineRequestType_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="ErrorDetermineRequestType_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="ErrorDetermineRequestType_NotifyFailure" partnerLink="ErrorDetermineRequestType_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_ErrorDetermineRequestType}"/>
                                    <soae-ab:outboundPolicies/>

                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ErrorDetermineRequestType_NotifyFailureInput" inputMsgPart="body" operation="ErrorDetermineRequestType_NotifyFailureOperation" outputMsg="ErrorDetermineRequestType_NotifyFailureOutput" outputMsgPart="body" port="ErrorDetermineRequestType_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorDetermineRequestType_NotifyFailure}ErrorDetermineRequestType_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorDetermineRequestType_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/ErrorDetermineRequestType_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAErrorDetermineRequestType_NotifyFailure_Success">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorDetermineRequestType_NotifyFailure_Success"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorDetermineRequestType_NotifyFailure_Success" from="$TransactionActivityXML" name="TAErrorDetermineRequestType_NotifyFailure_Success" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>

                                    <soae-ab:param name="Description" value="'Invocation of FailureNotificationComponent completed successfully'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorDetermineRequestType_NotifyFailure_Success}" keepSrcElementName="false" name="UpdateTAErrorDetermineRequestType_NotifyFailure_Success" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:if name="If_Configs_Loaded_Failed">
                                <bpws:condition>$LoadConfigFilesFlag='false'</bpws:condition>
                                <bpws:sequence name="Sequence79">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InputPayLoadGHF" expression="xpath:{$Receive/soapenv:Body/OriginationResponse/*}" keepSrcElementName="false" name="InputPayLoadGHF" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:Comment name="Comment12">Add new elseif block with request type determination to add new endpoint versionformat</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    <bpws:if name="If_Determine_IncomingRequestType_MISMO33">
                                    <bpws:condition>(namespace-uri($InputPayLoadGHF)='http://www.mismo.org/residential/2009/schemas') and (string($InputPayLoadGHF/ns650:ABOUT_VERSIONS/ns650:ABOUT_VERSION/ns650:AboutVersionIdentifier)='3.3.0')</bpws:condition>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{'MISMO33'}" keepSrcElementName="false" name="UpdateEndpointFormatVersion33" xDestination="$EndpointFormatVersion"/>
                                    </bpws:extensionActivity>
                                    <bpws:elseif>
                                    <bpws:condition>($InputPayLoadGHF/RESPONSE/RESPONSE_DATA) or ($InputPayLoadGHF/ns126:RESPONSE/ns126:RESPONSE_DATA)</bpws:condition>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{'MISMO231'}" keepSrcElementName="false" name="UpdateEndpointFormatVersion231" xDestination="$EndpointFormatVersion"/>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    <bpws:elseif>
                                    <bpws:condition>(namespace-uri($InputPayLoadGHF)='http://Radian.Services.Schemas')</bpws:condition>
                                    <bpws:sequence name="Sequence84">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{'XCM404'}" keepSrcElementName="false" name="UpdateEndpointFormatVersionXCM" xDestination="$EndpointFormatVersion"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseACKNamespace" expression="xpath:{'http://Radian.Services.Schemas'}" keepSrcElementName="false" name="UpdateResponseNACKNStoXCM" xDestination="$ResponseACKNamespace"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseACKRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateResponseNACKRootElementtoXCM" xDestination="$ResponseACKRootElement"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:elseif>
                                    <bpws:else>
                                    <bpws:throw faultName="bpws:missingRequest" name="ThrowUnableDetermineIncomingResponseType"/>
                                    </bpws:else>
                                    </bpws:if>
                                </bpws:sequence>
                            </bpws:if>
                        </bpws:scope>
                        <bpws:if name="If_IncomingRequestType_UnabletoDetermine">
                            <bpws:condition>$EndpointFormatVersion= '' </bpws:condition>
                            <bpws:sequence name="Sequence82">
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&#9;&#9;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&#9;&#9;&#9;&#9;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&#9;&#9;&#9;&#9;&#9;&#9;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&#9;&#9;&#9;&#9;&lt;/HEADER&gt;&lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&#9;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;5000&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;ERROR&lt;/StatusConditionDescription&gt;&#9;&#9;&#9;&lt;StatusDescription&gt;Unable to determine response format&lt;/StatusDescription&gt; &lt;StatusName&gt;ResponseDeterminationFailure&lt;/StatusName&gt; &lt;/STATUS&gt;&#9;&lt;/STATUSES&gt;&#9;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateInvalidIncomingResponseNACKFailureResponse" xDestination="$ResponseXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                            <bpws:else>
                                <bpws:sequence name="Sequence81">
                                    <bpws:if name="If_GenerateACKResponseFailed">
                                    <bpws:condition>$ACKResponseFailFlag = 'true'</bpws:condition>
                                    <bpws:sequence name="Sequence85">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&#9;&#9;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&#9;&#9;&#9;&#9;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&#9;&#9;&#9;&#9;&#9;&#9;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&#9;&#9;&#9;&#9;&lt;/HEADER&gt;&lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&#9;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;5001&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;ERROR&lt;/StatusConditionDescription&gt;&#9;&#9;&#9;&lt;StatusDescription&gt;Application Error&lt;/StatusDescription&gt; &lt;StatusName&gt;Application&lt;/StatusName&gt; &lt;/STATUS&gt;&#9;&lt;/STATUSES&gt;&#9;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateGenerateACKResponseFailure" xDestination="$ResponseXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    <bpws:elseif>
                                    <bpws:condition>string($XMLforGlobalException/ns2:EXCEPTION/ns2:ExceptionCode) = 'ZION_APP_2005'</bpws:condition>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&#9;&#9;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&#9;&#9;&#9;&#9;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&#9;&#9;&#9;&#9;&#9;&#9;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&#9;&#9;&#9;&#9;&lt;/HEADER&gt; &lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&#9;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;4004&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;ERROR&lt;/StatusConditionDescription&gt;&#9;&#9;&#9;&lt;StatusDescription&gt;Request failed schema validation&lt;/StatusDescription&gt; &lt;StatusName&gt;Schema Validation Failure&lt;/StatusName&gt; &lt;/STATUS&gt;&#9;&lt;/STATUSES&gt;&#9;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateGenerateNACKResponseSchemaValidationFailure" xDestination="$ResponseXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    <bpws:else>
                                    <bpws:sequence name="Sequence83">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="NACKXSLFailureAddInfo" expression="xpath:{'Endpoint format Version XSL load failure '}" keepSrcElementName="false" name="NACKXSLFailureAddInfo" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeGenerateNACKResponse">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="NACKResponseFailXSLFailure_ZIONLog" logLevel="verbose" name="NACKResponseFailXSLFailure_ZIONLog" nodeName="false" optionalData="$NACKXSLFailureAddInfo" transactionID="false">
                                    <soae-ab:comment>XSL transformation failure occured at GFH NACKResponse generation.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    <bpws:if name="If_Endpointformat_Version_XCM_GenerateNACKResponseXSLFailed">
                                    <bpws:condition>$EndpointFormatVersion='MISMO33'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:Comment name="Comment11">PlaceholderFor MISMO33&#13;
FailureNACKResponse</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    <bpws:elseif>
                                    <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:Comment name="Comment11">PlaceholderFor MISMO231&#13;
FailureNACKResponse</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    <bpws:elseif>
                                    <bpws:condition>$EndpointFormatVersion='XCM404'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&#9;&#9;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&#9;&#9;&#9;&#9;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&#9;&#9;&#9;&#9;&#9;&#9;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&#9;&#9;&#9;&#9;&lt;/HEADER&gt; &lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&#9;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;5001&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;ERROR&lt;/StatusConditionDescription&gt;&#9;&#9;&#9;&lt;StatusDescription&gt;Application Error&lt;/StatusDescription&gt; &lt;StatusName&gt;Application&lt;/StatusName&gt; &lt;/STATUS&gt;&#9;&lt;/STATUSES&gt;&#9;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateGenerateACKResponseFailure" xDestination="$ResponseXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    </bpws:if>

                                    <bpws:scope name="ScopeErrorResponseGenerationXSLFailure_NotifyFailure">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationXSLFailure_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationXSLFailure_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationXSLFailure_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TAErrorResponseGenerationXSLFailure_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="'Transform to FailureNotificationComponent request failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationXSLFailure_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationXSLFailure_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>

                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationXSLFailure_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationXSLFailure_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationXSLFailure_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAErrorResponseGenerationXSLFailure_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="'Invocation Of FailureNotificationComponent Failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationXSLFailure_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationXSLFailure_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence118">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_ErrorResponseGenerationXSLFailed" from="$XMLforLoadingConfigs" name="XSLTransformation_ErrorResponseGenerationXSLFailed" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>

                                    <soae-ab:param name="PolicyStatusType" value="''"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="ApplicationName" value="$AppName"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4041'"/>

                                    <soae-ab:param name="ExceptionName" value="'ACKResponseGenerationFailed'"/>

                                    <soae-ab:param name="Description" value="'Failed to generate ACKNACK response'"/>

                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>

                                    <soae-ab:param name="Severity" value="'ERROR'"/>

                                    <soae-ab:param name="Priority" value="'P2'"/>

                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack',$NACKXSLFailureAddInfo)"/>

                                    <soae-ab:param name="ProviderName" value="$VendorID"/>

                                    <soae-ab:param name="ResponseName" value="'Application'"/>

                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>

                                    <soae-ab:param name="ResponseCode" value="'5001'"/>

                                    <soae-ab:param name="ResponseDescription" value="'Application Error'"/>

                                    <soae-ab:param name="IncomingFileName" value="'HTTPS'"/>

                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>

                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>

                                    <soae-ab:param name="OperationName" value="$OperationType"/>

                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>

                                    <soae-ab:param name="CasePolicy" value="''"/>

                                    <soae-ab:param name="CaseStatistics" value="''"/>

                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>

                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>

                                    <soae-ab:param name="LoanIdentifierType" value="''"/>

                                    <soae-ab:param name="LoanStateDatetime" value="''"/>

                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationFailed_NotifyFailure}ErrorResponseGenerationFailed_NotifyFailureOutput" destinationTypeKind="MESSAGE" destinationVariable="ErrorResponseGenerationXSLFailed_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="ErrorResponseGenerationXSLFailed_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="ErrorResponseGenerationXSLFailed_NotifyFailure" partnerLink="ErrorResponseGenerationXSLFailed_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_ErrorResponseGenerationXSLFailed}"/>
                                    <soae-ab:outboundPolicies/>

                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ErrorResponseGenerationXSLFailed_NotifyFailureInput" inputMsgPart="body" operation="ErrorResponseGenerationXSLFailed_NotifyFailureOperation" outputMsg="ErrorResponseGenerationXSLFailed_NotifyFailureOutput" outputMsgPart="body" port="ErrorResponseGenerationXSLFailed_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationXSLFailed_NotifyFailure}ErrorResponseGenerationXSLFailed_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationXSLFailed_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationXSLFailed_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationXSLFailure_NotifyFailure_Success">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationXSLFailure_NotifyFailure_Success"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationXSLFailure_NotifyFailure_Success" from="$TransactionActivityXML" name="TAErrorResponseGenerationXSLFailure_NotifyFailure_Success" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>

                                    <soae-ab:param name="Description" value="'Invocation of FailureNotificationComponent completed successfully'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationXSLFailure_NotifyFailure_Success}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationXSLFailure_NotifyFailure_Success" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catch faultElement="soae-fault:schemaValidateNodeFault" faultVariable="NACKResponseSchemaValidateFaultVar">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="NACKResponseFailSchemaValidationFailure_ZIONLog" logLevel="verbose" name="NACKResponseFailSchemaValidationFailure_ZIONLog" nodeName="false" optionalData="string($NACKResponseSchemaValidateFaultVar/faultString)" transactionID="false">
                                    <soae-ab:comment>Schema validation failure occured at GFH NACKResponse generation.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    <bpws:if name="If_Endpointformat_Version_XCM_GenerateNACKResponseSchemaFailed">
                                    <bpws:condition>$EndpointFormatVersion='MISMO33'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:Comment name="Comment11">PlaceholderFor MISMO33&#13;
FailureNACKResponse</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    <bpws:elseif>
                                    <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:Comment name="Comment11">PlaceholderFor MISMO231&#13;
FailureNACKResponse</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    <bpws:elseif>
                                    <bpws:condition>$EndpointFormatVersion='XCM404'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&#9;&#9;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&#9;&#9;&#9;&#9;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&#9;&#9;&#9;&#9;&#9;&#9;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&#9;&#9;&#9;&#9;&lt;/HEADER&gt;&lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&#9;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;5001&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;ERROR&lt;/StatusConditionDescription&gt;&#9;&#9;&#9;&lt;StatusDescription&gt;Application Error&lt;/StatusDescription&gt; &lt;StatusName&gt;Application&lt;/StatusName&gt; &lt;/STATUS&gt;&#9;&lt;/STATUSES&gt;&#9;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateGenerateACKResponseFailure" xDestination="$ResponseXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    </bpws:if>

                                    <bpws:scope name="ScopeErrorResponseGenerationSchemaValidationFailure_NotifyFailure">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationSchemaValidationFailure_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationSchemaValidationFailure_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationSchemaValidationFailure_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TAErrorResponseGenerationSchemaValidationFailure_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="'Transform to FailureNotificationComponent request failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationSchemaValidationFailure_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationSchemaValidationFailure_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>

                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationSchemaValidationFailure_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationSchemaValidationFailure_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationSchemaValidationFailure_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAErrorResponseGenerationSchemaValidationFailure_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="'Invocation Of FailureNotificationComponent Failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationSchemaValidationFailure_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationSchemaValidationFailure_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence118">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_ErrorResponseGenerationSchemaValidationFailed" from="$XMLforLoadingConfigs" name="XSLTransformation_ErrorResponseGenerationSchemaValidationFailed" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>

                                    <soae-ab:param name="PolicyStatusType" value="''"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="ApplicationName" value="$AppName"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4041'"/>

                                    <soae-ab:param name="ExceptionName" value="'ACKResponseGenerationFailed'"/>

                                    <soae-ab:param name="Description" value="'Failed to generate ACKNACK response'"/>

                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>

                                    <soae-ab:param name="Severity" value="'ERROR'"/>

                                    <soae-ab:param name="Priority" value="'P2'"/>

                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',string($NACKResponseSchemaValidateFaultVar/faultString))"/>

                                    <soae-ab:param name="ProviderName" value="$VendorID"/>

                                    <soae-ab:param name="ResponseName" value="'Application'"/>

                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>

                                    <soae-ab:param name="ResponseCode" value="'5001'"/>

                                    <soae-ab:param name="ResponseDescription" value="'Application Error'"/>

                                    <soae-ab:param name="IncomingFileName" value="'HTTPS'"/>

                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>

                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>

                                    <soae-ab:param name="OperationName" value="$OperationType"/>

                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>

                                    <soae-ab:param name="CasePolicy" value="''"/>

                                    <soae-ab:param name="CaseStatistics" value="''"/>

                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>

                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>

                                    <soae-ab:param name="LoanIdentifierType" value="''"/>

                                    <soae-ab:param name="LoanStateDatetime" value="''"/>

                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="ErrorResponseGenerationSchemaValidationFailed_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="ErrorResponseGenerationSchemaValidationFailed_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="ErrorResponseGenerationSchemaValidationFailed_NotifyFailure" partnerLink="ErrorResponseGenerationSchemaValidationFailed_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_ErrorResponseGenerationSchemaValidationFailed}"/>
                                    <soae-ab:outboundPolicies/>

                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ErrorResponseGenerationSchemaValidationFailed_NotifyFailureInput" inputMsgPart="body" operation="ErrorResponseGenerationSchemaValidationFailed_NotifyFailureOperation" outputMsg="ErrorResponseGenerationSchemaValidationFailed_NotifyFailureOutput" outputMsgPart="body" port="ErrorResponseGenerationSchemaValidationFailed_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationSchemaValidationFailed_NotifyFailure}ErrorResponseGenerationSchemaValidationFailed_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationSchemaValidationFailed_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationSchemaValidationFailed_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationSchemaValidationFailure_NotifyFailure_Success">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationSchemaValidationFailure_NotifyFailure_Success"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationSchemaValidationFailure_NotifyFailure_Success" from="$TransactionActivityXML" name="TAErrorResponseGenerationSchemaValidationFailure_NotifyFailure_Success" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>

                                    <soae-ab:param name="Description" value="'Invocation of FailureNotificationComponent completed successfully'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationSchemaValidationFailure_NotifyFailure_Success}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationSchemaValidationFailure_NotifyFailure_Success" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="NACKResponseFailSchemaGenericFailure_ZIONLog" logLevel="verbose" name="NACKResponseFailSchemaGenericFailure_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Generic failure occured at GFH NACKResponse generation.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    <bpws:if name="If_Endpointformat_Version_XCM_GenerateNACKResponseFailed">
                                    <bpws:condition>$EndpointFormatVersion='MISMO33'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:Comment name="Comment11">PlaceholderFor MISMO33&#13;
FailureNACKResponse</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    <bpws:elseif>
                                    <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:Comment name="Comment11">PlaceholderFor MISMO231&#13;
FailureNACKResponse</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    <bpws:elseif>
                                    <bpws:condition>$EndpointFormatVersion='XCM404'</bpws:condition>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&#9;&#9;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&#9;&#9;&#9;&#9;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&#9;&#9;&#9;&#9;&#9;&#9;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&#9;&#9;&#9;&#9;&lt;/HEADER&gt; &lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&#9;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;5001&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;ERROR&lt;/StatusConditionDescription&gt;&#9;&#9;&#9;&lt;StatusDescription&gt;Application Error&lt;/StatusDescription&gt; &lt;StatusName&gt;Application&lt;/StatusName&gt; &lt;/STATUS&gt;&#9;&lt;/STATUSES&gt;&#9;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateGenerateACKResponseFailure" xDestination="$ResponseXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:elseif>
                                    </bpws:if>

                                    <bpws:scope name="ScopeErrorResponseGenerationFailure_NotifyFailure">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationFailure_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationFailure_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationFailure_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TAErrorResponseGenerationFailure_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="'Transform to FailureNotificationComponent request failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationFailure_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationFailure_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>

                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationFailure_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationFailure_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationFailure_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAErrorResponseGenerationFailure_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="'Invocation Of FailureNotificationComponent Failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAErrorResponseGenerationFailure_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationFailure_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence118">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_ErrorResponseGenerationFailed" from="$XMLforLoadingConfigs" name="XSLTransformation_ErrorResponseGenerationFailed" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>

                                    <soae-ab:param name="PolicyStatusType" value="''"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="ApplicationName" value="$AppName"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4041'"/>

                                    <soae-ab:param name="ExceptionName" value="'ACKResponseGenerationFailed'"/>

                                    <soae-ab:param name="Description" value="'Failed to generate ACKNACK response'"/>

                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>

                                    <soae-ab:param name="Severity" value="'ERROR'"/>

                                    <soae-ab:param name="Priority" value="'P2'"/>

                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - N/A'"/>

                                    <soae-ab:param name="ProviderName" value="$VendorID"/>

                                    <soae-ab:param name="ResponseName" value="'Application'"/>

                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>

                                    <soae-ab:param name="ResponseCode" value="'5001'"/>

                                    <soae-ab:param name="ResponseDescription" value="'Application Error'"/>

                                    <soae-ab:param name="IncomingFileName" value="'HTTPS'"/>

                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>

                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>

                                    <soae-ab:param name="OperationName" value="$OperationType"/>

                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>

                                    <soae-ab:param name="CasePolicy" value="''"/>

                                    <soae-ab:param name="CaseStatistics" value="''"/>

                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>

                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>

                                    <soae-ab:param name="LoanIdentifierType" value="''"/>

                                    <soae-ab:param name="LoanStateDatetime" value="''"/>

                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="ErrorResponseGenerationFailed_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="ErrorResponseGenerationFailed_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="ErrorResponseGenerationFailed_NotifyFailure" partnerLink="ErrorResponseGenerationFailed_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_ErrorResponseGenerationFailed}"/>
                                    <soae-ab:outboundPolicies/>

                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ErrorResponseGenerationFailed_NotifyFailureInput" inputMsgPart="body" operation="ErrorResponseGenerationFailed_NotifyFailureOperation" outputMsg="ErrorResponseGenerationFailed_NotifyFailureOutput" outputMsgPart="body" port="ErrorResponseGenerationFailed_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationFailed_NotifyFailure}ErrorResponseGenerationFailed_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationFailed_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/ErrorResponseGenerationFailed_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>

                                    <bpws:scope name="ScopeTAErrorResponseGenerationFailure_NotifyFailureSuccess">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAErrorResponseGenerationXSLFailure_NotifyFailureSuccess"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence98">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAErrorResponseGenerationXSLFailure_NotifyFailureSuccess" from="$TransactionActivityXML" name="TAErrorResponseGenerationXSLFailure_NotifyFailureSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>

                                    <soae-ab:param name="Description" value="'Invocation of FailureNotificationComponent completed successfully'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="UpdateTAErrorResponseGenerationXSLFailure_NotifyFailureSuccess" expression="xpath:{$TAErrorResponseGenerationXSLFailure_NotifyFailureSuccess}" keepSrcElementName="false" name="UpdateTAErrorResponseGenerationXSLFailure_NotifyFailureSuccess" xDestination=""/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence80">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="GenerateNACKResponse" from="$Receive/soapenv:Body/OriginationResponse/*" name="GenerateNACKResponse" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/AsyncPostBackResponse',$EndpointFormatVersion,'.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params>

                                    <soae-ab:param name="MPNumber" value="$CustomerNumber"/>

                                    <soae-ab:param name="VendorID" value="$VendorID"/>

                                    <soae-ab:param name="StatusCode" value="$XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseCode"/>

                                    <soae-ab:param name="StatusConditionDescription" value="$XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseCondition"/>

                                    <soae-ab:param name="StatusDescription" value="$XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseDescription"/>

                                    <soae-ab:param name="StatusName" value="$XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:ValidationBuilder componentIdentification="elementName" data="$GenerateNACKResponse" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="GenerateNACKResponseXMLSchemaValidation" elementName="xpath:{$ResponseACKRootElement}" name="GenerateNACKResponseXMLSchemaValidation" schemaIdentification="targetNamespace" targetNamespace="xpath:{$ResponseACKNamespace}" throwFault="true" urlLocal="false"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="NACKXSLFailureAddInfo" expression="xpath:{'Failed to load AddAsyncPostBackResponseRootElement.xsl'}" keepSrcElementName="false" name="UpdateACKXSLFailureAddinfoWithAddWrapperRootElement" xDestination="$NACKXSLFailureAddInfo"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AddWrapperRootElementGHF" from="$GenerateNACKResponse" name="AddWrapperRootElementGHF" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/AddResponseRootElement.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{$AddWrapperRootElementGHF}" keepSrcElementName="false" name="UpdateGeneratedNACKResponseToResponseXML" xDestination="$ResponseXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:else>
                                    </bpws:if>
                                </bpws:sequence>
                            </bpws:else>
                        </bpws:if>
                    </bpws:sequence>
                    <bpws:else>
                        <bpws:sequence name="Sequence139">
                            <bpws:empty name="AppConfigMissingCannotArchiveRequest"/>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseXML" expression="xpath:{soae-xf:xml-parse-string('utf-8','base64',soae-xf:base64-encode-string(concat('&lt;OriginationResponse&gt;&#9;&lt;MESSAGE xmlns=&quot;http://Radian.Services.Schemas&quot;&gt; &lt;HEADER&gt;&#9;&lt;DESTINATION&gt;&#9;&lt;ApplicationName&gt;ZION&lt;/ApplicationName&gt;&#9;&lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;&lt;/MessageFormat&gt;&#9;&lt;MessageVersion&gt;&lt;/MessageVersion&gt; &lt;/DESTINATION&gt; &lt;HEADER_DETAIL&gt; &lt;MessageIdentifier&gt;',$TransactionUUID,'&lt;/MessageIdentifier&gt;&lt;MessageTimestamp&gt;',exslt:format-date('now-local','MM-dd-yyyy'),'T',exslt:format-date('now-local','hh:mm:ss a'),'&lt;/MessageTimestamp&gt;&lt;RecordCount&gt;1&lt;/RecordCount&gt; &lt;TransactionIdentifier&gt;',$TransactionUUID,'&lt;/TransactionIdentifier&gt; &lt;/HEADER_DETAIL&gt; &lt;SERVICE_INFORMATION&gt; &lt;Environment&gt;&lt;/Environment&gt;&lt;OperationName&gt;&lt;/OperationName&gt;&#9;&lt;ServiceName&gt;ZION-Origination&lt;/ServiceName&gt;&#9;&lt;ServiceType&gt;&lt;/ServiceType&gt;&#9;&lt;/SERVICE_INFORMATION&gt; &lt;SOURCE&gt;&#9;&#9;&#9;&#9;&lt;ApplicationName&gt;PAS&lt;/ApplicationName&gt; &lt;ChannelName&gt;EDI&lt;/ChannelName&gt; &lt;MessageFormat&gt;XCM&lt;/MessageFormat&gt; &lt;MessageVersion&gt;XCM404&lt;/MessageVersion&gt; &lt;/SOURCE&gt;&lt;/HEADER&gt; &lt;CUSTOMERPROFILES&gt; &lt;CUSTOMERPROFILE&gt; &lt;TRADING_PARTNERS&gt; &lt;TRADING_PARTNER&gt; &lt;AccountNumber/&gt; &lt;OriginationProductID/&gt; &lt;/TRADING_PARTNER&gt; &lt;/TRADING_PARTNERS&gt; &lt;/CUSTOMERPROFILE&gt;&lt;/CUSTOMERPROFILES&gt; &lt;MORTGAGEINS_XCM&gt;&lt;STATUSES&gt; &lt;STATUS&gt; &lt;StatusCode&gt;6001&lt;/StatusCode&gt; &lt;StatusConditionDescription&gt;Error&lt;/StatusConditionDescription&gt;&lt;StatusDescription&gt;System not available&lt;/StatusDescription&gt; &lt;StatusName&gt;Communication Failure&lt;/StatusName&gt; &lt;/STATUS&gt;&lt;/STATUSES&gt;&lt;/MORTGAGEINS_XCM&gt; &lt;/MESSAGE&gt; &lt;/OriginationResponse&gt;')))}" keepSrcElementName="false" name="UpdateGenerateACKResponseFailure" xDestination="$ResponseXML"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:else>
                </bpws:if>
                <bpws:scope name="ScopeWriteAlarmPointLog_NotifyFailure">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:scope name="ScopeTAWriteAlarmPointLog_NotifyFailureRequestTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAWriteAlarmPointLog_NotifyFailureRequestTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence99">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAWriteAlarmPointLog_NotifyFailureRequestTransformationFailed" from="$TransactionActivityXML" name="TAWriteAlarmPointLog_NotifyFailureRequestTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>
                                    <soae-ab:param name="Description" value="'Transform to FailureNotificationComponent request failed'"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAWriteAlarmPointLog_NotifyFailureRequestTransformationFailed}" keepSrcElementName="false" name="UpdateTAWriteAlarmPointLog_NotifyFailureRequestTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:catch>
                        <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                            <bpws:sequence>
                                <bpws:scope name="ScopeTAWriteAlarmPointLog_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAWriteAlarmPointLog_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence101">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAWriteAlarmPointLog_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAWriteAlarmPointLog_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>
                                    <soae-ab:param name="Description" value="'Invocation Of FailureNotificationComponent Failed'"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAWriteAlarmPointLog_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAWriteAlarmPointLog_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence105">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_WriteAlarmPointLog" from="$XMLforLoadingConfigs" name="XSLTransformation_WriteAlarmPointLog" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:RequestUUID)"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:CertificateNumber)"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:DateTimeStamp)"/>
                                    <soae-ab:param name="ApplicationName" value="$AppName"/>
                                    <soae-ab:param name="ExceptionCode" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ExceptionCode)"/>
                                    <soae-ab:param name="ExceptionName" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ExceptionName)"/>
                                    <soae-ab:param name="Description" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:Description)"/>
                                    <soae-ab:param name="Loglevel" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:LogLevel)"/>
                                    <soae-ab:param name="Severity" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:Severity)"/>
                                    <soae-ab:param name="Priority" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:Priority/text())"/>
                                    <soae-ab:param name="AdditionalInfo" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ProviderName)"/>
                                    <soae-ab:param name="ResponseName" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseName)"/>
                                    <soae-ab:param name="ResponseCondition" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseCondition)"/>
                                    <soae-ab:param name="ResponseCode" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseCode)"/>
                                    <soae-ab:param name="ResponseDescription" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:ResponseDescription)"/>
                                    <soae-ab:param name="IncomingFileName" value="string($XMLforGlobalException/ns2:EXCEPTION/ns2:IncomingFileName)"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>
                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="WriteAlarmPointLog_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="WriteAlarmPointLog_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="WriteAlarmPointLog_NotifyFailure" partnerLink="WriteAlarmPointLog_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_WriteAlarmPointLog}"/>
                                <soae-ab:outboundPolicies/>
                                <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="WriteAlarmPointLog_NotifyFailureInput" inputMsgPart="body" operation="WriteAlarmPointLog_NotifyFailureOperation" outputMsg="WriteAlarmPointLog_NotifyFailureOutput" outputMsgPart="body" port="WriteAlarmPointLog_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteAlarmPointLog_NotifyFailure}WriteAlarmPointLog_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteAlarmPointLog_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/WriteAlarmPointLog_NotifyFailure.wsdl"/>
                                <soae-ab:inboundPolicies/>
                            </soae-ab:InvokeBuilder>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTAWriteAlarmPointLog_NotifyFailureSuccess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAWriteAlarmPointLog_NotifyFailureSuccess"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence102">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAWriteAlarmPointLog_NotifyFailureSuccess" from="$TransactionActivityXML" name="TAWriteAlarmPointLog_NotifyFailureSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>
                                    <soae-ab:param name="Description" value="'Invocation of FailureNotificationComponent completed successfully'"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAWriteAlarmPointLog_NotifyFailureSuccess}" keepSrcElementName="false" name="UpdateTAWriteAlarmPointLog_NotifyFailureSuccess" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{'FAIL'}" keepSrcElementName="false" name="UpdateTALogHeadertoFAIL" xDestination="$TransactionActivityXML/ns3:HEADER/ns3:Status"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{soae-xf:calculate-time-delta($StartTime,soae-xf:get-time())}" keepSrcElementName="false" name="GlobalFaultUpdateTATimeTaken" xDestination="$TransactionActivityXML/ns3:HEADER/ns3:TotalTransTimeInSecs"/>
                </bpws:extensionActivity>
                <bpws:if name="If_appconfigloaded">
                    <bpws:condition>soae-cache:get-string('msg:GlobalError')!='02'</bpws:condition>
                    <bpws:if name="If_Write_TALog_Enabled">
                        <bpws:condition>
                            translate($AppConfig/ns4:WriteTALogsEnabled,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='TRUE'
						</bpws:condition>
                        <bpws:scope name="ScopeGlobalFaultWriteTALogstoDisk">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GlobalFaultWriteTALogstoDiskFailed_ZIONLog" logLevel="verbose" name="GlobalFaultWriteTALogstoDiskFailed_ZIONLog" nodeName="true" optionalData="$TransactionActivityXML" transactionID="true">
                                    <soae-ab:comment>Unable to write Transaction Activity logs to disk. Transaction Activity details follow:</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:extensionActivity>
                                <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="GlobalFaultWriteTALogstoDisk" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="concat('file://',$TALogPath,soae-xf:get-node-name(),'_Origination_',$TransactionUUID,'_',exslt:format-date(&quot;now-local&quot;, &quot;ddMMyyyy&quot;),'-',exslt:format-date(&quot;now-local&quot;, &quot;HHmmssSSS&quot;),'.xml')" endpointConfigurationType="Configured" imaKey="GlobalFaultWriteTALogstoDisk_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="GlobalFaultWriteTALogstoDisk" partnerLink="GlobalFaultWriteTALogstoDisk" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$TransactionActivityXML}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="true" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:fileTransport serviceURI="file:///opt/apps/zion/transactionlogs/" soapAction=""/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="GlobalFaultWriteTALogstoDiskInput" inputMsgPart="body" operation="GlobalFaultWriteTALogstoDiskOperation" outputMsg="GlobalFaultWriteTALogstoDiskOutput" outputMsgPart="body" port="GlobalFaultWriteTALogstoDiskPort" service="{http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/GlobalFaultWriteTALogstoDisk}GlobalFaultWriteTALogstoDiskService" soapVersion="1.1" tns="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/GlobalFaultWriteTALogstoDisk" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/GlobalFaultWriteTALogstoDisk.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                </soae-ab:InvokeBuilder>
                            </bpws:extensionActivity>
                        </bpws:scope>
                    </bpws:if>
                    <bpws:else>
                        <bpws:scope name="ScopeWriteTALogonFault_hardcodedPath">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="WriteTALogFailureGFH_ZIONLog" logLevel="verbose" name="WriteTALogFailureGFH_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Unable to write Transaction Activity logs to disk. Transaction Activity details follow:</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:extensionActivity>
                                <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBack/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="WriteTALogGFH" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="concat('file://',$TALogPath,soae-xf:get-node-name(),'_Origination_',$TransactionUUID,'_',exslt:format-date(&quot;now-local&quot;, &quot;ddMMyyyy&quot;),'-',exslt:format-date(&quot;now-local&quot;, &quot;HHmmssSSS&quot;),'.xml')" endpointConfigurationType="Configured" imaKey="WriteTALogGFH_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="WriteTALogGFH" partnerLink="WriteTALogGFH" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$TransactionActivityXML}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="true" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:fileTransport serviceURI="file:///opt/apps/zion/transactionlogs/" soapAction=""/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="WriteTALogGFHInput" inputMsgPart="body" operation="WriteTALogGFHOperation" outputMsg="WriteTALogGFHOutput" outputMsgPart="body" port="WriteTALogGFHPort" service="{http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteTALogGFH}WriteTALogGFHService" soapVersion="1.1" tns="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteTALogGFH" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/WriteTALogGFH.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                </soae-ab:InvokeBuilder>
                            </bpws:extensionActivity>
                        </bpws:scope>
                    </bpws:else>
                </bpws:if>
                <bpws:if name="If_Check_Response_Sent">
                    <bpws:condition>
                        $ResponseFlag='false'
					</bpws:condition>
                    <bpws:scope name="ScopeReplyatGFH">
                        <bpws:faultHandlers>
                            <bpws:catchAll>
                                <bpws:sequence>
                                    <bpws:if name="If_Alert_AlreadySent">
                                    <bpws:condition>string($XMLforGlobalException/ns2:EXCEPTION/ns2:ExceptionCode)='ZION_APP_5010'</bpws:condition>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GFH_ReplyFailed" logLevel="verbose" name="GFH_ReplyFailed" nodeName="false" optionalData="$GFHReplyFailExceptionXML" transactionID="false">
                                    <soae-ab:comment>Failed to reply from GFH.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    <bpws:else>
                                    <bpws:sequence name="Sequence36">
                                    <bpws:extensionActivity>
                                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="GFHReplyFailExceptionXML" name="GFHReplyFailExceptionXML">
                                    <soae-ab:data>

                                    <ns2:EXCEPTIONS>
                                    <ns2:EXCEPTION>
                                    <ns2:RequestUUID>xpath:{$TransactionUUID}</ns2:RequestUUID>
                                    <ns2:TransactionID>xpath:{soae-xf:get-transaction-id()}</ns2:TransactionID>
                                    <ns2:CertificateNumber>xpath:{'NA'}</ns2:CertificateNumber>
                                    <ns2:DateTimeStamp>xpath:{soae-xf:get-time()}</ns2:DateTimeStamp>
                                    <ns2:ApplicationName>xpath:{'Origination'}</ns2:ApplicationName>
                                    <ns2:ExceptionCode>xpath:{'ZION_APP_5010'}</ns2:ExceptionCode>
                                    <ns2:ExceptionName>xpath:{'ResponseFailure'}</ns2:ExceptionName>
                                    <ns2:Description>xpath:{'Failed to respond back to calling system'}</ns2:Description>
                                    <ns2:LogLevel>xpath:{'ERROR'}</ns2:LogLevel>
                                    <ns2:Priority>xpath:{'P1'}</ns2:Priority>
                                    <ns2:Severity>xpath:{'CRITICAL'}</ns2:Severity>
                                    <ns2:AdditionalInfo>xpath:{'OriginationAsynchronousPostBack - N/A'}</ns2:AdditionalInfo>
                                    <ns2:ProviderName>xpath:{concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)}</ns2:ProviderName>
                                    <ns2:ResponseName>xpath:{'Communication Failure'}</ns2:ResponseName>
                                    <ns2:ResponseCondition>xpath:{'Error'}</ns2:ResponseCondition>
                                    <ns2:ResponseCode>xpath:{'6001'}</ns2:ResponseCode>
                                    <ns2:ResponseDescription>xpath:{'System not available'}</ns2:ResponseDescription>
                                    <ns2:IncomingFileName>xpath:{$FileName}</ns2:IncomingFileName>
                                    </ns2:EXCEPTION>
                                    </ns2:EXCEPTIONS>
                                    </soae-ab:data>
                                    <soae-ab:data2>

                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTION" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}RequestUUID" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{$TransactionUUID}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}TransactionID" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.1" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{soae-xf:get-transaction-id()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}CertificateNumber" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.2" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}DateTimeStamp" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.3" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{soae-xf:get-time()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ApplicationName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.4" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{'Origination'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ExceptionCode" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.5" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.5/@element">
                                    <value>xpath:{'ZION_APP_5010'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ExceptionName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.6" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.6/@element">
                                    <value>xpath:{'ResponseFailure'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Description" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.7" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.7/@element">
                                    <value>xpath:{'Failed to respond back to calling system'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}LogLevel" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.8" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.8/@element">
                                    <value>xpath:{'ERROR'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Priority" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.9" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.9/@element">
                                    <value>xpath:{'P1'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Severity" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.10" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.10/@element">
                                    <value>xpath:{'CRITICAL'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}AdditionalInfo" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.11" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.11/@element">
                                    <value>xpath:{'OriginationAsynchronousPostBack - N/A'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ProviderName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.12" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.12/@element">
                                    <value>xpath:{concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.13" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.13/@element">
                                    <value>xpath:{'Communication Failure'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseCondition" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.14" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.14/@element">
                                    <value>xpath:{'Error'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseCode" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.15" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.15/@element">
                                    <value>xpath:{'6001'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseDescription" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.16" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.16/@element">
                                    <value>xpath:{'System not available'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}IncomingFileName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.17" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.17/@element">
                                    <value>xpath:{$FileName}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="1" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                    </soae-ab:data2>
                                    <soae-ab:variables/>
                                    </soae-ab:XMLBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeGFHReplyFailed_NotifyFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAOnReplyFailureGFH_NotifyFailureRequestTransformationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAOnReplyFailureGFH_NotifyFailureRequestTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence99">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAOnReplyFailureGFH_NotifyFailureRequestTransformationFailed" from="$TransactionActivityXML" name="TAOnReplyFailureGFH_NotifyFailureRequestTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="'Transform to FailureNotificationComponent request failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAOnReplyFailureGFH_NotifyFailureRequestTransformationFailed}" keepSrcElementName="false" name="UpdateTAOnReplyFailureGFH_NotifyFailureRequestTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>

                                    <bpws:scope name="ScopeTAOnReplyFailureGFH_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAOnReplyFailureGFH_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence101">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAOnReplyFailureGFH_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAOnReplyFailureGFH_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="'Invocation Of FailureNotificationComponent Failed'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAOnReplyFailureGFH_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAOnReplyFailureGFH_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence105">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_OnReplyFailureGFH" from="$XMLforLoadingConfigs" name="XSLTransformation_OnReplyFailureGFH" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>

                                    <soae-ab:param name="PolicyStatusType" value="''"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="ApplicationName" value="$AppName"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5010'"/>

                                    <soae-ab:param name="ExceptionName" value="'ResponseFailure'"/>

                                    <soae-ab:param name="Description" value="'Failed to Respond back to calling System'"/>

                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>

                                    <soae-ab:param name="Severity" value="'CRITICAL'"/>

                                    <soae-ab:param name="Priority" value="'P1'"/>

                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostbackProcess-N/A'"/>

                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>

                                    <soae-ab:param name="ResponseName" value="'Communication Failure'"/>

                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>

                                    <soae-ab:param name="ResponseCode" value="'6001'"/>

                                    <soae-ab:param name="ResponseDescription" value="'System not available'"/>

                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>

                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>

                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>

                                    <soae-ab:param name="OperationName" value="$OperationType"/>

                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>

                                    <soae-ab:param name="CasePolicy" value="''"/>

                                    <soae-ab:param name="CaseStatistics" value="''"/>

                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>

                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>

                                    <soae-ab:param name="LoanIdentifierType" value="''"/>

                                    <soae-ab:param name="LoanStateDatetime" value="''"/>

                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="OnReplyFailureGFH_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="OnReplyFailureGFH_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="OnReplyFailureGFH_NotifyFailure" partnerLink="OnReplyFailureGFH_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_OnReplyFailureGFH}"/>
                                    <soae-ab:outboundPolicies/>

                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="OnReplyFailureGFH_NotifyFailureInput" inputMsgPart="body" operation="OnReplyFailureGFH_NotifyFailureOperation" outputMsg="OnReplyFailureGFH_NotifyFailureOutput" outputMsgPart="body" port="OnReplyFailureGFH_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/OnReplyFailureGFH_NotifyFailure}OnReplyFailureGFH_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/OnReplyFailureGFH_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/OnReplyFailureGFH_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAGFHReplyFailed_NotifyFailure_Success">
                                    <bpws:faultHandlers>

                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTAGFHReplyFailed_NotifyFailure_Success"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>

                                    <bpws:sequence name="Sequence102">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAGFHReplyFailed_NotifyFailure_Success" from="$TransactionActivityXML" name="TAGFHReplyFailed_NotifyFailure_Success" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>

                                    <soae-ab:param name="Description" value="'Invocation of FailureNotificationComponent completed successfully'"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAGFHReplyFailed_NotifyFailure_Success}" keepSrcElementName="false" name="UpdateTAGFHReplyFailed_NotifyFailure_Success" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:else>
                                    </bpws:if>
                                </bpws:sequence>
                            </bpws:catchAll>
                        </bpws:faultHandlers>
                        <bpws:extensionActivity>
                            <soae-ab:ReplyBuilder addAttachments="false" compression="identity" destinationVariable="" messageBodyFrom="" name="ReplyGlobalFault" passThroughEnabled="false" rawEnvelopeFrom="" sendRawEnvelope="false" throwFault="false" xmlResponse="false">
                                <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$ResponseXML}"/>
                                <soae-ab:outboundPolicies/>
                            </soae-ab:ReplyBuilder>
                        </bpws:extensionActivity>
                    </bpws:scope>
                </bpws:if>
                <bpws:if name="If_App_Config_Loaded">
                    <bpws:condition>soae-cache:get-string('msg:GlobalError')!='02'</bpws:condition>
                    <bpws:sequence name="Sequence115">
                        <bpws:if name="If_GFH_response_Archive_enabled">
                            <bpws:condition>translate($AppConfig/ns4:RequestResponseArchivalEnabled,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='TRUE'</bpws:condition>
                            <bpws:sequence name="Sequence110">
                                <bpws:scope name="ScopeInvokeArchiveComponentToGFHReplyArchiveRespponse">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GFHArchiveResponsetoSFTPFail_ZIONLog" logLevel="verbose" name="GFHArchiveResponsetoSFTPFail_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Response archival failed from GFH.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence110">
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ArchiveResponseAtGFH}ArchiveResponseAtGFHOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeArchiveComponentToResponseAtGFH" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeArchiveComponentToResponseAtGFH_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeArchiveComponentToResponseAtGFH" partnerLink="InvokeArchiveComponentToResponseAtGFH" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$ResponseXML}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:metadata metadataSource="NEW" xpath="">
                                    <soae-ab:policies/>
                                    <soae-ab:httpRequest method="" query="" uri="/ArchiveComponent" version="HTTP/1.0">
                                    <soae-ab:header name="content-type" value="application/xml"/>
                                    <soae-ab:header name="uuid" value="xpath:{$TransactionUUID}"/>
                                    <soae-ab:header name="appname" value="xpath:{$ApplicationName}"/>
                                    <soae-ab:header name="foldername" value="xpath:{$AppConfig/ns4:ResponseArchivalPath}"/>
                                    </soae-ab:httpRequest>
                                    </soae-ab:metadata>
                                    <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="" serviceURI="https://ae1bdcon1:9000/ArchiveComponent" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeArchiveComponentToResponseAtGFHInput" inputMsgPart="body" operation="InvokeArchiveComponentToResponseAtGFHOperation" outputMsg="InvokeArchiveComponentToResponseAtGFHOutput" outputMsgPart="body" port="InvokeArchiveComponentToResponseAtGFHPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponseAtGFH}InvokeArchiveComponentToResponseAtGFHService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponseAtGFH" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponseAtGFH.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:if>
                    </bpws:sequence>
                    <bpws:else>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ResponseinGFH" logLevel="verbose" name="ResponseinGFH" nodeName="false" optionalData="" transactionID="false">
                                <soae-ab:comment>AppConfig file not loaded. Hence, showing response on ESG logs.</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                    </bpws:else>
                </bpws:if>
                <bpws:extensionActivity>
                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GlobalFaultExceptionLog" logLevel="info" name="GlobalFaultExceptionLog" nodeName="false" optionalData="$XMLforGlobalException" transactionID="false">
                        <soae-ab:comment>Exception Occurred. Details follow:</soae-ab:comment>
                    </soae-ab:TransactionLog>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="GlobalFaultTALog" logLevel="info" name="GlobalFaultTALog" nodeName="false" optionalData="$TransactionActivityXML" transactionID="false">
                        <soae-ab:comment>Transaction Activity log follows:</soae-ab:comment>
                    </soae-ab:TransactionLog>
                </bpws:extensionActivity>
                <bpws:exit name="ExitAtGlobalFault"/>
            </bpws:sequence>
        </bpws:catchAll>
    </bpws:faultHandlers>
    <bpws:sequence name="Sequence">
        <bpws:extensionActivity>
            <soae-ab:ReceiveBuilder allowCrossAppInvocation="false" allowLocalInvocation="false" bindingType="Plain" destinationVariable="Receive" dontExtractMsgToVar="false" endpointConfigurationType="ExistingWSDL" imaKey="Receive_IMA_Key" inboundPoliciesGroup="" maxConcurrentRequests="0" maxRequestRate="0" multipartInboundData="false" multipartOutboundData="false" name="Receive" partnerLink="Receive" receiveRawEnvelope="true" temporalScope="NONE">
                <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                <soae-ab:outputData binary="false" oneway="true" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                <soae-ab:sftpTransport serviceURI="sftp://intconnect.datacenter.radiangroupinc.net:22/origination/asyncresponse/esg/?type=delete&amp;scheduler=FileScheduler&amp;timeTrigger=10&amp;filePattern=RDN_*.*" soapAction=""/>
                <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ReceiveInput" inputMsgPart="body" operation="GetOriginationAsyncPostBackResponse" outputMsg="ReceiveOutput" outputMsgPart="body" port="OriginationAsyncPostBackServiceSOAP" service="{http://www.radian.biz/ClientConnectivity/zion/http/OriginationAsyncPostBackService}OriginationAsyncPostBackService" soapVersion="1.1" tns="http://www.radian.biz/ClientConnectivity/zion/http/OriginationAsyncPostBackService" wsdlFileName="Origination/wsdl/OriginationAsyncPostBackService.wsdl"/>
                <soae-ab:inboundPolicies/>
                <soae-ab:explicitImports>
                    <soae-ab:documentImport kind="http://schemas.xmlsoap.org/wsdl/" location="wsdl/OriginationAsyncPostBackService.wsdl" tns="http://www.radian.biz/ClientConnectivity/zion/http/OriginationAsyncPostBackService"/>
                </soae-ab:explicitImports>
            </soae-ab:ReceiveBuilder>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:GetMessageMetadata destinationType="{http://www.intel.com/soae/protocolMetadata-2007a.xsd}httpMessage" destinationTypeKind="ELEMENT" destinationVariable="GetMessageMetadata" message="Receive" metadata="ProtocolMetadata" name="GetMessageMetadata"/>
        </bpws:extensionActivity>
        <bpws:scope name="ScopeInitializations">
            <bpws:sequence name="Sequence1">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="StartTime" expression="xpath:{soae-xf:get-time()}" keepSrcElementName="false" name="StartTime" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EnvironmentName" expression="xpath:{''}" keepSrcElementName="false" name="EnvironmentName" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToOne" expression="xpath:{soae-cache:new-string('msg:GlobalError','01')}" keepSrcElementName="false" name="SetGlobalErrorToOne" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig" destinationTypeKind="ELEMENT" destinationVariable="XMLforLoadingConfigs" name="XMLforLoadingConfigs">
                        <soae-ab:data>
                            <ns1:LoadConfig>
                                <ns1:Load>xpath:{'LOAD'}</ns1:Load>
                            </ns1:LoadConfig>
                        </soae-ab:data>
                        <soae-ab:data2>
                            <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}Load" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/LoadConfig}LoadConfig/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{'LOAD'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                </children>
                            </xmlEditorNode>
                        </soae-ab:data2>
                        <soae-ab:variables/>
                    </soae-ab:XMLBuilder>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" name="XMLforGlobalException">
                        <soae-ab:data>
                            <ns2:EXCEPTIONS/>
                        </soae-ab:data>
                        <soae-ab:data2>
                            <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS">
                                    <children>
                                    <xmlEditorNode created="false" form="qualified" index="0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                </children>
                            </xmlEditorNode>
                        </soae-ab:data2>
                        <soae-ab:variables/>
                    </soae-ab:XMLBuilder>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" name="TransactionActivityXML">
                        <soae-ab:data>
                            <ns3:TRANSACTIONACTIVITY>
                                <ns3:HEADER>
                                    <ns3:TransId>xpath:{soae-xf:get-transaction-id()}</ns3:TransId>
                                    <ns3:NodeName>xpath:{soae-xf:get-node-name()}</ns3:NodeName>
                                    <ns3:SourceApplicationName>xpath:{'Origination'}</ns3:SourceApplicationName>
                                    <ns3:SourceFileIdentifier>xpath:{'NA'}</ns3:SourceFileIdentifier>
                                    <ns3:BatchIdentifier>xpath:{'NA'}</ns3:BatchIdentifier>
                                    <ns3:CertificateIdentifier>xpath:{'NA'}</ns3:CertificateIdentifier>
                                    <ns3:SourceFileName>xpath:{'NA'}</ns3:SourceFileName>
                                    <ns3:TotalRecordCount>xpath:{1}</ns3:TotalRecordCount>
                                    <ns3:TotalMessageCount>xpath:{1}</ns3:TotalMessageCount>
                                    <ns3:TotalTransTimeInSecs>xpath:{0}</ns3:TotalTransTimeInSecs>
                                    <ns3:Status>xpath:{'SUCCESS'}</ns3:Status>
                                </ns3:HEADER>
                            </ns3:TRANSACTIONACTIVITY>
                        </soae-ab:data>
                        <soae-ab:data2>
                            <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.0/@element">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TransId" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{soae-xf:get-transaction-id()}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}NodeName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{soae-xf:get-node-name()}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceApplicationName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'Origination'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceFileIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}BatchIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}CertificateIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.5" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.5/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceFileName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.6" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.6/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalRecordCount" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.7" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.7/@element">
                                    <value>xpath:{1}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalMessageCount" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.8" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.8/@element">
                                    <value>xpath:{1}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalTransTimeInSecs" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.9" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.9/@element">
                                    <value>xpath:{0}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Status" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.10" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.10/@element">
                                    <value>xpath:{'SUCCESS'}</value>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="false" form="qualified" index="0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.11"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    <xmlEditorNode created="false" form="qualified" index="0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.1"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                </children>
                            </xmlEditorNode>
                        </soae-ab:data2>
                        <soae-ab:variables/>
                    </soae-ab:XMLBuilder>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{''}" keepSrcElementName="false" name="EndpointFormatVersion" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="CustomerNumber" expression="xpath:{''}" keepSrcElementName="false" name="CustomerNumber" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseACKNamespace" expression="xpath:{''}" keepSrcElementName="false" name="ResponseACKNamespace" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseACKRootElement" expression="xpath:{''}" keepSrcElementName="false" name="ResponseACKRootElement" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ApplicationName" expression="xpath:{'Origination'}" keepSrcElementName="false" name="ApplicationName" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="VendorID" expression="xpath:{'NA'}" keepSrcElementName="false" name="VendorID" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ServiceCD" expression="xpath:{'NA'}" keepSrcElementName="false" name="ServiceCD" xDestination="$ServiceCD"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="OperationType" expression="xpath:{'NA'}" keepSrcElementName="false" name="OperationType" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="TransactionUUID" expression="xpath:{soae-xf:get-UUID()}" keepSrcElementName="false" name="TransactionUUID" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="FileName" expression="xpath:{'NA'}" keepSrcElementName="false" name="FileName" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IsResponseArchived" expression="xpath:{'false'}" keepSrcElementName="false" name="IsResponseArchived" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="ResponseFlag" expression="xpath:{'false'}" keepSrcElementName="false" name="ResponseFlag" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoadConfigFilesFlag" expression="xpath:{'false'}" keepSrcElementName="false" name="LoadConfigFilesFlag" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKResponseFailFlag" expression="xpath:{'false'}" keepSrcElementName="false" name="ACKResponseFailFlag" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="StripedCustomerNumber" expression="xpath:{$CustomerNumber}" keepSrcElementName="false" name="StripedCustomerNumber" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IsAsyncTransactionFlag" expression="xpath:{'true'}" keepSrcElementName="false" name="IsAsyncTransactionFlag" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="RequestArchivedFlag" expression="xpath:{'false'}" keepSrcElementName="false" name="RequestArchivedFlag" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EDIResponse" expression="xpath:{'false'}" keepSrcElementName="false" name="EDIResponse" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseFileFormat" expression="xpath:{'xml'}" keepSrcElementName="false" name="ResponseFileFormat" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MICertificateNumber" expression="xpath:{''}" keepSrcElementName="false" name="MICertificateNumber" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoanIdentifier" expression="xpath:{''}" keepSrcElementName="false" name="LoanIdentifier" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="KnowledgeBase" expression="xpath:{''}" keepSrcElementName="false" name="KnowledgeBase" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Email" expression="xpath:{''}" keepSrcElementName="false" name="Email" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="FirstName" expression="xpath:{''}" keepSrcElementName="false" name="FirstName" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LastName" expression="xpath:{''}" keepSrcElementName="false" name="LastName" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Phone" expression="xpath:{''}" keepSrcElementName="false" name="Phone" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{''}" keepSrcElementName="false" name="EventFailureAdditionalInfo" xDestination=""/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeLoadSystemConfigurationFiles">
            <bpws:sequence name="Sequence2">
                <bpws:scope name="ScopeLoadExceptionConfigXSL">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToTwoloadExceptionLogFailed" expression="xpath:{soae-cache:set-string('msg:GlobalError','02')}" keepSrcElementName="false" name="SetGlobalErrorToTwoloadExceptionLogFailed" xDestination=""/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="CreateErrorLogXMLonExceptionXSlLoadFailure" name="CreateErrorLogXMLonExceptionXSlLoadFailure">
                                    <soae-ab:data>
                                    <ns2:EXCEPTIONS>
                                    <ns2:EXCEPTION>
                                    <ns2:RequestUUID>xpath:{$TransactionUUID}</ns2:RequestUUID>
                                    <ns2:TransactionID>xpath:{soae-xf:get-transaction-id()}</ns2:TransactionID>
                                    <ns2:CertificateNumber>xpath:{'NA'}</ns2:CertificateNumber>
                                    <ns2:DateTimeStamp>xpath:{soae-xf:get-time()}</ns2:DateTimeStamp>
                                    <ns2:ApplicationName>xpath:{'Origination'}</ns2:ApplicationName>
                                    <ns2:ExceptionCode>xpath:{'ZION_APP_5012'}</ns2:ExceptionCode>
                                    <ns2:ExceptionName>xpath:{'LoadExceptionLogXSLFailed'}</ns2:ExceptionName>
                                    <ns2:Description>xpath:{'Failed to load Exception log creation style sheet'}</ns2:Description>
                                    <ns2:LogLevel>xpath:{'ERROR'}</ns2:LogLevel>
                                    <ns2:Priority>xpath:{'P1'}</ns2:Priority>
                                    <ns2:Severity>xpath:{'CRITICAL'}</ns2:Severity>
                                    <ns2:AdditionalInfo>xpath:{'OriginationAsynchronousPostBack - NA'}</ns2:AdditionalInfo>
                                    <ns2:ProviderName>xpath:{concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)}</ns2:ProviderName>
                                    <ns2:ResponseName>xpath:{'Communication Failure'}</ns2:ResponseName>
                                    <ns2:ResponseCondition>xpath:{'Error'}</ns2:ResponseCondition>
                                    <ns2:ResponseCode>xpath:{'6001'}</ns2:ResponseCode>
                                    <ns2:ResponseDescription>xpath:{'System not available'}</ns2:ResponseDescription>
                                    <ns2:IncomingFileName>xpath:{$FileName}</ns2:IncomingFileName>
                                    </ns2:EXCEPTION>
                                    </ns2:EXCEPTIONS>
                                    </soae-ab:data>
                                    <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTION" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}RequestUUID" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{$TransactionUUID}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}TransactionID" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.1" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{soae-xf:get-transaction-id()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}CertificateNumber" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.2" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}DateTimeStamp" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.3" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{soae-xf:get-time()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ApplicationName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.4" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{'Origination'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ExceptionCode" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.5" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.5/@element">
                                    <value>xpath:{'ZION_APP_5012'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ExceptionName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.6" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.6/@element">
                                    <value>xpath:{'LoadExceptionLogXSLFailed'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Description" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.7" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.7/@element">
                                    <value>xpath:{'Failed to load Exception log creation style sheet'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}LogLevel" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.8" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.8/@element">
                                    <value>xpath:{'ERROR'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Priority" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.9" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.9/@element">
                                    <value>xpath:{'P1'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}Severity" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.10" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.10/@element">
                                    <value>xpath:{'CRITICAL'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}AdditionalInfo" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.11" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.11/@element">
                                    <value>xpath:{'OriginationAsynchronousPostBack - NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ProviderName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.12" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.12/@element">
                                    <value>xpath:{concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.13" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.13/@element">
                                    <value>xpath:{'Communication Failure'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseCondition" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.14" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.14/@element">
                                    <value>xpath:{'Error'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseCode" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.15" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.15/@element">
                                    <value>xpath:{'6001'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}ResponseDescription" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.16" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.16/@element">
                                    <value>xpath:{'System not available'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}IncomingFileName" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.17" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.17/@element">
                                    <value>xpath:{$FileName}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="1" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS/@typeDefinition/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                    </soae-ab:data2>
                                    <soae-ab:variables/>
                                    </soae-ab:XMLBuilder>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$CreateErrorLogXMLonExceptionXSlLoadFailure}" keepSrcElementName="false" name="UpdateExceptionXSLLoadFailure" xDestination="$XMLforGlobalException"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TAExceptionlogLoadFailure" name="TAExceptionlogLoadFailure">
                                    <soae-ab:data>
                                    <ns3:TRANSACTIONACTIVITY>
                                    <ns3:HEADER>
                                    <ns3:TransId>xpath:{soae-xf:get-transaction-id()}</ns3:TransId>
                                    <ns3:NodeName>xpath:{soae-xf:get-node-name()}</ns3:NodeName>
                                    <ns3:SourceApplicationName>xpath:{'Origination'}</ns3:SourceApplicationName>
                                    <ns3:SourceFileIdentifier>xpath:{$TransactionUUID}</ns3:SourceFileIdentifier>
                                    <ns3:BatchIdentifier>xpath:{'NA'}</ns3:BatchIdentifier>
                                    <ns3:CertificateIdentifier>xpath:{'NA'}</ns3:CertificateIdentifier>
                                    <ns3:SourceFileName>xpath:{$FileName}</ns3:SourceFileName>
                                    <ns3:TotalRecordCount>xpath:{1}</ns3:TotalRecordCount>
                                    <ns3:TotalMessageCount>xpath:{1}</ns3:TotalMessageCount>
                                    <ns3:TotalTransTimeInSecs>xpath:{0}</ns3:TotalTransTimeInSecs>
                                    <ns3:Status>xpath:{'SUCCESS'}</ns3:Status>
                                    </ns3:HEADER>
                                    <ns3:ACTIVITIES>
                                    <ns3:ACTIVITY Status="FAIL">
                                    <ns3:DateTime>xpath:{soae-xf:get-time()}</ns3:DateTime>
                                    <ns3:Code>xpath:{'ZION_APP_5012'}</ns3:Code>
                                    <ns3:Description>xpath:{'Failed to load CreateExceptionLog style sheet'}</ns3:Description>
                                    <ns3:MessageID>xpath:{'NA'}</ns3:MessageID>
                                    </ns3:ACTIVITY>
                                    </ns3:ACTIVITIES>
                                    </ns3:TRANSACTIONACTIVITY>
                                    </soae-ab:data>
                                    <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TransId" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{soae-xf:get-transaction-id()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}NodeName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{soae-xf:get-node-name()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceApplicationName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'Origination'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceFileIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{$TransactionUUID}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}BatchIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}CertificateIdentifier" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.5" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.5/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}SourceFileName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.6" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.6/@element">
                                    <value>xpath:{$FileName}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalRecordCount" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.7" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.7/@element">
                                    <value>xpath:{1}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalMessageCount" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.8" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.8/@element">
                                    <value>xpath:{1}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TotalTransTimeInSecs" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.9" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.9/@element">
                                    <value>xpath:{0}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Status" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.10" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.10/@element">
                                    <value>xpath:{'SUCCESS'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}HEADER/@particle/@modelGroup/@particle.11"/>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY/@particle/@modelGroup/@particle.1/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}DateTime" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{soae-xf:get-time()}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Code" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{'ZION_APP_5012'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}Description" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{'Failed to load CreateExceptionLog style sheet'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}MessageID" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITY/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{'NA'}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute form="qualified" name="Status">FAIL</attribute>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}ACTIVITIES/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                    </soae-ab:data2>
                                    <soae-ab:variables/>
                                    </soae-ab:XMLBuilder>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAExceptionlogLoadFailure}" keepSrcElementName="false" name="UpdateTAExceptionlogLoadFailure" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                                <bpws:rethrow/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:extensionActivity>
                        <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoadExceptionConfigXSL" from="$XMLforLoadingConfigs" name="LoadExceptionConfigXSL" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                            <soae-ab:params>
                                <soae-ab:param name="FirstBatch" value=""/>
                                <soae-ab:param name="DtTimeStamp" value=""/>
                                <soae-ab:param name="RequestUUID" value=""/>
                                <soae-ab:param name="TransactionID" value=""/>
                                <soae-ab:param name="CertificateNumber" value=""/>
                                <soae-ab:param name="ApplicationName" value=""/>
                                <soae-ab:param name="ExceptionCode" value=""/>
                                <soae-ab:param name="ExceptionName" value=""/>
                                <soae-ab:param name="Description" value=""/>
                                <soae-ab:param name="Loglevel" value=""/>
                                <soae-ab:param name="Severity" value=""/>
                                <soae-ab:param name="Priority" value=""/>
                                <soae-ab:param name="AdditionalInfo" value=""/>
                                <soae-ab:param name="ProviderName" value=""/>
                                <soae-ab:param name="ResponseName" value=""/>
                                <soae-ab:param name="ResponseCondition" value=""/>
                                <soae-ab:param name="ResponseCode" value=""/>
                                <soae-ab:param name="ResponseDescription" value=""/>
                                <soae-ab:param name="IncomingFileName" value=""/>
                            </soae-ab:params>
                        </soae-ab:XSLTransform>
                    </bpws:extensionActivity>
                </bpws:scope>
                <bpws:scope name="ScopeLoadCreateActivityNodeXSLT">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoadCreateActivityXSLfailure" from="$XMLforGlobalException" name="LoadCreateActivityXSLfailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2001'"/>
                                    <soae-ab:param name="ExceptionName" value="'LoadCreateActivityNodeXSLFailed'"/>
                                    <soae-ab:param name="Description" value="'Failed to load CreateActivityNode style sheet'"/>
                                    <soae-ab:param name="Loglevel" value="'WARNING'"/>
                                    <soae-ab:param name="Severity" value="'WARNING'"/>
                                    <soae-ab:param name="Priority" value="'P4'"/>
                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - N/A'"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value=""/>
                                    <soae-ab:param name="ResponseCondition" value=""/>
                                    <soae-ab:param name="ResponseCode" value=""/>
                                    <soae-ab:param name="ResponseDescription" value=""/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$LoadCreateActivityXSLfailure}" keepSrcElementName="false" name="UpdateLoadCreateActivityXSLfailure" xDestination="$XMLforGlobalException"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="LoadCreateActivityNodeFailed_ZIONLog" logLevel="verbose" name="LoadCreateActivityNodeFailed_ZIONLog" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>LoadCreateActivityNode failed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeLoadCreateActivityNodeXSLFailed_NotifyFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TALoadCreateActivityNodeXSLFailed_NotifyFailureRequestTransformationFailed" logLevel="verbose" name="TALoadCreateActivityNodeXSLFailed_NotifyFailureRequestTransformationFailed" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>TALoadCreateActivityNodeXSLFailed_NotifyFailureRequestTransformationFailed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TALoadCreateActivityNodeXSLFailed_NotifyFailureInvocationFailed" logLevel="verbose" name="TALoadCreateActivityNodeXSLFailed_NotifyFailureInvocationFailed" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>TALoadCreateActivityNodeXSLFailed_NotifyFailureInvocationFailed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence45">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_LoadCreateActivityNodeXSLFailed" from="$XMLforLoadingConfigs" name="XSLTransformation_LoadCreateActivityNodeXSLFailed" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2001'"/>
                                    <soae-ab:param name="ExceptionName" value="'LoadCreateActivityNodeXSLFailed'"/>
                                    <soae-ab:param name="Description" value="'Failed to load CreateActivityNode style sheet'"/>
                                    <soae-ab:param name="Loglevel" value="'WARNING'"/>
                                    <soae-ab:param name="Severity" value="'WARNING'"/>
                                    <soae-ab:param name="Priority" value="'P4'"/>
                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - N/A'"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="''"/>
                                    <soae-ab:param name="ResponseCondition" value="''"/>
                                    <soae-ab:param name="ResponseCode" value="''"/>
                                    <soae-ab:param name="ResponseDescription" value="''"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="LoadCreateActivityNodeXSLFailed_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="LoadCreateActivityNodeXSLFailed_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="LoadCreateActivityNodeXSLFailed_NotifyFailure" partnerLink="LoadCreateActivityNodeXSLFailed_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_LoadCreateActivityNodeXSLFailed}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="LoadCreateActivityNodeXSLFailed_NotifyFailureInput" inputMsgPart="body" operation="LoadCreateActivityNodeXSLFailed_NotifyFailureOperation" outputMsg="LoadCreateActivityNodeXSLFailed_NotifyFailureOutput" outputMsgPart="body" port="LoadCreateActivityNodeXSLFailed_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure}LoadCreateActivityNodeXSLFailed_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/LoadCreateActivityNodeXSLFailed_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TALoadCreateActivityNodeXSLFailed_NotifyFailure_Success" logLevel="verbose" name="TALoadCreateActivityNodeXSLFailed_NotifyFailure_Success" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>TALoadCreateActivityNodeXSLFailed_NotifyFailure_Success</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence3">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoadCreateActivityNode" from="$TransactionActivityXML" name="LoadCreateActivityNode" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="'NA'"/>
                                    <soae-ab:param name="RecordCount" value="'NA'"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1001'"/>
                                    <soae-ab:param name="Description" value="'CreateActivityNode stylesheet was successfully loaded'"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$LoadCreateActivityNode}" keepSrcElementName="false" name="TALoadCreateActivityNodeXSLLoaded" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:scope name="ScopeAppConfig">
                    <bpws:faultHandlers>
                        <bpws:catchAll>
                            <bpws:sequence>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoTwo" expression="xpath:{soae-cache:set-string('msg:GlobalError','02')}" keepSrcElementName="false" name="SetGlobalErrortoTwo" xDestination=""/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AppConfigLoadFailure" from="$XMLforGlobalException" name="AppConfigLoadFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5002'"/>
                                    <soae-ab:param name="ExceptionName" value="'LoadAppConfigXSLFailed'"/>
                                    <soae-ab:param name="Description" value="concat('Failed to load Application Config style sheet')"/>
                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>
                                    <soae-ab:param name="Severity" value="'CRITICAL'"/>
                                    <soae-ab:param name="Priority" value="'P1'"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$DecryptAppConfigValuesFailed)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="'COMMUNICATION'"/>
                                    <soae-ab:param name="ResponseCondition" value="'ERROR'"/>
                                    <soae-ab:param name="ResponseCode" value="'6001'"/>
                                    <soae-ab:param name="ResponseDescription" value="'System not available'"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$AppConfigLoadFailure}" keepSrcElementName="false" name="UpdateAppConfigLoadFailure" xDestination="$XMLforGlobalException"/>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTALoadAppConfigXSLFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALoadAppConfigXSLFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence99">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALoadAppConfigXSLFailed" from="$TransactionActivityXML" name="TALoadAppConfigXSLFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_5002'"/>
                                    <soae-ab:param name="Description" value="concat('Failed to load Application Config style sheet. ',$DecryptAppConfigValuesFailed)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALoadAppConfigXSLFailed}" keepSrcElementName="false" name="UpdateTALoadAppConfigXSLFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                                <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="AppConfigFailed_ZIONLog" logLevel="verbose" name="AppConfigFailed_ZIONLog" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>AppConfig loading failed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                </bpws:extensionActivity>
                                <bpws:rethrow/>
                            </bpws:sequence>
                        </bpws:catchAll>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence87">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="DecryptAppConfigValuesFailed" expression="xpath:{''}" keepSrcElementName="false" name="DecryptAppConfigValuesFailed" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/AppConfig}AppConfig" destinationTypeKind="ELEMENT" destinationVariable="AppConfig" from="$XMLforLoadingConfigs" name="AppConfig" stylesheet="AppConfig.xsl" stylesheetType="URL">
                                <soae-ab:params/>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="DecryptAppConfigValuesFailed" expression="xpath:{'Unable to Decrypt AppConfig Values'}" keepSrcElementName="false" name="UpdateDecryptAppConfigValuesFailed" xDestination="$DecryptAppConfigValuesFailed"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher" destinationTypeKind="ELEMENT" destinationVariable="DecryptAppConfigItems" name="DecryptAppConfigItems">
                                <soae-ab:explicitImports>
                                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/ComputeBlockCipher.xsd" tns="http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher"/>
                                </soae-ab:explicitImports>
                                <soae-ab:data>
                                    <ns183:ComputeBlockCipher>
                                    <ns183:ComputeBlockCipherDetails>
                                    <ns183:Credential Level="0">
                                    <ns183:Input>xpath:{string($AppConfig/ns4:SFTPURL)}</ns183:Input>
                                    <ns183:SaltBase64>xpath:{string($AppConfig/ns4:SaltText)}</ns183:SaltBase64>
                                    <ns183:InitVector>xpath:{''}</ns183:InitVector>
                                    <ns183:SymmetricKeyName>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</ns183:SymmetricKeyName>
                                    <ns183:Output>xpath:{''}</ns183:Output>
                                    </ns183:Credential>
                                    <ns183:Credential Level="1">
                                    <ns183:Input>xpath:{string($AppConfig/ns4:WebServerURL)}</ns183:Input>
                                    <ns183:SaltBase64>xpath:{string($AppConfig/ns4:SaltText)}</ns183:SaltBase64>
                                    <ns183:InitVector>xpath:{''}</ns183:InitVector>
                                    <ns183:SymmetricKeyName>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</ns183:SymmetricKeyName>
                                    <ns183:Output>xpath:{''}</ns183:Output>
                                    </ns183:Credential>
                                    </ns183:ComputeBlockCipherDetails>
                                    </ns183:ComputeBlockCipher>
                                </soae-ab:data>
                                <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher">
                                    <children>
                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipherDetails" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Input" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{string($AppConfig/ns4:SFTPURL)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SaltBase64" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{string($AppConfig/ns4:SaltText)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}InitVector" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SymmetricKeyName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Output" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute form="qualified" name="Level">0</attribute>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="1" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Input" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{string($AppConfig/ns4:WebServerURL)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SaltBase64" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{string($AppConfig/ns4:SaltText)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}InitVector" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SymmetricKeyName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Output" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute form="qualified" name="Level">1</attribute>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="2" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>
                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                </soae-ab:data2>
                                <soae-ab:variables/>
                            </soae-ab:XMLBuilder>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="DecryptAppConfig" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="DecryptAppConfig_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="DecryptAppConfig" partnerLink="DecryptAppConfig" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$DecryptAppConfigItems}"/>
                                <soae-ab:outboundPolicies/>
                                <soae-ab:inputData binary="false" empty="false" xsdElement="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher"/>
                                <soae-ab:outputData binary="false" oneway="false" xsdElement="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher"/>
                                <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="" serviceURI="https://127.0.0.1:9000/ComputeAES256Decrypt" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="DecryptAppConfigInput" inputMsgPart="body" operation="DecryptAppConfigOperation" outputMsg="DecryptAppConfigOutput" outputMsgPart="body" port="DecryptAppConfigPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DecryptAppConfig}DecryptAppConfigService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DecryptAppConfig" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/DecryptAppConfig.wsdl"/>
                                <soae-ab:inboundPolicies/>
                                <soae-ab:explicitImports>
                                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/ComputeBlockCipher.xsd" tns="http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher"/>
                                </soae-ab:explicitImports>
                            </soae-ab:InvokeBuilder>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SFTPURL" expression="xpath:{$DecryptAppConfig.body/ns183:ComputeBlockCipherDetails/ns183:Credential[@Level=&quot;0&quot;]/ns183:Output}" keepSrcElementName="false" name="SFTPURL" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="WebServerURL" expression="xpath:{$DecryptAppConfig.body/ns183:ComputeBlockCipherDetails/ns183:Credential[@Level=&quot;1&quot;]/ns183:Output}" keepSrcElementName="false" name="WebServerURL" xDestination=""/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:scope name="ScopeAppConfigLoaded">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAAppConfigLoadedFailed"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence59">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAppConfigLoaded" from="$TransactionActivityXML" name="TAAppConfigLoaded" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="'NA'"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1002'"/>
                                    <soae-ab:param name="Description" value="'ApplicationConfig stylesheet was successfully loaded'"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAppConfigLoaded}" keepSrcElementName="false" name="UpdateTAAppConfigLoaded" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EnvironmentName" expression="xpath:{string($AppConfig/ns4:EnvironmentName/text())}" keepSrcElementName="false" name="UpdateEnvironmentName" xDestination="$EnvironmentName"/>
                </bpws:extensionActivity>
                <bpws:scope name="ScopeStatusCodeConfig">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeStatusCodeConfig" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeStatusCodeConfig" xDestination=""/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="StatusCodeConfigLoadfailure" from="$XMLforGlobalException" name="StatusCodeConfigLoadfailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5003'"/>
                                    <soae-ab:param name="ExceptionName" value="'LoadStatusCodeConfigXSLFailed'"/>
                                    <soae-ab:param name="Description" value="'Failed to load StatusCodeConfig style sheet'"/>
                                    <soae-ab:param name="Loglevel" value="'ERROR'"/>
                                    <soae-ab:param name="Severity" value="'CRITICAL'"/>
                                    <soae-ab:param name="Priority" value="'P1'"/>
                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - N/A'"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="'Communication'"/>
                                    <soae-ab:param name="ResponseCondition" value="'Error'"/>
                                    <soae-ab:param name="ResponseCode" value="'6001'"/>
                                    <soae-ab:param name="ResponseDescription" value="'System not available'"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$StatusCodeConfigLoadfailure}" keepSrcElementName="false" name="UpdateStatusCodeLoadFailure" xDestination="$XMLforGlobalException"/>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTALoadStatusCodeConfigXSLFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALoadStatusCodeConfigXSLFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence100">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALoadStatusCodeConfigXSLFailed" from="$TransactionActivityXML" name="TALoadStatusCodeConfigXSLFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_5003'"/>
                                    <soae-ab:param name="Description" value="'Failed to load StatusCodeConfig style sheet'"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALoadStatusCodeConfigXSLFailed}" keepSrcElementName="false" name="UpdateTALoadStatusCodeConfigXSLFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                                <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="StatusCodeConfigXSLLoadFailed_ZIONLog" logLevel="verbose" name="StatusCodeConfigXSLLoadFailed_ZIONLog" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>Status code config XSLT file load failed.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                </bpws:extensionActivity>
                                <bpws:rethrow/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence123">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/StatusCodeConfig}STATUSCODES" destinationTypeKind="ELEMENT" destinationVariable="StatusCodeConfig" from="$XMLforLoadingConfigs" name="StatusCodeConfig" stylesheet="StatusCodeConfig.xsl" stylesheetType="URL">
                                <soae-ab:params/>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:scope name="ScopeTAStatusCodeConfig">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAStatusCodeConfigFailed"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence60">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAStatusCodeConfig" from="$TransactionActivityXML" name="TAStatusCodeConfig" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1003'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1003']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAStatusCodeConfig}" keepSrcElementName="false" name="UpdateTAStatusCodeConfig" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoadConfigFilesFlag" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateLoadConfigFilesFlag" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:scope name="ScopeDeterminIncomingResponseType">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeInvalidResponseContent" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeInvalidResponseContent" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseContentReceived" from="$XMLforGlobalException" name="InvalidResponseContentReceived" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2011'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBack - Unable to determine the incoming response type'"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$InvalidResponseContentReceived}" keepSrcElementName="false" name="UpdateInvalidResponseContent" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeInvalidResponseContentReceived">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAInvalidResponseContent"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence28">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInvalidResponseContent" from="$TransactionActivityXML" name="TAInvalidResponseContent" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2011'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInvalidResponseContent}" keepSrcElementName="false" name="UpdateTAInvalidResponseContent" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence78">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InputPayload" expression="xpath:{$Receive/soapenv:Body/OriginationResponse/*}" keepSrcElementName="false" name="InputPayload" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:Comment name="Comment13">Add new elseif block with request type determination to add new endpointversionformat</soae-ab:Comment>
                </bpws:extensionActivity>
                <bpws:if name="If_Determine_Incoming_Response_MISMO33">
                    <bpws:condition>(namespace-uri($InputPayload)='http://www.mismo.org/residential/2009/schemas') and (string($InputPayload/ns650:ABOUT_VERSIONS/ns650:ABOUT_VERSION/ns650:AboutVersionIdentifier)='3.3.0')</bpws:condition>
                    <bpws:sequence name="Sequence77">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{'MISMO33'}" keepSrcElementName="false" name="UpdateIncomingRequestTypeMISMO33" xDestination="$EndpointFormatVersion"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                    <bpws:elseif>
                        <bpws:condition>($InputPayload/RESPONSE/RESPONSE_DATA) or ($InputPayload/ns126:RESPONSE/ns126:RESPONSE_DATA)</bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{'MISMO231'}" keepSrcElementName="false" name="UpdateIncomingRequestTypeMISMO231" xDestination="$EndpointFormatVersion"/>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>(namespace-uri($InputPayload)='http://Radian.Services.Schemas')</bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{'XCM404'}" keepSrcElementName="false" name="UpdateIncomingRequestTypeXCM" xDestination="$EndpointFormatVersion"/>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                    <bpws:else>
                        <bpws:sequence name="Sequence76">
                            <bpws:throw faultName="bpws:missingRequest" name="ThrowInvalidResponseContent"/>
                        </bpws:sequence>
                    </bpws:else>
                </bpws:if>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifiedRequestMISMOVersion" expression="xpath:{$EndpointFormatVersion}" keepSrcElementName="false" name="IdentifiedRequestMISMOVersion" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MISMOVersion" expression="xpath:{$EndpointFormatVersion}" keepSrcElementName="false" name="MISMOVersion" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="IncomingRequest" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{''}" keepSrcElementName="false" name="IncomingNameSpace" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingRootElement" expression="xpath:{''}" keepSrcElementName="false" name="IncomingRootElement" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://Radian.Services.Schemas}MESSAGE" destinationTypeKind="ELEMENT" destinationVariable="XCMRequest" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="XCMRequest" xDestination="">
                <soae-ab:explicitImports>
                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/XCM4.0.4/MESSAGE.xsd" tns="http://Radian.Services.Schemas"/>
                </soae-ab:explicitImports>
            </soae-ab:AssignBuilder>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{'http://Radian.Services.Schemas'}" keepSrcElementName="false" name="UpdateXCMNamespace" xDestination="$IncomingNameSpace"/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest}MESSAGE" destinationTypeKind="ELEMENT" destinationVariable="MISMO33Request" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="MISMO33Request" xDestination="">
                <soae-ab:explicitImports>
                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/MISMO3.3/MISMO_3.3.0_B299.xsd" tns="http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest"/>
                </soae-ab:explicitImports>
            </soae-ab:AssignBuilder>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest'}" keepSrcElementName="false" name="UpdateMISMO33NameSpace" xDestination="$IncomingNameSpace"/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse}RESPONSE_GROUP" destinationTypeKind="ELEMENT" destinationVariable="MISMO231Request" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="MISMO231Request" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1}RESPONSE_GROUP" destinationTypeKind="ELEMENT" destinationVariable="MISMO231QueryRequest" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="MISMO231QueryRequest" xDestination="$MISMO231QueryRequest"/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse'}" keepSrcElementName="false" name="ResponseNS" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="ResponseRootElement" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MIApplicationType" expression="xpath:{'N/A'}" keepSrcElementName="false" name="MIApplicationType" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MIServiceType" expression="xpath:{'N/A'}" keepSrcElementName="false" name="MIServiceType" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:Comment name="Comment2">Assuming that postback response schema version is same as request schema version.
After loading LPA profile and authorization steps the ResponseNS and ResponseRootElement will be updated accordingly.</soae-ab:Comment>
        </bpws:extensionActivity>
        <bpws:if name="If_MISMO33">
            <bpws:condition>$EndpointFormatVersion='MISMO33'</bpws:condition>
            <bpws:sequence name="Sequence102">
                <bpws:extensionActivity>
                    <soae-ab:Comment name="Comment7">MISMO33 Response</soae-ab:Comment>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest}MESSAGE" destinationTypeKind="ELEMENT" destinationVariable="MISMO33Request" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="UpdateToMISMO33Request" xDestination="$MISMO33Request"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="AssignMISMO33IncomingRequest" xDestination="$IncomingRequest"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest'}" keepSrcElementName="false" name="UpdateToMISMO33NS" xDestination="$IncomingNameSpace"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateToMISMO33RootElement" xDestination="$IncomingRootElement"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest'}" keepSrcElementName="false" name="UpdateResponseNStoMISMO33" xDestination="$ResponseNS"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateResponseRootElementToMISMO33" xDestination="$ResponseRootElement"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MIApplicationType" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_REQUEST/ns123:MI_APPLICATION/ns123:MIApplicationType)}" keepSrcElementName="false" name="UpdateMIApplicationType" xDestination="$MIApplicationType"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MIServiceType" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_REQUEST/ns123:MI_APPLICATION/ns123:MIServiceType)}" keepSrcElementName="false" name="UpdateMIServiceType" xDestination="$MIServiceType"/>
                </bpws:extensionActivity>
            </bpws:sequence>
            <bpws:elseif>
                <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                <bpws:sequence name="Sequence103">
                    <bpws:extensionActivity>
                        <soae-ab:Comment name="Comment9">Currently getting the postback url from request for only MISMO231 EndpointFormatVersionCd</soae-ab:Comment>
                    </bpws:extensionActivity>
                    <bpws:if name="If_MISMO231Query">
                        <bpws:condition>($InputPayload/RESPONSE/RESPONSE_DATA/MI_QUERY_RESULTS) or ($InputPayload/ns126:RESPONSE/ns126:RESPONSE_DATA/ns126:MI_QUERY_RESULTS)
						</bpws:condition>
                        <bpws:sequence name="Sequence172">
                            <bpws:extensionActivity>
                                <soae-ab:Comment name="Comment5">MISMO231 MIQueryResponse</soae-ab:Comment>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1}RESPONSE_GROUP" destinationTypeKind="ELEMENT" destinationVariable="MISMO231QueryRequest" expression="xpath:{$ResponseXML}" keepSrcElementName="false" name="UpdateRequestToMISMO231QueryType" xDestination="$MISMO231QueryRequest"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="AssingMISMO231QueryIncomingRequest" xDestination="$IncomingRequest"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{&quot;http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1&quot;}" keepSrcElementName="false" name="UpdateToMISMO231QueryRequestNS" xDestination="$IncomingNameSpace"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="UpdateToMISMO231QueryRequestRootElement" xDestination="$IncomingRootElement"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1'}" keepSrcElementName="false" name="UpdateResponseNStoMISMO231QRY" xDestination="$ResponseNS"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="UpdateResposneRootElementToMISMO231QRY" xDestination="$ResponseRootElement"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifiedRequestMISMOVersion" expression="xpath:{'MISMO231QRY'}" keepSrcElementName="false" name="UpdateMISMOVersiontoMI231QRY" xDestination="$IdentifiedRequestMISMOVersion"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                        <bpws:else>
                            <bpws:sequence name="Sequence173">
                                <bpws:extensionActivity>
                                    <soae-ab:Comment name="Comment4">MISMO231 MIApplicationResponse</soae-ab:Comment>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse}RESPONSE_GROUP" destinationTypeKind="ELEMENT" destinationVariable="MISMO231Request" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="UpdateToMISMO231Request" xDestination="$MISMO231Request"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="AssignMISMO231IncomingRequest" xDestination="$IncomingRequest"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse'}" keepSrcElementName="false" name="UpdateToMISMO231NS" xDestination="$IncomingNameSpace"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="UpdateToMISMO231RootElement" xDestination="$IncomingRootElement"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse'}" keepSrcElementName="false" name="UpdateResponseNStoMISMO231" xDestination="$ResponseNS"/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="UpdateResposneRootElementToMISMO231" xDestination="$ResponseRootElement"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:else>
                    </bpws:if>
                </bpws:sequence>
            </bpws:elseif>
            <bpws:elseif>
                <bpws:condition>$EndpointFormatVersion='XCM404'</bpws:condition>
                <bpws:sequence name="Sequence48">
                    <bpws:extensionActivity>
                        <soae-ab:Comment name="Comment8">XCM Response</soae-ab:Comment>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XCMRequest" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="UpdateToXCMRequest" xDestination="$XCMRequest"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$InputPayload}" keepSrcElementName="false" name="AssignXCMIncomingRequest" xDestination="$IncomingRequest"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingNameSpace" expression="xpath:{'http://Radian.Services.Schemas'}" keepSrcElementName="false" name="UpdateToXCMNS" xDestination="$IncomingNameSpace"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="IncomingRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateToXCMRootElement" xDestination="$IncomingRootElement"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://Radian.Services.Schemas'}" keepSrcElementName="false" name="UpdateResponseNStoXCM" xDestination="$ResponseNS"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateResponseRootElementtoXCM" xDestination="$ResponseRootElement"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseACKNamespace" expression="xpath:{'http://Radian.Services.Schemas'}" keepSrcElementName="false" name="UpdateResponseACKNStoXCM" xDestination="$ResponseACKNamespace"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseACKRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateResponseACKRootElementtoXCM" xDestination="$ResponseACKRootElement"/>
                    </bpws:extensionActivity>
                </bpws:sequence>
            </bpws:elseif>
        </bpws:if>
        <bpws:if name="If_NameSpace_Exists_On_Request">
            <bpws:condition>namespace-uri($InputPayload)!='' and (namespace-uri($InputPayload)='http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse' or namespace-uri($InputPayload)='http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1') or (namespace-uri($InputPayload)='http://Radian.Services.Schemas')</bpws:condition>
            <bpws:sequence name="Sequence14">
                <bpws:empty name="Donothing_ContinueToNextStep"/>
            </bpws:sequence>
            <bpws:else>
                <bpws:sequence name="Sequence66">
                    <bpws:scope name="ScopeTANameSpaceCheckComplete">
                        <bpws:faultHandlers>
                            <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                <bpws:sequence>
                                    <bpws:empty name="EmptyTANameSpaceCheckCompleteFailed"/>
                                </bpws:sequence>
                            </bpws:catch>
                        </bpws:faultHandlers>
                        <bpws:sequence name="Sequence66">
                            <bpws:extensionActivity>
                                <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TANameSpaceCheckComplete" from="$TransactionActivityXML" name="TANameSpaceCheckComplete" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1006'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1006']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                </soae-ab:XSLTransform>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TANameSpaceCheckComplete}" keepSrcElementName="false" name="UpdateTANameSpaceCheckComplete" xDestination="$TransactionActivityXML"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:scope>
                    <bpws:if name="AddNamespace_after_determining_IncomingRequest_version">
                        <bpws:condition>$IdentifiedRequestMISMOVersion='MISMO231' or $IdentifiedRequestMISMOVersion='MISMO32' or $IdentifiedRequestMISMOVersion='MISMO33' or $IdentifiedRequestMISMOVersion='MISMO231QRY' or $IdentifiedRequestMISMOVersion='XCM404'</bpws:condition>
                        <bpws:sequence name="Sequence6">
                            <bpws:scope name="ScopeAddMISMONameSpace">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeAddNameSpaceToRequestFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeAddNameSpaceToRequestFailure" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AddNameSpaceToRequestFailure" from="$XMLforGlobalException" name="AddNameSpaceToRequestFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5004'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$AddNameSpaceToRequestFailure}" keepSrcElementName="false" name="UpdateAddNameSpaceToRequestFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAAddNameSpaceToRequestFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAddNameSpaceToRequestFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence105">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAddNameSpaceToRequestFailed" from="$TransactionActivityXML" name="TAAddNameSpaceToRequestFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_5004'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5004']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAddNameSpaceToRequestFailed}" keepSrcElementName="false" name="UpdateTAAddNameSpaceToRequestFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="AddNameSpaceToRequestFailed_ZIONLog" logLevel="verbose" name="AddNameSpaceToRequestFailed_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Add Namespace to incoming request failed</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence9">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AddNameSpaceToRequest" from="$InputPayload" name="AddNameSpaceToRequest" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/Add',$IdentifiedRequestMISMOVersion,'ResponseNamespace.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$AddNameSpaceToRequest}" keepSrcElementName="false" name="UpdateIncomingRequestWithNS" xDestination="$IncomingRequest"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAAddNameSpaceToRequestSuccess">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAddNameSpaceToRequestSuccessFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence68">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAddNameSpaceToRequestSuccess" from="$TransactionActivityXML" name="TAAddNameSpaceToRequestSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1007'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1007']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAddNameSpaceToRequestSuccess}" keepSrcElementName="false" name="UpdateTAAddNameSpaceToRequestSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                </bpws:sequence>
                            </bpws:scope>
                        </bpws:sequence>
                    </bpws:if>
                </bpws:sequence>
            </bpws:else>
        </bpws:if>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostbackURLfromRequest" expression="xpath:{''}" keepSrcElementName="false" name="PostbackURLfromRequest" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:if name="If_check_MISMO33NS_added">
            <bpws:condition>$IdentifiedRequestMISMOVersion='MISMO33'
			</bpws:condition>
            <bpws:sequence name="Sequence8">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest}MESSAGE" destinationTypeKind="ELEMENT" destinationVariable="MISMO33Request" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="UpdateMISMO33Request" xDestination="$MISMO33Request"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostbackURLfromRequest" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_RESPONSE/ns123:PARTIES/ns123:PARTY[ns123:ROLES/ns123:ROLE/ns123:ROLE_DETAIL/ns123:PartyRoleType='ReturnTo'][1]/ns123:ROLES/ns123:ROLE[ns123:ROLE_DETAIL/ns123:PartyRoleType='ReturnTo']/ns123:RETURN_TO/ns123:PREFERRED_RESPONSES/ns123:PREFERRED_RESPONSE/ns123:PreferredResponseDestinationDescription)}" keepSrcElementName="false" name="MISMO33PostbackURLfromrEquest" xDestination="$PostbackURLfromRequest"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Email" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_RESPONSE/ns123:PARTIES/ns123:PARTY[ns123:ROLES/ns123:ROLE/ns123:ROLE_DETAIL/ns123:PartyRoleType='RespondToParty']/ns123:LEGAL_ENTITY/ns123:CONTACTS/ns123:CONTACT/ns123:CONTACT_POINTS/ns123:CONTACT_POINT/ns123:CONTACT_POINT_EMAIL/ns123:ContactPointEmailValue)}" keepSrcElementName="false" name="UpdateEmailMISMO33" xDestination="$Email"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Phone" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_RESPONSE/ns123:PARTIES/ns123:PARTY[ns123:ROLES/ns123:ROLE/ns123:ROLE_DETAIL/ns123:PartyRoleType='RespondToParty']/ns123:LEGAL_ENTITY/ns123:CONTACTS/ns123:CONTACT/ns123:CONTACT_POINTS/ns123:CONTACT_POINT/ns123:CONTACT_POINT_TELEPHONE/ns123:ContactPointTelephoneValue)}" keepSrcElementName="false" name="UpdatePhoneMISMO33" xDestination="$Phone"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="FirstName" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_RESPONSE/ns123:PARTIES/ns123:PARTY[ns123:ROLES/ns123:ROLE/ns123:ROLE_DETAIL/ns123:PartyRoleType='RespondToParty']/ns123:LEGAL_ENTITY/ns123:CONTACTS/ns123:CONTACT/ns123:NAME/ns123:FirstName)}" keepSrcElementName="false" name="UpdateFirstNameMISMO33" xDestination="$FirstName"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LastName" expression="xpath:{string($MISMO33Request/ns123:DEAL_SETS/ns123:DEAL_SET/ns123:DEALS/ns123:DEAL/ns123:SERVICES/ns123:SERVICE/ns123:MI/ns123:MI_APPLICATION_RESPONSE/ns123:PARTIES/ns123:PARTY[ns123:ROLES/ns123:ROLE/ns123:ROLE_DETAIL/ns123:PartyRoleType='RespondToParty']/ns123:LEGAL_ENTITY/ns123:CONTACTS/ns123:CONTACT/ns123:NAME/ns123:LastName)}" keepSrcElementName="false" name="UpdateLastNameMISMO33" xDestination="$LastName"/>
                </bpws:extensionActivity>
            </bpws:sequence>
            <bpws:elseif>
                <bpws:condition>$IdentifiedRequestMISMOVersion='MISMO231'</bpws:condition>
                <bpws:sequence name="Sequence169">
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse}RESPONSE_GROUP" destinationTypeKind="ELEMENT" destinationVariable="MISMO231Request" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="UpdateMISMO231RequestwithNS" xDestination="$MISMO231Request"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostbackURLfromRequest" expression="xpath:{string($MISMO231Request/ns32:RESPONSE/ns32:KEY[@_Name=&quot;POSTBACKURL&quot;]/@_Value)}" keepSrcElementName="false" name="MISMO231RequestPostbackURLfromKeyValuePair" xDestination="$PostbackURLfromRequest"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Email" expression="xpath:{string($MISMO231Request/ns32:RESPOND_TO_PARTY/ns32:CONTACT_DETAIL/ns32:CONTACT_POINT[@_Type='Email']/@_Value)}" keepSrcElementName="false" name="UpdateEmailMISMO231" xDestination="$Email"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Phone" expression="xpath:{string($MISMO231Request/ns32:RESPOND_TO_PARTY/ns32:CONTACT_DETAIL/ns32:CONTACT_POINT[@_Type='Phone']/@_Value)}" keepSrcElementName="false" name="UpdatePhoneMISMO231" xDestination="$Phone"/>
                    </bpws:extensionActivity>
                </bpws:sequence>
            </bpws:elseif>
            <bpws:elseif>
                <bpws:condition>$IdentifiedRequestMISMOVersion='MISMO231QRY'</bpws:condition>
                <bpws:sequence name="Sequence170">
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1}RESPONSE_GROUP" destinationTypeKind="ELEMENT" destinationVariable="MISMO231QueryRequest" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="UpdateMISMOQRYRequest" xDestination="$MISMO231QueryRequest"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostbackURLfromRequest" expression="xpath:{string($MISMO231QueryRequest/ns126:RESPONSE/ns126:KEY[@_Name=&quot;POSTBACKURL&quot;]/@_Value)}" keepSrcElementName="false" name="MISMO231QueryRequestPostbackURLfromKeyValuePair" xDestination="$PostbackURLfromRequest"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Email" expression="xpath:{string($MISMO231QueryRequest/ns126:RESPOND_TO_PARTY/ns126:CONTACT_DETAIL/ns126:CONTACT_POINT[@_Type='Email']/@_Value)}" keepSrcElementName="false" name="UpdateEmailMISMOQR" xDestination="$Email"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Phone" expression="xpath:{string($MISMO231QueryRequest/ns126:RESPOND_TO_PARTY/ns126:CONTACT_DETAIL/ns126:CONTACT_POINT[@_Type='Phone']/@_Value)}" keepSrcElementName="false" name="UpdatePhoneMISMOQR" xDestination="$Phone"/>
                    </bpws:extensionActivity>
                </bpws:sequence>
            </bpws:elseif>
            <bpws:elseif>
                <bpws:condition>$IdentifiedRequestMISMOVersion='XCM404'</bpws:condition>
                <bpws:sequence name="Sequence125">
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://Radian.Services.Schemas}MESSAGE" destinationTypeKind="ELEMENT" destinationVariable="UpdateXCMRequestwithNS" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="UpdateXCMRequestwithNS" xDestination=""/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Email" expression="xpath:{string($UpdateXCMRequestwithNS/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:PARTIES/ns146:PARTY[ns146:ROLES/ns146:ROLE/ns146:ROLE_DETAIL/ns146:PartyRoleType='RespondToParty']/ns146:LEGAL_ENTITY/ns146:CONTACTS/ns146:CONTACT/ns146:CONTACT_POINTS/ns146:CONTACT_POINT/ns146:CONTACT_POINT_EMAIL/ns146:ContactPointEmailValue)}" keepSrcElementName="false" name="UpdateEmailXCMRequest" xDestination="$Email"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Phone" expression="xpath:{string($UpdateXCMRequestwithNS/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:PARTIES/ns146:PARTY[ns146:ROLES/ns146:ROLE/ns146:ROLE_DETAIL/ns146:PartyRoleType='RespondToParty']/ns146:LEGAL_ENTITY/ns146:CONTACTS/ns146:CONTACT/ns146:CONTACT_POINTS/ns146:CONTACT_POINT/ns146:CONTACT_POINT_TELEPHONE/ns146:ContactPointTelephoneValue)}" keepSrcElementName="false" name="UpdatePhoneXCMRequest" xDestination="$Phone"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="FirstName" expression="xpath:{string($UpdateXCMRequestwithNS/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:PARTIES/ns146:PARTY[ns146:ROLES/ns146:ROLE/ns146:ROLE_DETAIL/ns146:PartyRoleType='RespondToParty']/ns146:LEGAL_ENTITY/ns146:CONTACTS/ns146:CONTACT/ns146:NAME/ns146:FirstName)}" keepSrcElementName="false" name="UpdateFirstName" xDestination="$FirstName"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LastName" expression="xpath:{string($UpdateXCMRequestwithNS/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:PARTIES/ns146:PARTY[ns146:ROLES/ns146:ROLE/ns146:ROLE_DETAIL/ns146:PartyRoleType='RespondToParty']/ns146:LEGAL_ENTITY/ns146:CONTACTS/ns146:CONTACT/ns146:NAME/ns146:LastName)}" keepSrcElementName="false" name="UpdateLastName" xDestination="$LastName"/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostbackURLfromRequest" expression="xpath:{string($UpdateXCMRequestwithNS/ns146:HEADER/ns146:SERVICE_INFORMATION/ns146:URIS/ns146:URI[ns146:UriType='PostBack']/ns146:UriValue)}" keepSrcElementName="false" name="UpdatePostbackURLfromXCMRequest" xDestination="$PostbackURLfromRequest"/>
                    </bpws:extensionActivity>
                </bpws:sequence>
            </bpws:elseif>
        </bpws:if>
        <bpws:scope name="ScopeSchemaValidateRequest">
            <bpws:faultHandlers>
                <bpws:catch faultElement="soae-fault:schemaValidateNodeFault" faultVariable="RequestXMLSchemaValidationfaultvar">
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorroThreeRequestSchemaValidationFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorroThreeRequestSchemaValidationFail" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="RequestSchemaValidationFailure" from="$XMLforGlobalException" name="RequestSchemaValidationFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2005'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',string($RequestXMLSchemaValidationfaultvar/faultString))"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$RequestSchemaValidationFailure}" keepSrcElementName="false" name="UpdateRequestSchemaValidationFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTAMISMOSchemaValidationFailed">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAMISMOSchemaValidationFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence106">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAMISMOSchemaValidationFailed" from="$TransactionActivityXML" name="TAMISMOSchemaValidationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2005'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2005']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAMISMOSchemaValidationFailed}" keepSrcElementName="false" name="UpdateTAMISMOSchemaValidationFailed" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="RequestSchemaValidation_ZIONLog" logLevel="verbose" name="RequestSchemaValidation_ZIONLog" nodeName="false" optionalData="$RequestXMLSchemaValidationfaultvar" transactionID="false">
                                <soae-ab:comment/>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence42">
                <bpws:extensionActivity>
                    <soae-ab:ValidationBuilder componentIdentification="elementName" data="$IncomingRequest" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="RequestXMLSchemaValidation" elementName="xpath:{$IncomingRootElement}" name="RequestXMLSchemaValidation" schemaIdentification="targetNamespace" targetNamespace="xpath:{$IncomingNameSpace}" throwFault="true" urlLocal="false"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeTAInboundMISMOSchemaValSuccess">
            <bpws:faultHandlers>
                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                    <bpws:sequence>
                        <bpws:empty name="EmptyTAInboundMISMOSchemaValSuccessFailed"/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence69">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInboundMISMOSchemaValSuccess" from="$TransactionActivityXML" name="TAInboundMISMOSchemaValSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="FirstActivity" value="1"/>
                            <soae-ab:param name="BatchActivity" value="0"/>
                            <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                            <soae-ab:param name="RecordCount" value="1"/>
                            <soae-ab:param name="Status" value="'SUCCESS'"/>
                            <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                            <soae-ab:param name="Code" value="'ZION_APP_1008'"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1008']/ns5:StatusDescription"/>
                            <soae-ab:param name="MessageID" value="'NA'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInboundMISMOSchemaValSuccess}" keepSrcElementName="false" name="UpdateTAInboundMISMOSchemaValSuccess" xDestination="$TransactionActivityXML"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadata" expression="xpath:{'Failed while extracting the metadata from the incoming response'}" keepSrcElementName="false" name="InvalidResponseMetadata" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:scope name="ScopeGetRequiredDetailsFromResponseMetadata">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeInvalidResponseMetadata" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeInvalidResponseMetadata" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadataReceived" from="$XMLforGlobalException" name="InvalidResponseMetadataReceived" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2011'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$InvalidResponseMetadata)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$InvalidResponseMetadataReceived}" keepSrcElementName="false" name="UpdateInvalidResponseMetadata" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeInvalidResponseMetadataReceived">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAInvalidResponseMetadata"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence28">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInvalidResponseMetadata" from="$TransactionActivityXML" name="TAInvalidResponseMetadata" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2011'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2011']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInvalidResponseMetadata}" keepSrcElementName="false" name="UpdateTAInvalidResponseMetadata" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence7">
                <bpws:if name="If_Incoming_Request_XCM">
                    <bpws:condition>$EndpointFormatVersion='XCM404'</bpws:condition>
                    <bpws:sequence name="Sequence73">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="CustomerNumber" expression="xpath:{string($InputPayload/ns146:CUSTOMERPROFILES/ns146:CUSTOMERPROFILE/ns146:TRADING_PARTNERS/ns146:TRADING_PARTNER/ns146:AccountNumber)}" keepSrcElementName="false" name="UpdateCustomerNumber" xDestination="$CustomerNumber"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="VendorID" expression="xpath:{string($InputPayload/ns146:CUSTOMERPROFILES/ns146:CUSTOMERPROFILE/ns146:TRADING_PARTNERS/ns146:TRADING_PARTNER/ns146:OriginationProductID)}" keepSrcElementName="false" name="UpdateVendorID" xDestination="$VendorID"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{string($InputPayload/ns146:HEADER/ns146:SOURCE/ns146:MessageVersion)}" keepSrcElementName="false" name="UpdateEndpointFormatVersion" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifiedRequestMISMOVersion" expression="xpath:{$EndpointFormatVersion}" keepSrcElementName="false" name="UpdateIdentifiedRequestMISMOVersion" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MISMOVersion" expression="xpath:{$EndpointFormatVersion}" keepSrcElementName="false" name="UpdateMISMOVersion" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ServiceCD" expression="xpath:{string($InputPayload/ns146:HEADER/ns146:SERVICE_INFORMATION/ns146:OperationName)}" keepSrcElementName="false" name="UpdateServiceCD" xDestination="$ServiceCD"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="OperationType" expression="xpath:{$ServiceCD}" keepSrcElementName="false" name="UpdateOperationType" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="TransactionUUID" expression="xpath:{string($InputPayload/ns146:HEADER/ns146:HEADER_DETAIL/ns146:TransactionIdentifier)}" keepSrcElementName="false" name="UpdateTransactionUUID" xDestination="$TransactionUUID"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                    <bpws:elseif>
                        <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:Comment name="Comment14">Place holder for MISMO231 Response Metatdata </soae-ab:Comment>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>$EndpointFormatVersion='MISMO33'</bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:Comment name="Comment15">Place holder for MISMO33 Response Metatdata </soae-ab:Comment>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                </bpws:if>
                <bpws:extensionActivity>
                    <soae-ab:Comment name="Comment1">Expression to determine which part of the response metadata is invalid and the same will be used to poppulate in Additional Info section</soae-ab:Comment>
                </bpws:extensionActivity>
                <bpws:if name="IfResponseMetadataIsInvalid">
                    <bpws:condition>$CustomerNumber=''</bpws:condition>
                    <bpws:sequence name="Sequence20">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadata" expression="xpath:{'Customer Number cannot be empty.'}" keepSrcElementName="false" name="UpdateCustomerNumberIsInvalid" xDestination="$InvalidResponseMetadata"/>
                        </bpws:extensionActivity>
                        <bpws:throw faultName="bpws:missingRequest" name="ThrowIfCustomerNumberIsInvalid"/>
                    </bpws:sequence>
                    <bpws:elseif>
                        <bpws:condition>$VendorID='' or (string-length($VendorID)!=2)</bpws:condition>
                        <bpws:sequence name="Sequence23">
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadata" expression="xpath:{'Vendor ID is invalid or empty'}" keepSrcElementName="false" name="UpdateVendorIDIsInvalid" xDestination="$InvalidResponseMetadata"/>
                            </bpws:extensionActivity>
                            <bpws:throw faultName="bpws:missingRequest" name="ThrowIfVendorIDIsInvalid"/>
                        </bpws:sequence>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>$EndpointFormatVersion='' or (translate($AppConfig/ns4:ValidServiceEndpointFormatVersions[ns4:ServiceEndpointFormatVersion=$EndpointFormatVersion]/ns4:ServiceEndpointFormatVersion,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='')</bpws:condition>
                        <bpws:sequence name="Sequence46">
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadata" expression="xpath:{concat('Endpoint Format Version is invalid or empty. EndpointFormatVersion : ',$EndpointFormatVersion)}" keepSrcElementName="false" name="UpdateEndpointFormatVersionIsInvalid" xDestination="$InvalidResponseMetadata"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EndpointFormatVersion" expression="xpath:{''}" keepSrcElementName="false" name="UpdateEndpointFormatVersionToEmpty" xDestination="$EndpointFormatVersion"/>
                            </bpws:extensionActivity>
                            <bpws:throw faultName="bpws:missingRequest" name="ThrowEndpointFormatVersionIsInvalid"/>
                        </bpws:sequence>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>$ServiceCD='' or ($ServiceCD!='MIRQT' and $ServiceCD!='MIQRY' and $ServiceCD!='MIORD')</bpws:condition>
                        <bpws:sequence name="Sequence26">
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadata" expression="xpath:{'Service Operation is invalid or empty'}" keepSrcElementName="false" name="UpdateServiceOperationIsInvalid" xDestination="$InvalidResponseMetadata"/>
                            </bpws:extensionActivity>
                            <bpws:throw faultName="bpws:missingRequest" name="ThrowIfServiceOperationIsInvalid"/>
                        </bpws:sequence>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>$TransactionUUID=''</bpws:condition>
                        <bpws:sequence name="Sequence27">
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvalidResponseMetadata" expression="xpath:{'UUID cannot be empty'}" keepSrcElementName="false" name="UpdateUUIDIsInvalid" xDestination="$InvalidResponseMetadata"/>
                            </bpws:extensionActivity>
                            <bpws:throw faultName="bpws:missingRequest" name="ThrowIfUUIDIsInvalid"/>
                        </bpws:sequence>
                    </bpws:elseif>
                </bpws:if>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TransactionUUID}" keepSrcElementName="false" name="UpdateSourceFileIdentifierInTAHeader" xDestination="$TransactionActivityXML/ns3:HEADER/ns3:SourceFileIdentifier"/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="CustomerNumber" expression="xpath:{translate(string($CustomerNumber),' ~`!@#$%^*()-_=+{}[]\|;:,.&amp;?&quot;/&lt;&gt;','')}" keepSrcElementName="false" name="RemoveSpecialCharFromCustomerNumber" xDestination="$CustomerNumber"/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="StripedCustomerNumber" expression="xpath:{$CustomerNumber}" keepSrcElementName="false" name="UpdateStripedCustomerNumber" xDestination="$StripedCustomerNumber"/>
        </bpws:extensionActivity>
        <bpws:scope name="ScopeAsyncResponseReceived_CreateEvent">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:scope name="ScopeTAAsyncResponseReceived_CreateEventFailed">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseReceived_CreateEventFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence111">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseReceived_CreateEventFailed" from="$TransactionActivityXML" name="TAAsyncResponseReceived_CreateEventFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseReceived_CreateEventFailed}" keepSrcElementName="false" name="UpdateTAAsyncResponseReceived_CreateEventFailed" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopeAsyncResponseReceived_CreateEventFailed_NotifyFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAAsyncResponseReceived_CreateEventFailed_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseReceived_CreateEventFailed_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseReceived_CreateEventFailed_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TAAsyncResponseReceived_CreateEventFailed_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2027']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseReceived_CreateEventFailed_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTAAsyncResponseReceived_CreateEventFailed_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catch>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAAsyncResponseReceived_CreateEventFailed_NotifyFailureFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseReceived_CreateEventFailed_NotifyFailureFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseReceived_CreateEventFailed_NotifyFailureFailed" from="$TransactionActivityXML" name="TAAsyncResponseReceived_CreateEventFailed_NotifyFailureFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2028']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseReceived_CreateEventFailed_NotifyFailureFailed}" keepSrcElementName="false" name="UpdateTAAsyncResponseReceived_CreateEventFailed_NotifyFailureFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence114">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_AsyncResponseReceived_CreateEventFailed_NotifyFailure" from="$XMLforLoadingConfigs" name="XSLTransformation_AsyncResponseReceived_CreateEventFailed_NotifyFailure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="''"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="ExceptionName" value="'CreateEventComponentRequestTransformationFailed'"/>
                                    <soae-ab:param name="Description" value="'Failed to transform Request data for CreateEventProcess'"/>
                                    <soae-ab:param name="Loglevel" value="'WARNING'"/>
                                    <soae-ab:param name="Severity" value="'WARNING'"/>
                                    <soae-ab:param name="Priority" value="'P4'"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess-',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="$VendorID"/>
                                    <soae-ab:param name="ResponseName" value="''"/>
                                    <soae-ab:param name="ResponseCondition" value="''"/>
                                    <soae-ab:param name="ResponseCode" value="''"/>
                                    <soae-ab:param name="ResponseDescription" value="''"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure" partnerLink="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_AsyncResponseReceived_CreateEventFailed_NotifyFailure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailureInput" inputMsgPart="body" operation="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailureOperation" outputMsg="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailureOutput" outputMsgPart="body" port="AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure}AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/AsyncResponseRecevied_CreateEventFailed_InvokeNotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTAAsyncResponseReceived_CreateEventFailed_NotifyFailureSuccess">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseReceived_CreateEventFailed_NotifyFailureSuccess"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence74">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseReceived_CreateEventFailed_NotifyFailureSuccess" from="$TransactionActivityXML" name="TAAsyncResponseReceived_CreateEventFailed_NotifyFailureSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1055']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseReceived_CreateEventFailed_NotifyFailureSuccess}" keepSrcElementName="false" name="UpdateTAAsyncResponseReceived_CreateEventFailed_NotifyFailureSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence289">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'AsyncResponseReceived_CreateEventTransformationFailed'}" keepSrcElementName="false" name="AsyncResponseReceived_CreateEventTransformationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_AsyncResponseReceived_CreateEvent" from="$XMLforLoadingConfigs" name="XSLTransformation_AsyncResponseReceived_CreateEvent" stylesheet="SysLogEvent.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                            <soae-ab:param name="NodeName" value="soae-xf:get-node-name()"/>
                            <soae-ab:param name="ComponentName" value="'Origination'"/>
                            <soae-ab:param name="StructuredMessage" value="''"/>
                            <soae-ab:param name="TransactionUUID" value="$TransactionUUID"/>
                            <soae-ab:param name="ExceptionCode" value="'ZION_APP_1075'"/>
                            <soae-ab:param name="Priority" value="'P4'"/>
                            <soae-ab:param name="ExceptionName" value="'AsyncResponseRecieved'"/>
                            <soae-ab:param name="Description" value="'Received Async response from downstream'"/>
                            <soae-ab:param name="AdditionalInfo" value="'OriginationAsynchronousPostBackProcess-N/A'"/>
                            <soae-ab:param name="Severity" value="'INFO'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'AsyncResponseReceived_CreateEventInvocationFailed'}" keepSrcElementName="false" name="AsyncResponseReceived_CreateEventInvocationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseReceived_InvokeCreateEvent}AsyncResponseReceived_InvokeCreateEventOutput" destinationTypeKind="MESSAGE" destinationVariable="AsyncResponseReceived_InvokeCreateEventComponent" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="AsyncResponseReceived_InvokeCreateEventComponent_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="AsyncResponseReceived_InvokeCreateEventComponent" partnerLink="AsyncResponseReceived_InvokeCreateEventComponent" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                        <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_AsyncResponseReceived_CreateEvent}"/>
                        <soae-ab:outboundPolicies/>
                        <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/CreateEventProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                        <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="AsyncResponseReceived_InvokeCreateEventComponentInput" inputMsgPart="body" operation="AsyncResponseReceived_InvokeCreateEventComponentOperation" outputMsg="AsyncResponseReceived_InvokeCreateEventComponentOutput" outputMsgPart="body" port="AsyncResponseReceived_InvokeCreateEventComponentPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseReceived_InvokeCreateEventComponent}AsyncResponseReceived_InvokeCreateEventComponentService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseReceived_InvokeCreateEventComponent" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/AsyncResponseReceived_InvokeCreateEventComponent.wsdl"/>
                        <soae-ab:inboundPolicies/>
                    </soae-ab:InvokeBuilder>
                </bpws:extensionActivity>
                <bpws:scope name="ScopeTAAsyncResponseReceived_CreateEventSuccess">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAAsyncResponseReceived_CreateEventSuccess"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence74">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseReceived_CreateEventSuccess" from="$TransactionActivityXML" name="TAAsyncResponseReceived_CreateEventSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1052'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1052']/ns5:StatusDescription,' - AsyncResponseRecieved.')"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseReceived_CreateEventSuccess}" keepSrcElementName="false" name="UpdateTAAsyncResponseReceived_CreateEventSuccess" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
            </bpws:sequence>
        </bpws:scope>
        <bpws:if name="IfCustomerNumberMoreThan5Chars">
            <bpws:condition>string-length($CustomerNumber)&gt;5</bpws:condition>
            <bpws:extensionActivity>
                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="StripedCustomerNumber" expression="xpath:{substring($CustomerNumber,1,5)}" keepSrcElementName="false" name="StripCustomerNumberTo5CharLength" xDestination="$StripedCustomerNumber"/>
            </bpws:extensionActivity>
        </bpws:if>
        <bpws:scope name="ScopeArchivePostbackRequest">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ArchivePostbackRequest_Failed_ZION_TALog" logLevel="verbose" name="ArchivePostbackRequest_Failed_ZION_TALog" nodeName="false" optionalData="" transactionID="false">
                                <soae-ab:comment>Archival process of the postback request is failed.</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:extensionActivity>
                <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="ArchivePostbackRequest" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="ArchivePostbackRequest_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="ArchivePostbackRequest" partnerLink="ArchivePostbackRequest" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$Receive}"/>
                    <soae-ab:outboundPolicies/>
                    <soae-ab:metadata metadataSource="NEW" xpath="">
                        <soae-ab:policies/>
                        <soae-ab:httpRequest method="" query="" uri="/ArchiveComponent" version="HTTP/1.0">
                            <soae-ab:header name="content-type" value="application/text"/>
                            <soae-ab:header name="appname" value="xpath:{$ApplicationName}"/>
                            <soae-ab:header name="uuid" value="xpath:{$TransactionUUID}"/>
                            <soae-ab:header name="foldername" value="xpath:{$AppConfig/ns4:ArchiveIntermediateXSLPath}"/>
                        </soae-ab:httpRequest>
                    </soae-ab:metadata>
                    <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="" serviceURI="https://ae1bdcon1:9000/ArchiveComponent" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ArchivePostbackRequestInput" inputMsgPart="body" operation="ArchivePostbackRequestOperation" outputMsg="ArchivePostbackRequestOutput" outputMsgPart="body" port="ArchivePostbackRequestPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ArchivePostbackRequest}ArchivePostbackRequestService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ArchivePostbackRequest" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/ArchivePostbackRequest.wsdl"/>
                    <soae-ab:inboundPolicies/>
                </soae-ab:InvokeBuilder>
            </bpws:extensionActivity>
        </bpws:scope>
        <bpws:scope name="ScopeLenderLookup">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeLoadLenderProfileFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeLoadLenderProfileFail" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoadLenderProfileFailure" from="$XMLforGlobalException" name="LoadLenderProfileFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2015'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$LoadLenderProfileFailure}" keepSrcElementName="false" name="UpdateLoadLenderProfileFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTALoadLenderProfileFailed">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALoadLenderProfileFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence111">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALoadLenderProfileFailed" from="$TransactionActivityXML" name="TALoadLenderProfileFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2015'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2015']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALoadLenderProfileFailed}" keepSrcElementName="false" name="UpdateTALoadLenderProfileFailed" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="LenderProfileLoadFailed_ZIONLog" logLevel="verbose" name="LenderProfileLoadFailed_ZIONLog" nodeName="true" optionalData="" transactionID="true">
                                <soae-ab:comment>Loading of Lender profile failed.. from:</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence16">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://Radian.Matrix.MortgageIns.Origination.MDC.PublishTPProfileData}TradingPartner_Message" destinationTypeKind="ELEMENT" destinationVariable="LoadLenderProfile" from="$XMLforLoadingConfigs" name="LoadLenderProfile" stylesheet="concat($WebServerURL,'TPProfiles/',$VendorID,'_',$StripedCustomerNumber,'.xsl')" stylesheetType="XPATH">
                        <soae-ab:params/>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeTALoadLenderProfileCompleted">
            <bpws:faultHandlers>
                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                    <bpws:sequence>
                        <bpws:empty name="EmptyTALoadLenderProfileCompletedFailed"/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence74">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALoadLenderProfileCompleted" from="$TransactionActivityXML" name="TALoadLenderProfileCompleted" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="FirstActivity" value="1"/>
                            <soae-ab:param name="BatchActivity" value="0"/>
                            <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                            <soae-ab:param name="RecordCount" value="1"/>
                            <soae-ab:param name="Status" value="'SUCCESS'"/>
                            <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                            <soae-ab:param name="Code" value="'ZION_APP_1013'"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1013']/ns5:StatusDescription"/>
                            <soae-ab:param name="MessageID" value="'NA'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALoadLenderProfileCompleted}" keepSrcElementName="false" name="UpdateTALoadLenderProfileCompleted" xDestination="$TransactionActivityXML"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeAuthorizeLender">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:Comment name="Comment6">Authorize provider xsl failure</soae-ab:Comment>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeAuthorizationXSLFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeAuthorizationXSLFailure" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AuthorizationXSLFailure" from="$XMLforGlobalException" name="AuthorizationXSLFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4001'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:AdditionalInfo,' AsyncPostbackAuthorizeProvider.xsl')"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$AuthorizationXSLFailure}" keepSrcElementName="false" name="UpdateAuthorizationXSLFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeAuthorizationXSLFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAuthorizationXSLFailure"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence29">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAuthorizationXSLFailure" from="$TransactionActivityXML" name="TAAuthorizationXSLFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4001'"/>
                                    <soae-ab:param name="Description" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4001']/ns5:AdditionalInfo,'- AsyncPostbackAuthorizeProvider.xsl')"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAuthorizationXSLFailure}" keepSrcElementName="false" name="UpdateTAAuthorizationXSLFailure" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence49">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.radian.biz/ClientConnectivity/zion/AuthorizationResponse}AuthorizationResponse" destinationTypeKind="ELEMENT" destinationVariable="AuthorizeProvider" from="$LoadLenderProfile" name="AuthorizeProvider" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/AsyncPostbackAuthorizeProvider.xsl')" stylesheetType="XPATH">
                        <soae-ab:params>
                            <soae-ab:param name="OrderType" value="$ServiceCD"/>
                            <soae-ab:param name="ServiceEndpointFormatVersionCd" value="$EndpointFormatVersion"/>
                            <soae-ab:param name="PostbackURLfromRequest" value="translate($PostbackURLfromRequest,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')"/>
                            <soae-ab:param name="RECVDynamicPostbackFlag" value="string($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[(ns15:ConnectionDirectionCd='RECV' and (ns15:ConnectionAuthorizationCd='CRED'  or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:TradingConnectionServices/ns15:TradingConnectionService/ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD) and ns15:ConnectionStatusCd='ACTV']/ns15:Dynamic_Postback)"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="AuthorizeProvider_ZIONLog" logLevel="verbose" name="AuthorizeProvider_ZIONLog" nodeName="false" optionalData="$AuthorizeProvider" transactionID="false">
                        <soae-ab:comment>Authorization response:</soae-ab:comment>
                    </soae-ab:TransactionLog>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:if name="If_Check_Authorised_Provider">
            <bpws:condition>$AuthorizeProvider/ns35:Result/text()='true'</bpws:condition>
            <bpws:sequence name="Sequence51">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="DownstreamSystemFormatVersionCd" expression="xpath:{$IdentifiedRequestMISMOVersion}" keepSrcElementName="false" name="DownstreamSystemFormatVersionCd" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MISMOVersion" expression="xpath:{string($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd='RECV' and (ns15:ConnectionAuthorizationCd='CRED' or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:ConnectionStatusCd='ACTV']/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:ServiceEndpoint/ns15:ServiceEndpointFormatVersionCd=$EndpointFormatVersion]/ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd)}" keepSrcElementName="false" name="UpdateMISMOVerison" xDestination="$MISMOVersion"/>
                </bpws:extensionActivity>
            </bpws:sequence>
            <bpws:else>
                <bpws:sequence name="Sequence50">
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeAuthorizationFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeAuthorizationFailure" xDestination=""/>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AuthorizationFailure" from="$XMLforGlobalException" name="AuthorizationFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                            <soae-ab:params>
                                <soae-ab:param name="FirstBatch" value="'true'"/>
                                <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:ApplicationName"/>
                                <soae-ab:param name="ExceptionCode" value="$AuthorizeProvider/ns35:ExceptionCode"/>
                                <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:StatusName"/>
                                <soae-ab:param name="Description" value="$AuthorizeProvider/ns35:ResponseDescription"/>
                                <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:LogLevel"/>
                                <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:Severity"/>
                                <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:Priority"/>
                                <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$AuthorizeProvider/ns35:AdditionalInfo)"/>
                                <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:ResponseName"/>
                                <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:ResponseCondition"/>
                                <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:ResponseCode"/>
                                <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()=$AuthorizeProvider/ns35:ExceptionCode]/ns5:ResponseDescription"/>
                                <soae-ab:param name="IncomingFileName" value="$FileName"/>
                            </soae-ab:params>
                        </soae-ab:XSLTransform>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$AuthorizationFailure}" keepSrcElementName="false" name="UpdateAuthorizationFailure" xDestination="$XMLforGlobalException"/>
                    </bpws:extensionActivity>
                    <bpws:scope name="ScopeTAAuthorizationFailure">
                        <bpws:faultHandlers>
                            <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                <bpws:sequence>
                                    <bpws:empty name="EmptyTAAuthorizationFailure"/>
                                </bpws:sequence>
                            </bpws:catch>
                        </bpws:faultHandlers>
                        <bpws:sequence name="Sequence31">
                            <bpws:extensionActivity>
                                <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAuthorizationFailure" from="$TransactionActivityXML" name="TAAuthorizationFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="$AuthorizeProvider/ns35:ExceptionCode"/>
                                    <soae-ab:param name="Description" value="concat('OriginationAsynchronousPostBack - ',$AuthorizeProvider/ns35:AdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                </soae-ab:XSLTransform>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAuthorizationFailure}" keepSrcElementName="false" name="UpdateTAAuthorizationFailure" xDestination="$TransactionActivityXML"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:scope>
                    <bpws:extensionActivity>
                        <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="AuthorizationfailureResponse_ZIONLog" logLevel="verbose" name="AuthorizationfailureResponse_ZIONLog" nodeName="false" optionalData="$AuthorizeProvider" transactionID="false">
                            <soae-ab:comment/>
                        </soae-ab:TransactionLog>
                    </bpws:extensionActivity>
                    <bpws:throw faultName="bpws:selectionFailure" name="ThrowAuthorizationFault"/>
                </bpws:sequence>
            </bpws:else>
        </bpws:if>
        <bpws:scope name="ScopeTAAuthorizationCompleted">
            <bpws:faultHandlers>
                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                    <bpws:sequence>
                        <bpws:empty name="EmptyTAAuthorizationCompletedFailed"/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence75">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAuthorizationCompleted" from="$TransactionActivityXML" name="TAAuthorizationCompleted" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="FirstActivity" value="1"/>
                            <soae-ab:param name="BatchActivity" value="0"/>
                            <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                            <soae-ab:param name="RecordCount" value="1"/>
                            <soae-ab:param name="Status" value="'SUCCESS'"/>
                            <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                            <soae-ab:param name="Code" value="'ZION_APP_1014'"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1014']/ns5:StatusDescription"/>
                            <soae-ab:param name="MessageID" value="'NA'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAuthorizationCompleted}" keepSrcElementName="false" name="UpdateTAAuthorizationCompleted" xDestination="$TransactionActivityXML"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$IncomingRequest}" keepSrcElementName="false" name="PostBackResponse" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:if name="If_EDI">
            <bpws:condition>string($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd='RECV' and (ns15:ConnectionAuthorizationCd='CRED'  or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:ConnectionStatusCd='ACTV']/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:ServiceEndpoint/ns15:ServiceEndpointFormatVersionCd=$EndpointFormatVersion and ns15:ServiceInterface/ns15:InterfaceFileFormatCd='EDI']/ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd) = 'EDI872'</bpws:condition>
            <bpws:sequence name="Sequence70">
                <bpws:if name="If_Incoming_Response_XCM">
                    <bpws:condition>$EndpointFormatVersion='XCM404'</bpws:condition>
                    <bpws:if name="If_MIResponseIsFailed">
                        <bpws:condition>string($InputPayload/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:MI_APPLICATION_RESPONSE_DETAIL/ns146:MIDecisionType) != 'Approved' and string($InputPayload/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:MI_APPLICATION_RESPONSE_DETAIL/ns146:MIDecisionType) != 'Declined' and string($InputPayload/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:MI_APPLICATION_RESPONSE_DETAIL/ns146:MIDecisionType) != 'Suspended'</bpws:condition>
                        <bpws:sequence name="Sequence71">
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeMIResponseFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeMIResponseFailure" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MIResponseFailure" from="$XMLforGlobalException" name="MIResponseFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4036'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                </soae-ab:XSLTransform>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$MIResponseFailure}" keepSrcElementName="false" name="UpdateMIResponseFailure" xDestination="$XMLforGlobalException"/>
                            </bpws:extensionActivity>
                            <bpws:scope name="ScopeTAMIResponseFailure">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAMIResponseFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence130">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAMIResponseFailed" from="$TransactionActivityXML" name="TAMIResponseFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4036'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4036']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAMIResponseFailed}" keepSrcElementName="false" name="UpdateTAMIResponseFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                            <bpws:throw faultName="bpws:missingRequest" name="ThrowMIResponseIsFailed"/>
                        </bpws:sequence>
                    </bpws:if>
                    <bpws:elseif>
                        <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:Comment name="Comment16">Place holder for MISMO231 MI Response failure validation</soae-ab:Comment>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                    <bpws:elseif>
                        <bpws:condition>$EndpointFormatVersion='MISMO33'</bpws:condition>
                        <bpws:extensionActivity>
                            <soae-ab:Comment name="Comment17">Place holder for MISMO33 MI Response failure validation</soae-ab:Comment>
                        </bpws:extensionActivity>
                    </bpws:elseif>
                </bpws:if>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EDIResponse" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateEDIResponse" xDestination="$EDIResponse"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseFileFormat" expression="xpath:{'263'}" keepSrcElementName="false" name="UpdateResponseFileFormatToEDI" xDestination="$ResponseFileFormat"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:Comment name="Comment10">As we do not have a placeholder for the file format in LPA, hardcoding the EDIResponseVersion&#13;
variable value to EDI263.</soae-ab:Comment>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EDIResponseVersion" expression="xpath:{'EDI263'}" keepSrcElementName="false" name="EDIResponseVersion" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:scope name="ScopeMISMOToInterchangesXSLTransformation">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeMISMOToInterchangesXSLTransformationFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeMISMOToInterchangesXSLTransformationFailure" xDestination=""/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MISMOToInterchangesXSLTransformationFailure" from="$XMLforGlobalException" name="MISMOToInterchangesXSLTransformationFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4038'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$MISMOToInterchangesXSLTransformationFailure}" keepSrcElementName="false" name="UpdateMISMOToInterchangesXSLTransformationFailure" xDestination="$XMLforGlobalException"/>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTAMISMOToInterchangesXSLTransformationFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAMISMOToInterchangesXSLTransformationFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence130">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAMISMOToInterchangesXSLTransformationFailed" from="$TransactionActivityXML" name="TAMISMOToInterchangesXSLTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4038'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4038']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAMISMOToInterchangesXSLTransformationFailed}" keepSrcElementName="false" name="UpdateMISMOToInterchangesXSLTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                                <bpws:rethrow/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:extensionActivity>
                        <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MISMOToInterchangesXSLTransformation" from="$IncomingRequest" name="MISMOToInterchangesXSLTransformation" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/ResponseXSLs/',$EndpointFormatVersion,'to',$EDIResponseVersion,'Interchanges_',$VendorID,'.xsl')" stylesheetType="XPATH">
                            <soae-ab:params/>
                        </soae-ab:XSLTransform>
                    </bpws:extensionActivity>
                </bpws:scope>
                <bpws:scope name="ScopeTAMISMOToInterchangesXSLTransformation">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAMISMOToInterchangesXSLTransformationFailed"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence91">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAMISMOToInterchangesXSLTransformationSuccess" from="$TransactionActivityXML" name="TAMISMOToInterchangesXSLTransformationSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1046'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1046']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAMISMOToInterchangesXSLTransformationSuccess}" keepSrcElementName="false" name="UpdateTAMISMOToInterchangesXSLTransformationSuccess" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:scope name="ScopeInterchangesToEDI263DataMapping">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                            <bpws:sequence>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeInterchangesToEDI263MappingFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeInterchangesToEDI263MappingFailure" xDestination=""/>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InterchangesToEDI263MappingFailure" from="$XMLforGlobalException" name="InterchangesToEDI263MappingFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4039'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$InterchangesToEDI263MappingFailure}" keepSrcElementName="false" name="UpdateInterchangesToEDI263MappingFailure" xDestination="$XMLforGlobalException"/>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTAInterchangesToEDI263MappingFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAInterchangesToEDI263MappingFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence130">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInterchangesToEDI263MappingFailed" from="$TransactionActivityXML" name="TAInterchangesToEDI263MappingFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4039'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4039']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInterchangesToEDI263MappingFailed}" keepSrcElementName="false" name="UpdateInterchangesToEDI263MappingFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                                <bpws:rethrow/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:extensionActivity>
                        <soae-ab:CDEBuilder destinationType="{http://www.example.com/Origination/cde/EDI263}OutputData" destinationTypeKind="MESSAGE" destinationVariable="InterchangesToEDI263DataMapping" from="$MISMOToInterchangesXSLTransformation" inputContentType="text/xml" name="InterchangesToEDI263DataMapping" outputContentType="application/octet-stream" outputIsElement="false" partnerLink="InterchangesToEDI263DataMapping" service="EDI263" type="{http://www.w3.org/2001/XMLSchema}base64Binary"/>
                    </bpws:extensionActivity>
                </bpws:scope>
                <bpws:scope name="ScopeTAInterchangesToEDI263DataMapping">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAInterchangesToEDI263DataMappingFailed"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence91">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInterchangesToEDI263DataMappingSuccess" from="$TransactionActivityXML" name="TAInterchangesToEDI263DataMappingSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1047'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1047']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInterchangesToEDI263DataMappingSuccess}" keepSrcElementName="false" name="UpdateTAInterchangesToEDI263DataMappingSuccess" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$InterchangesToEDI263DataMapping.body}" keepSrcElementName="false" name="UpdateEDIResponseToPostBack" xDestination="$PostBackResponse"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MISMOVersion" expression="xpath:{$EDIResponseVersion}" keepSrcElementName="false" name="UpdateEDIEndPointVersion" xDestination="$MISMOVersion"/>
                </bpws:extensionActivity>
            </bpws:sequence>
            <bpws:else>
                <bpws:sequence name="Sequence24">
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="DocEmbedFlag" expression="xpath:{false()}" keepSrcElementName="false" name="DocEmbedFlag" xDestination=""/>
                    </bpws:extensionActivity>
                    <bpws:scope name="ScopeEmbedDocument">
                        <bpws:faultHandlers>
                            <bpws:catchAll>
                                <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeEmbedDocumentFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeEmbedDocumentFail" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EmbedDocumentFailure" from="$XMLforGlobalException" name="EmbedDocumentFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2030'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationProcess - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:AdditionalInfo,' - Addition Info: ',$EmbedDocumentAddInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="'HTTPS'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$EmbedDocumentFailure}" keepSrcElementName="false" name="UpdateWriteDownstreamRequesttoSFTPFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAEmbedDocumentFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAEmbedDocumentFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence197">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAEmbedDocumentFailure" from="$TransactionActivityXML" name="TAEmbedDocumentFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2030'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:StatusDescription, ' - Additional Information:', $EmbedDocumentAddInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAEmbedDocumentFailure}" keepSrcElementName="false" name="UpdateTAEmbedDocumentFailure" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:scope name="ScopeDownloadDocumentFromS3_Failed">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="DownloadDocumentFromS3Failure_Failed" logLevel="verbose" name="DownloadDocumentFromS3Failure_Failed" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>Exception Occured when Invoking Failure Notification Process for DownLoad Document from S3 Failure</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence32">
                                    <bpws:scope name="ScopeXSLTransformationForDownLoadDocumentFromS3Failure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="XSLTransformationExceptionFromDownloadDocumentFailure" logLevel="verbose" name="XSLTransformationExceptionFromDownloadDocumentFailure" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>XSLTransformationExceptionFromDownloadDocumentFailure</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_DownloadDocumentFromS3Failure" from="$XMLforLoadingConfigs" name="XSLTransformation_DownloadDocumentFromS3Failure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>

                                    <soae-ab:param name="PolicyStatusType" value="''"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ApplicationName"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2030'"/>

                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:StatusName"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:StatusDescription"/>

                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:LogLevel"/>

                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:Severity"/>

                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:Priority"/>

                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:AdditionalInfo,$EmbedDocumentAddInfo)"/>

                                    <soae-ab:param name="ProviderName" value="$VendorID"/>

                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseName"/>

                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseCondition"/>

                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseCode"/>

                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2030']/ns5:ResponseDescription"/>

                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>

                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>

                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>

                                    <soae-ab:param name="OperationName" value="$OperationType"/>

                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>

                                    <soae-ab:param name="CasePolicy" value="''"/>

                                    <soae-ab:param name="CaseStatistics" value="''"/>

                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>

                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>

                                    <soae-ab:param name="LoanIdentifierType" value="''"/>

                                    <soae-ab:param name="LoanStateDatetime" value="''"/>

                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    </bpws:scope>
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="DownloadDocumentFromS3Failure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="DownloadDocumentFromS3Failure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="DownloadDocumentFromS3Failure" partnerLink="DownloadDocumentFromS3Failure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_DownloadDocumentFromS3Failure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="DownloadDocumentFromS3FailureInput" inputMsgPart="body" operation="DownloadDocumentFromS3FailureOperation" outputMsg="DownloadDocumentFromS3FailureOutput" outputMsgPart="body" port="DownloadDocumentFromS3FailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DownloadDocumentFromS3Failure}DownloadDocumentFromS3FailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DownloadDocumentFromS3Failure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/DownloadDocumentFromS3Failure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                </bpws:sequence>
                            </bpws:catchAll>
                        </bpws:faultHandlers>
                        <bpws:sequence name="Sequence265">
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EmbedDocumentAddInfo" expression="xpath:{concat('XSL load failure - ',$AppConfig/ns4:FileURL,'SharedXSLs/CleanXCMResponse.xsl')}" keepSrcElementName="false" name="EmbedDocumentAddInfo" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="DocumentUUID" expression="xpath:{string($IncomingRequest/ns146:MORTGAGEINS_XCM/ns146:DOCUMENTS/ns146:DOCUMENT/ns146:EXTENSION/ns146:OTHER/ns146:DocumentUUID)}" keepSrcElementName="false" name="DocumentUUID" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:if name="IfDocumentUUID_Not_Empty">
                                <bpws:condition>$DocumentUUID!=''</bpws:condition>
                                <bpws:sequence name="Sequence238">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EmbedDocumentAddInfo" expression="xpath:{'Failed while downloading document from S3'}" keepSrcElementName="false" name="UpdateS3DownloadFailureAddInfo" xDestination="$EmbedDocumentAddInfo"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/custom/bin/OriginationAsynchronousPostBackProcess/DownloadDocumentFromS3}DownloadDocumentFromS3Output" destinationTypeKind="MESSAGE" destinationVariable="InvokeS3ComponentToDownloadDocumentFromS3" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeS3ComponentToDownloadDocumentFromS3_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeS3ComponentToDownloadDocumentFromS3" partnerLink="InvokeS3ComponentToDownloadDocumentFromS3" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XMLforLoadingConfigs}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:metadata metadataSource="NEW" xpath="">
                                    <soae-ab:policies/>
                                    <soae-ab:httpRequest method="" query="" uri="/S3" version="HTTP/1.0">
                                    <soae-ab:header name="buckettypestructuredflag" value="xpath:{''}"/>
                                    <soae-ab:header name="filename" value="Document.pdf"/>
                                    <soae-ab:header name="downloadroleflag" value="true"/>
                                    <soae-ab:header name="transactionuuid" value="xpath:{$TransactionUUID}"/>
                                    <soae-ab:header name="documentuuid" value="xpath:{$DocumentUUID}"/>
                                    </soae-ab:httpRequest>
                                    </soae-ab:metadata>
                                    <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdElement="{http://www.radian.biz/ClientConnectivity/zion/ComponentResponse}ComponentResponse"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="http://127.0.0.1:9000/S3" soapAction="" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeS3ComponentToDownloadDocumentFromS3Input" inputMsgPart="body" operation="InvokeS3ComponentToDownloadDocumentFromS3Operation" outputMsg="InvokeS3ComponentToDownloadDocumentFromS3Output" outputMsgPart="body" port="InvokeS3ComponentToDownloadDocumentFromS3Port" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeS3ComponentToDownloadDocumentFromS3}InvokeS3ComponentToDownloadDocumentFromS3Service" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeS3ComponentToDownloadDocumentFromS3" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeS3ComponentToDownloadDocumentFromS3.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    <soae-ab:explicitImports>
                                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/ComponentResponse.xsd" tns="http://www.radian.biz/ClientConnectivity/zion/ComponentResponse"/>
                                    </soae-ab:explicitImports>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:if name="If_S3Component_Not_Failed">
                                    <bpws:condition>starts-with($InvokeS3ComponentToDownloadDocumentFromS3.body/ns408:Response,'S3 failure :')=false()</bpws:condition>
                                    <bpws:sequence name="Sequence86">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="CleanXCMResponse" from="$IncomingRequest" name="CleanXCMResponse" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/CleanXCMResponse.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$CleanXCMResponse}" keepSrcElementName="false" name="UpdateIncomingRequestWithCleanXCMResponse" xDestination="$IncomingRequest"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EmbedDocumentAddInfo" expression="xpath:{'Failed to embed the encoded document in the response'}" keepSrcElementName="false" name="UpdateEmbedDocumentAddInfo" xDestination="$EmbedDocumentAddInfo"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$InvokeS3ComponentToDownloadDocumentFromS3.body/ns408:Response}" keepSrcElementName="false" name="UpdateEncodeDocumentXCM" xDestination="$IncomingRequest/ns146:MORTGAGEINS_XCM/ns146:DOCUMENTS/ns146:DOCUMENT[1]/ns146:VIEWS/ns146:VIEW/ns146:VIEW_FILES/ns146:VIEW_FILE/ns146:FOREIGN_OBJECT/ns146:EmbeddedContentXML"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="DocEmbedFlag" expression="xpath:{true()}" keepSrcElementName="false" name="UpdateDocEmbedFlagToTrue" xDestination="$DocEmbedFlag"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAEmbedDocumentSuccess">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAEmbedDocumentSuccessFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence220">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAEmbedDocumentSuccess" from="$TransactionActivityXML" name="TAEmbedDocumentSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1056'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1056']/ns5:StatusDescription)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAEmbedDocumentSuccess}" keepSrcElementName="false" name="UpdateTATransformDownstreamtoRequestTypeSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:if>
                                </bpws:sequence>
                            </bpws:if>
                        </bpws:sequence>
                    </bpws:scope>
                    <bpws:if name="If_ServiceEndpointFormatVersion_NoEquals_InterfaceFormatVersion">
                        <bpws:condition>$EndpointFormatVersion!=$MISMOVersion</bpws:condition>
                        <bpws:sequence name="Sequence30">
                            <bpws:if name="If_DownstreamEndPoint_is_MISMO231">
                                <bpws:condition>$EndpointFormatVersion='MISMO231'</bpws:condition>
                                <bpws:sequence name="Sequence65">
                                    <bpws:scope name="ScopeRemoveNSForMISMO231">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeRemoveNSfromMISMO231Failure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeRemoveNSfromMISMO231Failure" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="RemoveNSfromMISMO231Failure" from="$XMLforGlobalException" name="RemoveNSfromMISMO231Failure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstBatch" value="'true'"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>

                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4018'"/>

                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:StatusName"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:StatusDescription"/>

                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:LogLevel"/>

                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:Severity"/>

                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:Priority"/>

                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:AdditionalInfo)"/>

                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>

                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseName"/>

                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseCondition"/>

                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseCode"/>

                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseDescription"/>

                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$RemoveNSfromMISMO231Failure}" keepSrcElementName="false" name="UpdateRemoveNSfromMISMO231Failure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTARemoveNamespacefromMISMO231Failed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTARemoveNamespacefromResponseFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence132">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNamespacefromMISMO231Failed" from="$TransactionActivityXML" name="TARemoveNamespacefromMISMO231Failed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4018'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNamespacefromMISMO231Failed}" keepSrcElementName="false" name="UpdateTARemoveNamespacefromMISMO231Failed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence67">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="RemoveNSFromMISMO231" from="$IncomingRequest" name="RemoveNSFromMISMO231" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/RemoveNamespace.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IncomingRequest" expression="xpath:{$RemoveNSFromMISMO231}" keepSrcElementName="false" name="UpdateIncomingRequestWithRemovedNS" xDestination="$IncomingRequest"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTARemoveNSfromMISMO231Success">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNamespacefromResponseSuccessFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence93">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNSfromMISMO231Success" from="$TransactionActivityXML" name="TARemoveNSfromMISMO231Success" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1031'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNSfromMISMO231Success}" keepSrcElementName="false" name="UpdateTARemoveNSfromMISMO231Success" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:scope>
                                </bpws:sequence>
                            </bpws:if>
                            <bpws:if name="If_InterfaceFormatVersionIsMISMO33">
                                <bpws:condition>$MISMOVersion='MISMO33'</bpws:condition>
                                <bpws:sequence name="Sequence54">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv3.3/MortgageInsuranceRequest'}" keepSrcElementName="false" name="UpdateResponseNSWithMISMO33" xDestination="$ResponseNS"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateResponseRootElementWithMISMO33" xDestination="$ResponseRootElement"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                                <bpws:elseif>
                                    <bpws:condition>$MISMOVersion='MISMO231'</bpws:condition>
                                    <bpws:if name="If_MIQRY">
                                    <bpws:condition>$ServiceCD='MIQRY'</bpws:condition>
                                    <bpws:sequence name="Sequence55">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://Radian.Operations.MortgageIns.Common.MISMOSchemas.MORTGAGE_INSURANCE_QUERY_RESPONSE_v2_3_1'}" keepSrcElementName="false" name="UpdateResponseNSWithMISMO231QRY" xDestination="$ResponseNS"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="UpdateResponseNSWithMISMO231QRYRootElement" xDestination="$ResponseRootElement"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    <bpws:else>
                                    <bpws:sequence name="Sequence56">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://www.radian.biz/ClientConnectivity/zion/MISMOSchemas/MISMOv2.3.1/MortgageInsuranceApplicationResponse'}" keepSrcElementName="false" name="UpdateResponseWithMISMO231MIORD_MIRQT" xDestination="$ResponseNS"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'RESPONSE_GROUP'}" keepSrcElementName="false" name="UpdateResponseWithMIMSO231MIORD_MIRQT" xDestination="$ResponseRootElement"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:else>
                                    </bpws:if>
                                </bpws:elseif>
                                <bpws:elseif>
                                    <bpws:condition>$MISMOVersion='XCM404'</bpws:condition>
                                    <bpws:sequence name="Sequence61">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseNS" expression="xpath:{'http://Radian.Services.Schemas'}" keepSrcElementName="false" name="UpdateResponseNSWithXCM" xDestination="$ResponseNS"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ResponseRootElement" expression="xpath:{'MESSAGE'}" keepSrcElementName="false" name="UpdateResponseRootElementWithXCM" xDestination="$ResponseRootElement"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:elseif>
                            </bpws:if>
                            <bpws:scope name="ScopeTransformationFromEndpointVersionToInterfaceVersion">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeTransformToIncomingTypeFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeTransformToIncomingTypeFailure" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TransformToIncomingTypeFailure" from="$XMLforGlobalException" name="TransformToIncomingTypeFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4016'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$TransformToIncomingTypeFailure}" keepSrcElementName="false" name="UpdateTransformToIncomingTypeFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTransformToIncomingTypeFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTransformToIncomingTypeFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence53">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TATransformToIncomingTypeFailure" from="$TransactionActivityXML" name="TATransformToIncomingTypeFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4016'"/>

                                    <soae-ab:param name="Description" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:AdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TATransformToIncomingTypeFailure}" keepSrcElementName="false" name="UpdateTATransformToIncomingTypeFailure" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence52">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TransformationFromEndpointVersionToInterfaceVersion" from="$IncomingRequest" name="TransformationFromEndpointVersionToInterfaceVersion" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/ResponseXSLs/Xform',$EndpointFormatVersion,'to',$MISMOVersion,'.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params>
                                    <soae-ab:param name="ApplicationType" value="'NA'"/>
                                    <soae-ab:param name="ServiceType" value="'NA'"/>
                                    <soae-ab:param name="DocFlag" value="$DocEmbedFlag"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$TransformationFromEndpointVersionToInterfaceVersion}" keepSrcElementName="false" name="UpdateTransformationFromEndpointVersionToInterfaceVersion" xDestination="$PostBackResponse"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                            <bpws:scope name="ScopePostbackSchemaValidationCheck">
                                <bpws:faultHandlers>
                                    <bpws:catch faultElement="soae-fault:schemaValidateNodeFault" faultVariable="TransformFromEndpointVersionSchemaValidationfaultVar">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrortoThreeTransformFromEndpointVersionSchemaValidationFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrortoThreeTransformFromEndpointVersionSchemaValidationFailure" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TransformFromEndpointVersionSchemaValidationFailure" from="$XMLforGlobalException" name="TransformFromEndpointVersionSchemaValidationFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4016'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',string($TransformFromEndpointVersionSchemaValidationfaultVar/faultString))"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$TransformFromEndpointVersionSchemaValidationFailure}" keepSrcElementName="false" name="UpdateTransformFromEndpointVersionSchemaValidationFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTATransformFromEndpointVersionSchemaValidationFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTATransformFromEndpointVersionSchemaValidationFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence62">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TATransformFromEndpointVersionSchemaValidationFailure" from="$TransactionActivityXML" name="TATransformFromEndpointVersionSchemaValidationFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4016'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4016']/ns5:StatusDescription, &quot; . Fault string: &quot;,string($TransformFromEndpointVersionSchemaValidationfaultVar/faultString))"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TATransformFromEndpointVersionSchemaValidationFailure}" keepSrcElementName="false" name="UpdateTATransformFromEndpointVersionSchemaValidationFailure" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence24">
                                    <bpws:extensionActivity>
                                    <soae-ab:ValidationBuilder componentIdentification="elementName" data="$PostBackResponse" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TransformFromEndpointVersionSchemaValidationCheck" elementName="xpath:{$ResponseRootElement}" name="TransformFromEndpointVersionSchemaValidationCheck" schemaIdentification="targetNamespace" targetNamespace="xpath:{$ResponseNS}" throwFault="true" urlLocal="false"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                            <bpws:scope name="ScopeTATransfromEndpointVersionSchemaValSuccess">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAPostProcessSchemaValidationSuccessFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence92">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TATransfromEndpointVersionSchemaValSuccess" from="$TransactionActivityXML" name="TATransfromEndpointVersionSchemaValSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1030'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1030']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TATransfromEndpointVersionSchemaValSuccess}" keepSrcElementName="false" name="UpdateTATransfromEndpointVersionSchemaValSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                        </bpws:sequence>
                    </bpws:if>
                </bpws:sequence>
            </bpws:else>
        </bpws:if>
        <bpws:if name="If_TransformedResponse_QAArchive_Enabled">
            <bpws:condition>translate($AppConfig/ns4:ArchiveIntermediateXSLEnabled,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='TRUE'</bpws:condition>
            <bpws:scope name="ScopeInvokeArchiveComponentToTransformedResponseToQAArchive">
                <bpws:faultHandlers>
                    <bpws:catchAll>
                        <bpws:sequence>
                            <bpws:extensionActivity>
                                <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="WriteTransformedResponseToQAArchiveFailure_ZIONLog" logLevel="verbose" name="WriteTransformedResponseToQAArchiveFailure_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Write of transformed Response from endpiontformat version to interface format version to QA archive failed.</soae-ab:comment>
                                </soae-ab:TransactionLog>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:catchAll>
                </bpws:faultHandlers>
                <bpws:extensionActivity>
                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteTransformedResponseToQAArchive}WriteTransformedResponseToQAArchiveOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeArchiveComponentToTransformedResponseToQAArchive" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeArchiveComponentToTransformedResponseToQAArchive_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeArchiveComponentToTransformedResponseToQAArchive" partnerLink="InvokeArchiveComponentToTransformedResponseToQAArchive" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                        <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$PostBackResponse}"/>
                        <soae-ab:outboundPolicies/>
                        <soae-ab:metadata metadataSource="NEW" xpath="">
                            <soae-ab:policies/>
                            <soae-ab:httpRequest method="" query="" uri="/ArchiveComponent" version="HTTP/1.0">
                                <soae-ab:header name="content-type" value="application/text"/>
                                <soae-ab:header name="uuid" value="xpath:{$TransactionUUID}"/>
                                <soae-ab:header name="appname" value="xpath:{$ApplicationName}"/>
                                <soae-ab:header name="foldername" value="xpath:{$AppConfig/ns4:ArchiveIntermediateXSLPath}"/>
                            </soae-ab:httpRequest>
                        </soae-ab:metadata>
                        <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://ae1bdcon1:9000/ArchiveComponent" soapAction="" translateErrorResponseIntoWorkflowFault="true"/>
                        <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeArchiveComponentToTransformedResponseToQAArchiveInput" inputMsgPart="body" operation="InvokeArchiveComponentToTransformedResponseToQAArchiveOperation" outputMsg="InvokeArchiveComponentToTransformedResponseToQAArchiveOutput" outputMsgPart="body" port="InvokeArchiveComponentToTransformedResponseToQAArchivePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToTransformedResponseToQAArchive}InvokeArchiveComponentToTransformedResponseToQAArchiveService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToTransformedResponseToQAArchive" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToTransformedResponseToQAArchive.wsdl"/>
                        <soae-ab:inboundPolicies/>
                    </soae-ab:InvokeBuilder>
                </bpws:extensionActivity>
            </bpws:scope>
        </bpws:if>
        <bpws:scope name="ScopeTransformfromDownstream">
            <bpws:sequence name="Sequence176">
                <bpws:if name="If_Postprocess_transformation_required">
                    <bpws:condition>translate($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd/text()='RECV' and (ns15:ConnectionAuthorizationCd='CRED' or ns15:ConnectionAuthorizationCd='BAUTH')]/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd=$MISMOVersion]/ns15:CustomerAuthorizedServices/ns15:CustomerAuthorizedService/ns15:PostProcessTransformInd,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='Y'</bpws:condition>
                    <bpws:sequence name="Sequence34">
                        <bpws:if name="If_Customer_PostProcess_Needed">
                            <bpws:condition>(translate($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd/text()='RECV' and (ns15:ConnectionAuthorizationCd='CRED' or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:ConnectionStatusCd='ACTV']/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd=$MISMOVersion]/ns15:CustomerAuthorizedServices/ns15:CustomerAuthorizedService/ns15:VendorClientId,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='CUST') or (translate($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd/text()='RECV' and (ns15:ConnectionAuthorizationCd='CRED'  or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:ConnectionStatusCd='ACTV']/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd=$MISMOVersion]/ns15:CustomerAuthorizedServices/ns15:CustomerAuthorizedService/ns15:VendorClientId,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='BOTH')
							</bpws:condition>
                            <bpws:sequence name="Sequence63">
                                <bpws:scope name="ScopeCustomerPostProcessTransform">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeCustomerPostProcessTransformFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeCustomerPostProcessTransformFail" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="CustomerPostProcessTransformFailure" from="$XMLforGlobalException" name="CustomerPostProcessTransformFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstBatch" value="'true'"/>

                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>

                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>

                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>

                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>

                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4017'"/>

                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusName"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusDescription"/>

                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:LogLevel"/>

                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:Severity"/>

                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:Priority"/>

                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:AdditionalInfo)"/>

                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>

                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseName"/>

                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseCondition"/>

                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseCode"/>

                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseDescription"/>

                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$CustomerPostProcessTransformFailure}" keepSrcElementName="false" name="UpdatePostProcessTransformFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTACustomerPostProcessTransformFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTACustomerPostProcessTransformFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence130">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TACustomerPostProcessTransformFailed" from="$TransactionActivityXML" name="TACustomerPostProcessTransformFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4017'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TACustomerPostProcessTransformFailed}" keepSrcElementName="false" name="UpdateTACustomerPostProcessTransformFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence40">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="CustomerPostProcessTransform" from="$PostBackResponse" name="CustomerPostProcessTransform" stylesheet="concat($AppConfig/ns4:FileURL,'XSLs/',$VendorID,'/',$StripedCustomerNumber,'/PostProcessXform',$IdentifiedRequestMISMOVersion,'.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$CustomerPostProcessTransform}" keepSrcElementName="false" name="UpdateCustomerPostProcessTransform" xDestination="$PostBackResponse"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:if>
                        <bpws:if name="If_Vendor_Postprocess_Needed">
                            <bpws:condition>(translate($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd/text()='RECV' and (ns15:ConnectionAuthorizationCd='CRED' or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:ConnectionStatusCd='ACTV']/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd=$MISMOVersion]/ns15:CustomerAuthorizedServices/ns15:CustomerAuthorizedService/ns15:VendorClientId,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='VEND') or (translate($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd/text()='RECV' and (ns15:ConnectionAuthorizationCd='CRED'  or ns15:ConnectionAuthorizationCd='BAUTH')and ns15:ConnectionStatusCd='ACTV']/ns15:TradingConnectionServices/ns15:TradingConnectionService[ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD and ns15:ServiceInterface/ns15:InterfaceFileFormatVersionCd=$MISMOVersion]/ns15:CustomerAuthorizedServices/ns15:CustomerAuthorizedService/ns15:VendorClientId,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='BOTH')
							</bpws:condition>
                            <bpws:scope name="ScopeVendorPostProcessTransform">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreePostProcessTransformFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreePostProcessTransformFail" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostProcessTransformFailure" from="$XMLforGlobalException" name="PostProcessTransformFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4017'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$PostProcessTransformFailure}" keepSrcElementName="false" name="UpdatePostProcessTransformFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAPostProcessTransformFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAPostProcessTransformFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence130">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAPostProcessTransformFailed" from="$TransactionActivityXML" name="TAPostProcessTransformFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4017'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAPostProcessTransformFailed}" keepSrcElementName="false" name="UpdateTAPostProcessTransformFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence38">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="VendorPostProcessTransform" from="$PostBackResponse" name="VendorPostProcessTransform" stylesheet="concat($AppConfig/ns4:FileURL,'XSLs/',$VendorID,'/PostProcessXform',$IdentifiedRequestMISMOVersion,'.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$VendorPostProcessTransform}" keepSrcElementName="false" name="UpdateVendorPostProcessTransform" xDestination="$PostBackResponse"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                        </bpws:if>
                        <bpws:scope name="ScopeTAPostProcessTransformationSuccess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAPostProcessTransformationSuccessFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence91">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAPostProcessTransformationSuccess" from="$TransactionActivityXML" name="TAPostProcessTransformationSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1029'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1029']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAPostProcessTransformationSuccess}" keepSrcElementName="false" name="UpdateTAPostProcessTransformationSuccess" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopePostProcessResponseSchemaValidation">
                            <bpws:faultHandlers>
                                <bpws:catch faultElement="soae-fault:schemaValidateNodeFault" faultVariable="PostProcessResponseSchemaValidationfaultVar">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="PostProcessResponseSchemaValidationFail_XONLog" logLevel="verbose" name="PostProcessResponseSchemaValidationFail_XONLog" nodeName="true" optionalData="$PostProcessResponseSchemaValidationfaultVar" transactionID="true">
                                    <soae-ab:comment>Post Process Response Schema Validation Fail</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreePostProcessResponseSchemaValidationFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreePostProcessResponseSchemaValidationFail" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostProcessSchemaValidationFailure" from="$XMLforGlobalException" name="PostProcessSchemaValidationFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4017'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',string($PostProcessResponseSchemaValidationfaultVar/faultString))"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$PostProcessSchemaValidationFailure}" keepSrcElementName="false" name="UpdatePostProcessSchemaValidationFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAPostProcessTransformSchemaFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAPostProcessTransformSchemaFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence131">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAPostProcessTransformSchemaFailed" from="$TransactionActivityXML" name="TAPostProcessTransformSchemaFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4017'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4017']/ns5:StatusDescription, &quot; . Fault string: &quot;,string($PostProcessResponseSchemaValidationfaultVar/faultString))"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAPostProcessTransformSchemaFailed}" keepSrcElementName="false" name="UpdateTAPostProcessTransformSchemaFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence35">
                                <bpws:extensionActivity>
                                    <soae-ab:ValidationBuilder componentIdentification="elementName" data="$PostBackResponse" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostProcessResponseSchemaValidation" elementName="xpath:{$ResponseRootElement}" name="PostProcessResponseSchemaValidation" schemaIdentification="targetNamespace" targetNamespace="xpath:{$ResponseNS}" throwFault="true" urlLocal="false"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopeTAPostProcessSchemaValidationSuccess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAPostProcessSchemaValidationSuccessFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence92">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAPostProcessSchemaValidationSuccess" from="$TransactionActivityXML" name="TAPostProcessSchemaValidationSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1030'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1030']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAPostProcessSchemaValidationSuccess}" keepSrcElementName="false" name="UpdateTAPostProcessSchemaValidationSuccess" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:if name="If_PostProcess_QAArchival_Enabled">
                            <bpws:condition>translate($AppConfig/ns4:ArchiveIntermediateXSLEnabled,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='TRUE'</bpws:condition>
                            <bpws:scope name="ScopeInvokeArchiveComponentToPostProcessTransformToQAArchive">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="WritePostProcessResponseFailure_ZIONLog" logLevel="verbose" name="WritePostProcessResponseFailure_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Failed to write post process response to QAArchive.</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WritePostProcessTransformToQAArchive}WritePostProcessTransformToQAArchiveOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeArchiveComponentToPostProcessTransformToQAArchive" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeArchiveComponentToPostProcessTransformToQAArchive_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeArchiveComponentToPostProcessTransformToQAArchive" partnerLink="InvokeArchiveComponentToPostProcessTransformToQAArchive" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$PostBackResponse}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:metadata metadataSource="NEW" xpath="">
                                    <soae-ab:policies/>
                                    <soae-ab:httpRequest method="" query="" uri="/ArchiveComponent" version="HTTP/1.0">
                                    <soae-ab:header name="content-type" value="application/text"/>
                                    <soae-ab:header name="uuid" value="xpath:{$TransactionUUID}"/>
                                    <soae-ab:header name="appname" value="xpath:{$ApplicationName}"/>
                                    <soae-ab:header name="foldername" value="xpath:{$AppConfig/ns4:ArchiveIntermediateXSLPath}"/>
                                    </soae-ab:httpRequest>
                                    </soae-ab:metadata>
                                    <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://ae1bdcon1:9000/ArchiveComponent" soapAction="" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeArchiveComponentToPostProcessTransformToQAArchiveInput" inputMsgPart="body" operation="InvokeArchiveComponentToPostProcessTransformToQAArchiveOperation" outputMsg="InvokeArchiveComponentToPostProcessTransformToQAArchiveOutput" outputMsgPart="body" port="InvokeArchiveComponentToPostProcessTransformToQAArchivePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToPostProcessTransformToQAArchive}InvokeArchiveComponentToPostProcessTransformToQAArchiveService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToPostProcessTransformToQAArchive" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToPostProcessTransformToQAArchive.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                </bpws:extensionActivity>
                            </bpws:scope>
                        </bpws:if>
                    </bpws:sequence>
                </bpws:if>
                <bpws:if name="IfResponseIsNotEDI">
                    <bpws:condition>$EDIResponse='false'</bpws:condition>
                    <bpws:sequence name="Sequence72">
                        <bpws:scope name="ScopeRemoveNSAfterPostProcess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeRemoveNSFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeRemoveNSFailure" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="RemoveNSAfterPostProcessFailure" from="$XMLforGlobalException" name="RemoveNSAfterPostProcessFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4018'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$RemoveNSAfterPostProcessFailure}" keepSrcElementName="false" name="UpdateRemoveNSAfterPostProcessFailure" xDestination="$XMLforGlobalException"/>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTARemoveNamespacefromResponseFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNamespacefromResponseFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence132">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNamespacefromResponseFailed" from="$TransactionActivityXML" name="TARemoveNamespacefromResponseFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_4018'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4018']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNamespacefromResponseFailed}" keepSrcElementName="false" name="UpdateTARemoveNamespacefromResponseFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence37">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="RemoveNSAfterPostProcess" from="$PostBackResponse" name="RemoveNSAfterPostProcess" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/RemoveNamespace',$MISMOVersion,'.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$RemoveNSAfterPostProcess}" keepSrcElementName="false" name="UpdateDownStreamResWithRemovedNS" xDestination="$PostBackResponse"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopeTARemoveNamespacefromResponseSuccess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNamespacefromResponseSuccessFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence93">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNamespacefromResponseSuccess" from="$TransactionActivityXML" name="TARemoveNamespacefromResponseSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1031'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNamespacefromResponseSuccess}" keepSrcElementName="false" name="UpdateTARemoveNamespacefromResponseSuccess" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:if>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeRemoveNSFromResponseSuccess_CreateEvent">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:scope name="ScopeTARemoveNSFromResponseSuccess_CreateEventFailed">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNSFromResponseSuccess_CreateEventFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence111">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNSFromResponseSuccess_CreateEventFailed" from="$TransactionActivityXML" name="TARemoveNSFromResponseSuccess_CreateEventFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNSFromResponseSuccess_CreateEventFailed}" keepSrcElementName="false" name="UpdateTARemoveNSFromResponseSuccess_CreateEventFailed" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopeRemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2027']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catch>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureFailed" from="$TransactionActivityXML" name="TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2028']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureFailed}" keepSrcElementName="false" name="UpdateTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence114">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_RemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailure" from="$XMLforLoadingConfigs" name="XSLTransformation_RemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="''"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess-',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="$VendorID"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure" partnerLink="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_RemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailureInput" inputMsgPart="body" operation="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailureOperation" outputMsg="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailureOutput" outputMsgPart="body" port="RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure}RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/RemoveNSResponseSuccess_CreateEventFailed_InvokeNotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureSuccess">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureSuccess"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence74">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureSuccess" from="$TransactionActivityXML" name="TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1055']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureSuccess}" keepSrcElementName="false" name="UpdateTARemoveNSFromResponseSuccess_CreateEventFailed_NotifyFailureSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence289">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'RemoveNSFromResponseSuccess_CreateEventTransformationFailed'}" keepSrcElementName="false" name="RemoveNSFromResponseSuccess_CreateEventTransformationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_RemoveNSFromResponseSuccess_CreateEvent" from="$XMLforLoadingConfigs" name="XSLTransformation_RemoveNSFromResponseSuccess_CreateEvent" stylesheet="SysLogEvent.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                            <soae-ab:param name="NodeName" value="soae-xf:get-node-name()"/>
                            <soae-ab:param name="ComponentName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:ApplicationName"/>
                            <soae-ab:param name="StructuredMessage" value="''"/>
                            <soae-ab:param name="TransactionUUID" value="$TransactionUUID"/>
                            <soae-ab:param name="ExceptionCode" value="'ZION_APP_1031'"/>
                            <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:Priority"/>
                            <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:StatusName"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:StatusDescription"/>
                            <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess- ', $StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:AdditionalInfo)"/>
                            <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1031']/ns5:Severity"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'RemoveNSFromResponseSuccess_CreateEventInvocationFailed'}" keepSrcElementName="false" name="RemoveNSFromResponseSuccess_CreateEventInvocationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="RemoveNSFromResponseSuccess_InvokeCreateEventComponent" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="RemoveNSFromResponseSuccess_InvokeCreateEventComponent_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="RemoveNSFromResponseSuccess_InvokeCreateEventComponent" partnerLink="RemoveNSFromResponseSuccess_InvokeCreateEventComponent" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                        <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_RemoveNSFromResponseSuccess_CreateEvent}"/>
                        <soae-ab:outboundPolicies/>
                        <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/CreateEventProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                        <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="RemoveNSFromResponseSuccess_InvokeCreateEventComponentInput" inputMsgPart="body" operation="RemoveNSFromResponseSuccess_InvokeCreateEventComponentOperation" outputMsg="RemoveNSFromResponseSuccess_InvokeCreateEventComponentOutput" outputMsgPart="body" port="RemoveNSFromResponseSuccess_InvokeCreateEventComponentPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RemoveNSFromResponseSuccess_InvokeCreateEventComponent}RemoveNSFromResponseSuccess_InvokeCreateEventComponentService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/RemoveNSFromResponseSuccess_InvokeCreateEventComponent" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/RemoveNSFromResponseSuccess_InvokeCreateEventComponent.wsdl"/>
                        <soae-ab:inboundPolicies/>
                    </soae-ab:InvokeBuilder>
                </bpws:extensionActivity>
                <bpws:scope name="ScopeTARemoveNSFromResponseSuccess_CreateEventSuccess">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTARemoveNSFromResponseSuccess_CreateEventSuccess"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence74">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TARemoveNSFromResponseSuccess_CreateEventSuccess" from="$TransactionActivityXML" name="TARemoveNSFromResponseSuccess_CreateEventSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1052'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1052']/ns5:StatusDescription,' - RemoveNamespacefromResponseSuccess')"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TARemoveNSFromResponseSuccess_CreateEventSuccess}" keepSrcElementName="false" name="UpdateTARemoveNSFromResponseSuccess_CreateEventSuccess" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeInvokeLenderPostbackURL">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeInvokePostbackURLFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeInvokePostbackURLFail" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LenderPostbackFailure" from="$XMLforGlobalException" name="LenderPostbackFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4042'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:StatusDescription,' of type: ',$IdentifyVendorPostbackPostBackFailureVar)"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$LenderPostbackFailure}" keepSrcElementName="false" name="UpdateLenderPostbackFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTALenderPostbackProcessFailed">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALenderPostbackProcessFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence134">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackProcessFailed" from="$TransactionActivityXML" name="TALenderPostbackProcessFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4042'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4042']/ns5:StatusDescription,' of type: ',$IdentifyVendorPostbackPostBackFailureVar)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackProcessFailed}" keepSrcElementName="false" name="UpdateTALenderPostbackProcessFailed" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence39">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{'Unable to get the ACTV Postback trading connection'}" keepSrcElementName="false" name="UnabletoGetActvTradingConnection" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://Radian.Matrix.MortgageIns.Origination.MDC.PublishTPProfileData}TradingConnection" destinationTypeKind="TYPE" destinationVariable="ACTVTradingConnection" expression="xpath:{$LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[(ns15:ConnectionDirectionCd='PST' or ns15:ConnectionDirectionCd='PSTPL') and ns15:ConnectionStatusCd='ACTV' and string(ns15:CredentialLocationCd)=string($AuthorizeProvider/ns35:CredentialLocationCd)][1]}" keepSrcElementName="false" name="ACTVTradingConnection" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Endpoint" expression="xpath:{string($ACTVTradingConnection/ns15:ConnectionURL)}" keepSrcElementName="false" name="Endpoint" xDestination=""/>
                </bpws:extensionActivity>
                <bpws:if name="If_Dynamic_Postback_On_RECV_is_Y_and_Downstream_Endpoint_is_MISMO231_or_MISMO33">
                    <bpws:condition>(string($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[(ns15:ConnectionDirectionCd='RECV' and (ns15:ConnectionAuthorizationCd='CRED'  or ns15:ConnectionAuthorizationCd='BAUTH') and ns15:TradingConnectionServices/ns15:TradingConnectionService/ns15:ServiceInterface/ns15:TradingPartnerServiceCd=$ServiceCD) and ns15:ConnectionStatusCd='ACTV']/ns15:Dynamic_Postback)='Y' and (($EndpointFormatVersion='MISMO231') or ($EndpointFormatVersion='MISMO33') or ($EndpointFormatVersion='XCM404')))</bpws:condition>
                    <bpws:sequence name="Sequence64">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://Radian.Matrix.MortgageIns.Origination.MDC.PublishTPProfileData}TradingConnection" destinationTypeKind="TYPE" destinationVariable="ACTVTradingConnection" expression="xpath:{$LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[(ns15:ConnectionDirectionCd='PST' or ns15:ConnectionDirectionCd='PSTPL') and ns15:ConnectionStatusCd='ACTV' and (string(ns15:CredentialLocationCd)=string($AuthorizeProvider/ns35:CredentialLocationCd)) and (translate(ns15:ConnectionURL,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')=translate($PostbackURLfromRequest,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ'))][1]}" keepSrcElementName="false" name="UpdateACTVPSTbckTradingConnectionforDynamicPSTbckY" xDestination="$ACTVTradingConnection"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Endpoint" expression="xpath:{$PostbackURLfromRequest}" keepSrcElementName="false" name="UpdateEndpointToRECVTypePostprocessURL" xDestination="$Endpoint"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:if>
                <bpws:extensionActivity>
                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="PostbackURL_ZIONLog" logLevel="verbose" name="PostbackURL_ZIONLog" nodeName="false" optionalData="$Endpoint" transactionID="false">
                        <soae-ab:comment>Postback URL:</soae-ab:comment>
                    </soae-ab:TransactionLog>
                </bpws:extensionActivity>
                <bpws:if name="If_Check_SFTP_or_HTTPS_or_SOAP">
                    <bpws:condition>string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)='SFTP'</bpws:condition>
                    <bpws:sequence name="Sequence137">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{'SFTP'}" keepSrcElementName="false" name="UpdateSFTPFailtoVendorPostbackPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="WriteToPostbackToSFTP" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="concat('sftp://',$SFTPURL,$AppConfig/ns4:PostbackSFTPArchivalPath,soae-xf:get-node-name(),'_',$StripedCustomerNumber,'_',$VendorID,'_',$MISMOVersion,'_',$OperationType,'_',$TransactionUUID,'.',$ResponseFileFormat)" endpointConfigurationType="Configured" imaKey="WriteToPostbackToSFTP_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="WriteToPostbackToSFTP" partnerLink="WriteToPostbackToSFTP" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="xpath:{}" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                                <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$PostBackResponse}"/>
                                <soae-ab:outboundPolicies/>
                                <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                <soae-ab:outputData binary="false" oneway="true" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                <soae-ab:sftpTransport serviceURI="sftp://intconnect.datacenter.radiangroupinc.net:22/origination/archive/" soapAction=""/>
                                <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="WriteToPostbackToSFTPInput" inputMsgPart="body" operation="WriteToPostbackToSFTPOperation" outputMsg="WriteToPostbackToSFTPOutput" outputMsgPart="body" port="WriteToPostbackToSFTPPort" service="{http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WriteToPostbackToSFTP}WriteToPostbackToSFTPService" soapVersion="1.1" tns="http://www.example.com/Origination/sftp/bin/OriginationAsynchronousPostBackProcess/WriteToPostbackToSFTP" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/WriteToPostbackToSFTP.wsdl"/>
                                <soae-ab:inboundPolicies/>
                            </soae-ab:InvokeBuilder>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTALenderPostbackProcessSuccess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALenderPostbackProcessSuccessFailed"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence95">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackProcessSuccess" from="$TransactionActivityXML" name="TALenderPostbackProcessSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1033'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackProcessSuccess}" keepSrcElementName="false" name="UpdateTALenderPostbackProcessSuccess" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                    <bpws:elseif>
                        <bpws:condition>string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)='HTTP' or string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)='SOAP'</bpws:condition>
                        <bpws:sequence name="Sequence136">
                            <bpws:if name="If_Connection_AuthCD_NONE">
                                <bpws:condition>$ACTVTradingConnection/ns15:ConnectionAuthorizationCd != 'NONE'</bpws:condition>
                                <bpws:scope name="ScopeDecryptCredentials">
                                    <bpws:sequence name="Sequence10">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{'Failed to decrypt credentials'}" keepSrcElementName="false" name="IdentifyVendorPostbackPostBackFailureVar" xDestination=""/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:XMLBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher" destinationTypeKind="ELEMENT" destinationVariable="DecryptCredentialsXML" name="DecryptCredentialsXML">
                                    <soae-ab:data>

                                    <ns183:ComputeBlockCipher>
                                    <ns183:ComputeBlockCipherDetails>

                                    <ns183:Credential Level="0">
                                    <ns183:Input>xpath:{string($ACTVTradingConnection/ns15:ConnectionUserNam)}</ns183:Input>
                                    <ns183:SaltBase64>xpath:{string($ACTVTradingConnection/ns15:Connection_SaltText)}</ns183:SaltBase64>
                                    <ns183:InitVector>xpath:{''}</ns183:InitVector>
                                    <ns183:SymmetricKeyName>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</ns183:SymmetricKeyName>
                                    <ns183:Output>xpath:{''}</ns183:Output>
                                    </ns183:Credential>

                                    <ns183:Credential Level="1">
                                    <ns183:Input>xpath:{string($ACTVTradingConnection/ns15:ConnectionPswd)}</ns183:Input>
                                    <ns183:SaltBase64>xpath:{string($ACTVTradingConnection/ns15:Connection_SaltText)}</ns183:SaltBase64>
                                    <ns183:InitVector>xpath:{''}</ns183:InitVector>
                                    <ns183:SymmetricKeyName>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</ns183:SymmetricKeyName>
                                    <ns183:Output>xpath:{''}</ns183:Output>
                                    </ns183:Credential>
                                    </ns183:ComputeBlockCipherDetails>
                                    </ns183:ComputeBlockCipher>
                                    </soae-ab:data>
                                    <soae-ab:data2>
                                    <xmlEditorNode created="true" form="unqualified" index="0" nodeType="document" qname="{#document}#document">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipherDetails" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Input" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{string($ACTVTradingConnection/ns15:ConnectionUserNam)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SaltBase64" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{string($ACTVTradingConnection/ns15:Connection_SaltText)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}InitVector" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SymmetricKeyName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Output" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute form="qualified" name="Level">0</attribute>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="1" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential" replacedComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0/@element">
                                    <children>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Input" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.0/@element">
                                    <value>xpath:{string($ACTVTradingConnection/ns15:ConnectionPswd)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SaltBase64" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.1/@element">
                                    <value>xpath:{string($ACTVTradingConnection/ns15:Connection_SaltText)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}InitVector" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.2/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}SymmetricKeyName" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.3/@element">
                                    <value>xpath:{string($AppConfig/ns4:SymmetrickeyName)}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="true" form="qualified" index="0" nodeType="element" qname="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Output" replacedComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4" schemaComponent="type-definition:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}Credential/@particle/@modelGroup/@particle.4/@element">
                                    <value>xpath:{''}</value>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute form="qualified" name="Level">1</attribute>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>

                                    <xmlEditorNode created="false" form="qualified" index="2" schemaComponent="element:{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher/@typeDefinition/@particle/@modelGroup/@particle.0/@element/@typeDefinition/@particle/@modelGroup/@particle.0"/>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    <attributes>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}nil"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}type"/>

                                    <attribute empty="true" form="qualified" name="{http://www.w3.org/2001/XMLSchema-instance}schemaLocation"/>
                                    </attributes>
                                    </xmlEditorNode>
                                    </children>
                                    </xmlEditorNode>
                                    </soae-ab:data2>
                                    <soae-ab:variables/>
                                    </soae-ab:XMLBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.example.com/OriginationService/http/bin/OriginationAsynchronousPostBack/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="DecryptCredentials" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="DecryptCredentials_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="DecryptCredentials" partnerLink="DecryptCredentials" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$DecryptCredentialsXML}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdElement="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdElement="{http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher}ComputeBlockCipher"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="" serviceURI="https://127.0.0.1:9000/ComputeAES256Decrypt" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="DecryptCredentialsInput" inputMsgPart="body" operation="DecryptCredentialsOperation" outputMsg="DecryptCredentialsOutput" outputMsgPart="body" port="DecryptCredentialsPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DecryptCredentials}DecryptCredentialsService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/DecryptCredentials" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/DecryptCredentials.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    <soae-ab:explicitImports>

                                    <soae-ab:documentImport kind="http://www.w3.org/2001/XMLSchema" location="xsd/ComputeBlockCipher.xsd" tns="http://www.radian.biz/ClientConnectivity/zion/ComputeBlockCipher"/>
                                    </soae-ab:explicitImports>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:if>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SOAPAction" expression="xpath:{''}" keepSrcElementName="false" name="SOAPAction" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ContentType" expression="xpath:{'text/xml'}" keepSrcElementName="false" name="ContentType" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)}" keepSrcElementName="false" name="UpdateHTTPVendorPostbackPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Auth" expression="xpath:{''}" keepSrcElementName="false" name="Auth" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="UserName" expression="xpath:{''}" keepSrcElementName="false" name="UserName" xDestination="$UserName"/>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="Password" expression="xpath:{''}" keepSrcElementName="false" name="Password" xDestination="$Password"/>
                            </bpws:extensionActivity>
                            <bpws:if name="If_endpoint_SOAP">
                                <bpws:condition>string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)='SOAP'
								</bpws:condition>
                                <bpws:sequence name="Sequence18">
                                    <bpws:scope name="ScopeLoadSOAPProperties">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{concat('Unable to load SOAPProperties file: ',$AppConfig/ns4:FileURL,'XSLs/',$VendorID,'/',$StripedCustomerNumber,'/SOAPProperties.xsl .')}" keepSrcElementName="false" name="UpdateSOAPProploadfailVendorPostbackPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                                    </bpws:extensionActivity>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/SOAPProperties}SOAPProperties" destinationTypeKind="ELEMENT" destinationVariable="LoadSOAPProperties" from="$PostBackResponse" name="LoadSOAPProperties" stylesheet="concat($AppConfig/ns4:FileURL,'XSLs/',$VendorID,'/',$StripedCustomerNumber,'/SOAPProperties.xsl')" stylesheetType="XPATH">
                                    <soae-ab:params/>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    </bpws:scope>
                                    <bpws:scope name="ScopeAssigntoSOAPType">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:invalidVariables">
                                    <bpws:sequence>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{'SOAP endpoint version in SOAP properties file is different from SOAP response'}" keepSrcElementName="false" name="UpdateSOAPPropAssignmentFailVendorPostbackPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                                    </bpws:extensionActivity>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence19">
                                    <bpws:if name="If_SOAP12_Response_Needed">
                                    <bpws:condition>(string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)='SOAP') and string($LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPVersion)="SOAP1.2"</bpws:condition>
                                    <bpws:sequence name="Sequence15">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2003/05/soap-envelope}Envelope" destinationTypeKind="ELEMENT" destinationVariable="AssigntoSOAP12Envelope" expression="xpath:{$LoadSOAPProperties/ns305:SOAPResponse/*}" keepSrcElementName="false" name="AssigntoSOAP12Envelope" xDestination="$AssigntoSOAP12Envelope"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$AssigntoSOAP12Envelope}" keepSrcElementName="false" name="UpdatePostBackResponseWithSOAP12Envelope" xDestination="$PostBackResponse"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    <bpws:elseif>
                                    <bpws:condition>(string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd)='SOAP') and string($LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPVersion)="SOAP1.1"</bpws:condition>
                                    <bpws:sequence name="Sequence13">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://schemas.xmlsoap.org/soap/envelope/}Envelope" destinationTypeKind="ELEMENT" destinationVariable="AssigntoSOAP11Envelope" expression="xpath:{$LoadSOAPProperties/ns305:SOAPResponse/*}" keepSrcElementName="false" name="AssigntoSOAP11Envelope" xDestination="$AssigntoSOAP11Envelope"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="PostBackResponse" expression="xpath:{$AssigntoSOAP11Envelope}" keepSrcElementName="false" name="UpdatePostBackResponseWithSOAP11Envelope" xDestination="$PostBackResponse"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:elseif>
                                    </bpws:if>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    <bpws:scope name="ScopeUseSOAPProperties">
                                    <bpws:sequence name="Sequence11">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ContentType" expression="xpath:{$LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPContentType/text()}" keepSrcElementName="false" name="UpdateSOAP12ContentType" xDestination="$ContentType"/>
                                    </bpws:extensionActivity>
                                    <bpws:if name="If_EndpointVersion_Is_SOAP12_and_SOAPAction_type_is_action">
                                    <bpws:condition>($LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPVersion/text()='SOAP1.2' and $LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPActionType/text()='Action')</bpws:condition>
                                    <bpws:empty name="DoNothing"/>
                                    <bpws:elseif>
                                    <bpws:condition>($LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPVersion/text()='SOAP1.1' and $LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPActionType/text()='SOAPAction')</bpws:condition>
                                    <bpws:sequence name="Sequence12">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SOAPAction" expression="xpath:{$LoadSOAPProperties/ns305:SOAPEndpoint/ns305:SOAPAction/text()}" keepSrcElementName="false" name="UpdateSOAP11Action" xDestination="$SOAPAction"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:elseif>
                                    </bpws:if>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{string($LoadLenderProfile/ns15:TradingPartnerProfile/ns15:TradingPartnerProfile_Detail/ns15:TradingConnections/ns15:TradingConnection[ns15:ConnectionDirectionCd='PST' or ns15:ConnectionDirectionCd='PSTPL']/ns15:ServiceDeliveryMethodCd)}" keepSrcElementName="false" name="UpdateSOAPVendorPostbackPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                </bpws:sequence>
                            </bpws:if>
                            <bpws:if name="If_CredentialLocationCd_is_Query_Send_Username_Password">
                                <bpws:condition>string($ACTVTradingConnection/ns15:CredentialLocationCd)='QUERY'</bpws:condition>
                                <bpws:sequence name="Sequence21">
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="UserName" expression="xpath:{string($DecryptCredentials.body/ns183:ComputeBlockCipherDetails/ns183:Credential[@Level=&quot;0&quot;]/ns183:Output)}" keepSrcElementName="false" name="UpdateUsername" xDestination="$UserName"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="Password" expression="xpath:{string($DecryptCredentials.body/ns183:ComputeBlockCipherDetails/ns183:Credential[@Level=&quot;1&quot;]/ns183:Output)}" keepSrcElementName="false" name="UpdatePassword" xDestination="$Password"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                                <bpws:elseif>
                                    <bpws:condition>string($ACTVTradingConnection/ns15:CredentialLocationCd)='HTBSC'</bpws:condition>
                                    <bpws:sequence name="Sequence22">
                                    <bpws:extensionActivity>
                                    <soae-ab:Comment name="Comment">If_ConnectionAuthorizationCd_is_BasicAuth_And_CredentialLocationCd_is_HTBSC</soae-ab:Comment>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{concat(string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd),' HTTPBasic')}" keepSrcElementName="false" name="UpdateHTPBasicAuthVendorPostbackPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Auth" expression="xpath:{concat('Basic ',soae-xf:base64-encode-string(concat($DecryptCredentials.body/ns183:ComputeBlockCipherDetails/ns183:Credential[@Level=&quot;0&quot;]/ns183:Output,':',$DecryptCredentials.body/ns183:ComputeBlockCipherDetails/ns183:Credential[@Level=&quot;1&quot;]/ns183:Output)))}" keepSrcElementName="false" name="UpdateAuthWithBasicAuthCredentials" xDestination="$Auth"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:elseif>
                                <bpws:elseif>
                                    <bpws:condition>string($ACTVTradingConnection/ns15:CredentialLocationCd)='NONE'</bpws:condition>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{concat(string($ACTVTradingConnection/ns15:ServiceDeliveryMethodCd),' NONE')}" keepSrcElementName="false" name="UpdateNONEVendorPostbackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                                    </bpws:extensionActivity>
                                </bpws:elseif>
                            </bpws:if>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}int" destinationTypeKind="TYPE" destinationVariable="InvocationRetryCounter" expression="xpath:{0}" keepSrcElementName="false" name="InvocationRetryCounter" xDestination=""/>
                            </bpws:extensionActivity>
                            <bpws:while name="While">
                                <bpws:condition>$InvocationRetryCounter&lt;=string($ACTVTradingConnection/ns15:ResponseRetryCnt)</bpws:condition>
                                <bpws:sequence name="Sequence41">
                                    <bpws:scope name="ScopeDoPostback">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:if name="If_RetryCounter_equals_ResponseRetryCnt">
                                    <bpws:condition>($InvocationRetryCounter=string($ACTVTradingConnection/ns15:ResponseRetryCnt))</bpws:condition>
                                    <bpws:sequence name="Sequence44">
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IdentifyVendorPostbackPostBackFailureVar" expression="xpath:{concat($IdentifyVendorPostbackPostBackFailureVar,'. Number of Retries Executed :',$InvocationRetryCounter)}" keepSrcElementName="false" name="UpdatePostbackFailureVendorPostBackFailureVar" xDestination="$IdentifyVendorPostbackPostBackFailureVar"/>
                                    </bpws:extensionActivity>
                                    <bpws:rethrow/>
                                    </bpws:sequence>
                                    </bpws:if>
                                    <bpws:wait name="WaitSpecifiedSecondsBeforeRetry">
                                    <bpws:for>concat('PT',string($ACTVTradingConnection/ns15:ResponseRetryIntervalNum),'S')</bpws:for>
                                    </bpws:wait>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}int" destinationTypeKind="TYPE" destinationVariable="InvocationRetryCounter" expression="xpath:{$InvocationRetryCounter+1}" keepSrcElementName="false" name="IncrRetryCounter" xDestination="$InvocationRetryCounter"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence43">
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="InvokeLenderPostbackURL" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="$Endpoint" endpointConfigurationType="Configured" imaKey="InvokeLenderPostbackURL_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeLenderPostbackURL" partnerLink="InvokeLenderPostbackURL" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$PostBackResponse}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:metadata metadataSource="POLICY" xpath="">
                                    <soae-ab:policies>

                                    <soae-ab:policy name="PostBackMessageMediationPolicy.msgmed">
                                    <soae-ab:parameters>

                                    <soae-ab:parameter name="http:username" value="$UserName"/>

                                    <soae-ab:parameter name="http:password" value="$Password"/>

                                    <soae-ab:parameter name="http:content-type" value="$ContentType"/>

                                    <soae-ab:parameter name="http:soapaction" value="$SOAPAction"/>

                                    <soae-ab:parameter name="http:Authorization" value="$Auth"/>
                                    </soae-ab:parameters>
                                    </soae-ab:policy>
                                    </soae-ab:policies>

                                    <soae-ab:httpRequest method="" query="" uri="" version="HTTP/1.0"/>
                                    </soae-ab:metadata>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>

                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="" serviceURI="http://" soapAction="http://InvokeLenderPostbackURL" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeLenderPostbackURLInput" inputMsgPart="body" operation="InvokeLenderPostbackURLOperation" outputMsg="InvokeLenderPostbackURLOutput" outputMsgPart="body" port="InvokeLenderPostbackURLPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeLenderPostbackURL}InvokeLenderPostbackURLService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeLenderPostbackURL" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeLenderPostbackURL.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}int" destinationTypeKind="TYPE" destinationVariable="InvocationRetryCounter" expression="xpath:{string($ACTVTradingConnection/ns15:ResponseRetryCnt)+1}" keepSrcElementName="false" name="NoRetry" xDestination="$InvocationRetryCounter"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                </bpws:sequence>
                            </bpws:while>
                            <bpws:scope name="ScopePOSTBACKResponseLog">
                                <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeParsePOSTBACKResponse_ZIONLog">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyInvokePOSTBACKResponse"/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:extensionActivity>

                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ParsePOSTBACKResponse_ZIONLog" logLevel="verbose" name="ParsePOSTBACKResponse_ZIONLog" nodeName="false" optionalData="soae-xf:xml-parse-string(&quot;utf-8&quot;,&quot;base64&quot;,soae-xf:get-primary-content-as-base64-string($InvokeLenderPostbackURL_IMA_Key,false()))" transactionID="false">
                                    <soae-ab:comment>Parsed Lender postback response follows:</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                    </bpws:extensionActivity>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                </bpws:faultHandlers>
                                <bpws:extensionActivity>
                                    <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="InvokePOSTBACKResponse_ZIONLog" logLevel="verbose" name="InvokePOSTBACKResponse_ZIONLog" nodeName="false" optionalData="$InvokeLenderPostbackURL.body" transactionID="false">
                                    <soae-ab:comment>Lender postback response follows:</soae-ab:comment>
                                    </soae-ab:TransactionLog>
                                </bpws:extensionActivity>
                            </bpws:scope>
                            <bpws:scope name="ScopeTALenderPOSTBackHTTPorSOAPSuccess">
                                <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALenderPOSTBackHTTPorSOAPSuccess"/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence17">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPOSTBackHTTPorSOAPSuccess" from="$TransactionActivityXML" name="TALenderPOSTBackHTTPorSOAPSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1033'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPOSTBackHTTPorSOAPSuccess}" keepSrcElementName="false" name="UpdateTALenderPOSTBackHTTPorSOAPSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                        </bpws:sequence>
                    </bpws:elseif>
                </bpws:if>
                <bpws:scope name="LenderPostbackSuccess_CreateEvent">
                    <bpws:faultHandlers>
                        <bpws:catchAll>
                            <bpws:sequence>
                                <bpws:scope name="ScopeTALenderPostbackSuccess_CreateEventFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALenderPostbackSuccess_CreateEventFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackSuccess_CreateEventFailed" from="$TransactionActivityXML" name="TALenderPostbackSuccess_CreateEventFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackSuccess_CreateEventFailed}" keepSrcElementName="false" name="UpdateTALenderPostbackSuccess_CreateEventFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                                <bpws:scope name="ScopeLenderPostbackSuccess_CreateEventFailed_NotifyFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTALenderPostbackSuccess_CreateEventFailed_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTALenderPostbackSuccess_CreateEventFailed_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackSuccess_CreateEventFailed_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TALenderPostbackSuccess_CreateEventFailed_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2027']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackSuccess_CreateEventFailed_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTALenderPostbackSuccess_CreateEventFailed_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTALenderPostbackSuccess_CreateEventFailed_NotifyFailureFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>

                                    <bpws:empty name="EmptyTALenderPostbackSuccess_CreateEventFailed_NotifyFailureFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence111">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackSuccess_CreateEventFailed_NotifyFailureFailed" from="$TransactionActivityXML" name="TALenderPostbackSuccess_CreateEventFailed_NotifyFailureFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2028']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackSuccess_CreateEventFailed_NotifyFailureFailed}" keepSrcElementName="false" name="UpdateTALenderPostbackSuccess_CreateEventFailed_NotifyFailureFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence114">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_LenderPostbackSuccess_CreateEventFailed_NotifyFailure" from="$XMLforLoadingConfigs" name="XSLTransformation_LenderPostbackSuccess_CreateEventFailed_NotifyFailure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="''"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess-',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="$VendorID"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure" partnerLink="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">

                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_LenderPostbackSuccess_CreateEventFailed_NotifyFailure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>

                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailureInput" inputMsgPart="body" operation="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailureOperation" outputMsg="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailureOutput" outputMsgPart="body" port="LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure}LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/LenderPostbackProcessSuccess_CreateEventFailed_InvokeNotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTALenderPostbackSuccess_CreateEventFailed_NotifyFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALenderPostbackSuccess_CreateEventFailed_NotifyFailure"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence74">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackSuccess_CreateEventFailed_NotifyFailure" from="$TransactionActivityXML" name="TALenderPostbackSuccess_CreateEventFailed_NotifyFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'SUCCESS'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1055']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackSuccess_CreateEventFailed_NotifyFailure}" keepSrcElementName="false" name="UpdateTALenderPostbackSuccess_CreateEventFailed_NotifyFailure" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:catchAll>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence289">
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'LenderPostbackSuccess_CreateEventTransformationFailed'}" keepSrcElementName="false" name="LenderPostbackSuccess_CreateEventTransformationFailed" xDestination="$EventFailureAdditionalInfo"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_LenderPostbackSuccess_CreateEvent" from="$XMLforLoadingConfigs" name="XSLTransformation_LenderPostbackSuccess_CreateEvent" stylesheet="SysLogEvent.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="NodeName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="ComponentName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:ApplicationName"/>
                                    <soae-ab:param name="StructuredMessage" value="''"/>
                                    <soae-ab:param name="TransactionUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_1033'"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:Priority"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:StatusDescription"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess- ', $StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1033']/ns5:Severity"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'LenderPostbackSuccess_CreateEventInvocationFailed'}" keepSrcElementName="false" name="LenderPostbackSuccess_CreateEventInvocationFailed" xDestination="$EventFailureAdditionalInfo"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="LenderPostbackSuccess_InvokeCreateEventComponent" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="LenderPostbackSuccess_InvokeCreateEventComponent_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="LenderPostbackSuccess_InvokeCreateEventComponent" partnerLink="LenderPostbackSuccess_InvokeCreateEventComponent" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_LenderPostbackSuccess_CreateEvent}"/>
                                <soae-ab:outboundPolicies/>
                                <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/CreateEventProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="LenderPostbackSuccess_InvokeCreateEventComponentInput" inputMsgPart="body" operation="LenderPostbackSuccess_InvokeCreateEventComponentOperation" outputMsg="LenderPostbackSuccess_InvokeCreateEventComponentOutput" outputMsgPart="body" port="LenderPostbackSuccess_InvokeCreateEventComponentPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LenderPostbackSuccess_InvokeCreateEventComponent}LenderPostbackSuccess_InvokeCreateEventComponentService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/LenderPostbackSuccess_InvokeCreateEventComponent" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/LenderPostbackSuccess_InvokeCreateEventComponent.wsdl"/>
                                <soae-ab:inboundPolicies/>
                            </soae-ab:InvokeBuilder>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTALenderPostbackSuccess_CreateEventFailedSuccess">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTALenderPostbackSuccess_CreateEventFailedSuccess"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence74">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TALenderPostbackSuccess_CreateEventFailedSuccess" from="$TransactionActivityXML" name="TALenderPostbackSuccess_CreateEventFailedSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1052'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1052']/ns5:StatusDescription,' - LenderPostBackProcessSuccess')"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TALenderPostbackSuccess_CreateEventFailedSuccess}" keepSrcElementName="false" name="UpdateTALenderPostbackSuccess_CreateEventFailedSuccess" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:scope>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="MICertificateNumber" expression="xpath:{string($InputPayload/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:MI_APPLICATION_RESPONSE_DETAIL/ns146:MICertificateIdentifier/text())}" keepSrcElementName="false" name="UpdateMICertificateNumber" xDestination="$MICertificateNumber"/>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="LoanIdentifier" expression="xpath:{string($InputPayload/ns146:MORTGAGEINS_XCM/ns146:SERVICES/ns146:SERVICE/ns146:MI/ns146:MI_APPLICATION_RESPONSE/ns146:LOAN_IDENTIFIERS/ns146:LOAN_IDENTIFIER[1]/ns146:LoanIdentifier/text())}" keepSrcElementName="false" name="UpdateLoanIdentifier" xDestination="$LoanIdentifier"/>
        </bpws:extensionActivity>
        <bpws:if name="If_Response_Archival_Enabled">
            <bpws:condition>translate($AppConfig/ns4:RequestResponseArchivalEnabled,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='TRUE'</bpws:condition>
            <bpws:scope name="ScopeInvokeArchiveComponentToArchiveResponse">
                <bpws:faultHandlers>
                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                        <bpws:sequence>
                            <bpws:extensionActivity>
                                <soae-ab:Comment name="Comment3">Non critical</soae-ab:Comment>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:XSLTransform destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="WriteResponseToArchiveFailure" from="$XMLforGlobalException" name="WriteResponseToArchiveFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2009'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    </soae-ab:params>
                                </soae-ab:XSLTransform>
                            </bpws:extensionActivity>
                            <bpws:scope name="ScopeTAResponseArchivalFailed">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAResponseArchivalFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence133">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAResponseArchivalFailed" from="$TransactionActivityXML" name="TAResponseArchivalFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2009'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAResponseArchivalFailed}" keepSrcElementName="false" name="UpdateTAResponseArchivalFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                </bpws:sequence>
                            </bpws:scope>
                            <bpws:scope name="ScopeResponseArchiveFailure_NotifyFailure">
                                <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAResoponseArchiveFailure_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAResoponseArchiveFailure_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence113">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAResoponseArchiveFailure_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TAResoponseArchiveFailure_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2027']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAResoponseArchiveFailure_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTAResoponseArchiveFailure_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAResponseArchiveFailure_NotifyFailureInvocationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAResponseArchiveFailure_NotifyFailureInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence102">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAResoponseArchiveFailure_NotifyFailureInvocationFailed" from="$TransactionActivityXML" name="TAResoponseArchiveFailure_NotifyFailureInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2028']/ns5:StatusDescription"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAResoponseArchiveFailure_NotifyFailureInvocationFailed}" keepSrcElementName="false" name="UpdateTAResoponseArchiveFailure_NotifyFailureInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                    </bpws:catch>
                                </bpws:faultHandlers>
                                <bpws:sequence name="Sequence112">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_ResponseArchivalFailure" from="$XMLforLoadingConfigs" name="XSLTransformation_ResponseArchivalFailure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2009'"/>
                                    <soae-ab:param name="ExceptionName" value="string($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:StatusName/text())"/>
                                    <soae-ab:param name="Description" value="string($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:StatusDescription/text())"/>
                                    <soae-ab:param name="Loglevel" value="string($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:LogLevel)"/>
                                    <soae-ab:param name="Severity" value="string($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:Severity)"/>
                                    <soae-ab:param name="Priority" value="string($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:Priority)"/>
                                    <soae-ab:param name="AdditionalInfo" value="string($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2009']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="''"/>
                                    <soae-ab:param name="ResponseCondition" value="''"/>
                                    <soae-ab:param name="ResponseCode" value="''"/>
                                    <soae-ab:param name="ResponseDescription" value="''"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>
                                    <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="ResponseArchiveFailed_NotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="ResponseArchiveFailed_NotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="ResponseArchiveFailed_NotifyFailure" partnerLink="ResponseArchiveFailed_NotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_ResponseArchivalFailure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="ResponseArchiveFailed_NotifyFailureInput" inputMsgPart="body" operation="ResponseArchiveFailed_NotifyFailureOperation" outputMsg="ResponseArchiveFailed_NotifyFailureOutput" outputMsgPart="body" port="ResponseArchiveFailed_NotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ResponseArchiveFailed_NotifyFailure}ResponseArchiveFailed_NotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/ResponseArchiveFailed_NotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/ResponseArchiveFailed_NotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                    </bpws:extensionActivity>
                                    <bpws:scope name="ScopeTAResponseArchiveFailure_NotifyFailure">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAResoponseArchiveFailure_NotifyFailure_Success"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence102">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAResoponseArchiveFailure_NotifyFailure_Success" from="$TransactionActivityXML" name="TAResoponseArchiveFailure_NotifyFailure_Success" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1055']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAResoponseArchiveFailure_NotifyFailure_Success}" keepSrcElementName="false" name="UpdateTAResoponseArchiveFailure_NotifyFailure_Success" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                </bpws:sequence>
                            </bpws:scope>
                            <bpws:extensionActivity>
                                <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ResponseArchivalfailed_ZIONLog" logLevel="verbose" name="ResponseArchivalfailed_ZIONLog" nodeName="true" optionalData="" transactionID="true">
                                    <soae-ab:comment>Unable to archive the response to SFTP.</soae-ab:comment>
                                </soae-ab:TransactionLog>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:catch>
                </bpws:faultHandlers>
                <bpws:sequence name="Sequence33">
                    <bpws:extensionActivity>
                        <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/WriteResponsetoArchive}WriteResponsetoArchiveOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeArchiveComponentToResponsetoArchive" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeArchiveComponentToResponsetoArchive_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeArchiveComponentToResponsetoArchive" partnerLink="InvokeArchiveComponentToResponsetoArchive" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                            <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$PostBackResponse}"/>
                            <soae-ab:outboundPolicies/>
                            <soae-ab:metadata metadataSource="NEW" xpath="">
                                <soae-ab:policies/>
                                <soae-ab:httpRequest method="POST" query="" uri="/ArchiveComponent" version="HTTP/1.0">
                                    <soae-ab:header name="content-type" value="application/text"/>
                                    <soae-ab:header name="uuid" value="xpath:{$TransactionUUID}"/>
                                    <soae-ab:header name="appname" value="xpath:{$ApplicationName}"/>
                                    <soae-ab:header name="foldername" value="xpath:{$AppConfig/ns4:ResponseArchivalPath}"/>
                                </soae-ab:httpRequest>
                            </soae-ab:metadata>
                            <soae-ab:inputData binary="true" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                            <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                            <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://ae1bdcon1:9000/ArchiveComponent" soapAction="" translateErrorResponseIntoWorkflowFault="true"/>
                            <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeArchiveComponentToResponsetoArchiveInput" inputMsgPart="body" operation="InvokeArchiveComponentToResponsetoArchiveOperation" outputMsg="InvokeArchiveComponentToResponsetoArchiveOutput" outputMsgPart="body" port="InvokeArchiveComponentToResponsetoArchivePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponsetoArchive}InvokeArchiveComponentToResponsetoArchiveService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponsetoArchive" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeArchiveComponentToResponsetoArchive.wsdl"/>
                            <soae-ab:inboundPolicies/>
                        </soae-ab:InvokeBuilder>
                    </bpws:extensionActivity>
                    <bpws:extensionActivity>
                        <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="IsResponseArchived" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateIsResponseArchivedtoTrue" xDestination="$IsResponseArchived"/>
                    </bpws:extensionActivity>
                    <bpws:scope name="ScopeTAResponseArchivalSuccess">
                        <bpws:faultHandlers>
                            <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                <bpws:sequence>
                                    <bpws:empty name="EmptyTAResponseArchivalSuccessFailed"/>
                                </bpws:sequence>
                            </bpws:catch>
                        </bpws:faultHandlers>
                        <bpws:sequence name="Sequence94">
                            <bpws:extensionActivity>
                                <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAResponseArchivalSuccess" from="$TransactionActivityXML" name="TAResponseArchivalSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1032'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1032']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                </soae-ab:XSLTransform>
                            </bpws:extensionActivity>
                            <bpws:extensionActivity>
                                <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAResponseArchivalSuccess}" keepSrcElementName="false" name="UpdateTAResponseArchivalSuccess" xDestination="$TransactionActivityXML"/>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:scope>
                </bpws:sequence>
            </bpws:scope>
        </bpws:if>
        <bpws:scope name="Scope_InvokeUpdateTouchpointComponent_TransactionCompleted">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:scope name="ScopeTAInvokeUpdateTouchpointInvocationFailure_TransactionCompleted">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyInvokeUpdateTouchpointInvocationFailure_TransactionCompleted"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence97">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInvokeUpdateTouchpointInvocationFailure_TransactionCompleted" from="$TransactionActivityXML" name="TAInvokeUpdateTouchpointInvocationFailure_TransactionCompleted" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2025'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInvokeUpdateTouchpointInvocationFailure_TransactionCompleted}" keepSrcElementName="false" name="UpdateTAInvokeUpdateTouchpointInvocationFailure_TransactionCompleted" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="ScopeTransactionCompleted_InvokeUpdateTouchpointInvocationFailure_NotifyFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence5">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureTransformationFailed" from="$TransactionActivityXML" name="TATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2027']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureTransformationFailed}" keepSrcElementName="false" name="UpdateTATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catch>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTATransactioncompleted_UpdateTouchpointInvocationFailed_FailureNotificationInvocationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTATransactioncompleted_UpdateTouchpointInvocationFailed_FailureNotificationInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence5">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TATransactioncompleted_UpdateTouchpointInvocationFailed_FailureNotificationInvocationFailed" from="$TransactionActivityXML" name="TATransactioncompleted_UpdateTouchpointInvocationFailed_FailureNotificationInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2028']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TATransactioncompleted_UpdateTouchpointInvocationFailed_FailureNotificationInvocationFailed}" keepSrcElementName="false" name="UpdateTATransactioncompleted_UpdateTouchpointInvocationFailed_FailureNotificationInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence114">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_TransactionCompleted_InvokeUpdateTouchpointInvocationFailure_NotifyFailure" from="$XMLforLoadingConfigs" name="XSLTransformation_TransactionCompleted_InvokeUpdateTouchpointInvocationFailure_NotifyFailure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="''"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2025'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess-',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="$VendorID"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2025']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/invokw}invokwOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed" partnerLink="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_TransactionCompleted_InvokeUpdateTouchpointInvocationFailure_NotifyFailure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailedInput" inputMsgPart="body" operation="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailedOperation" outputMsg="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailedOutput" outputMsgPart="body" port="InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailedPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed}InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailedService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeNotifyFailure_Transactioncompleted_UpdateTouchpointInvocationFailed.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureSuccess">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureSuccess"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence142">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureSuccess" from="$TransactionActivityXML" name="TATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1055']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureSuccess}" keepSrcElementName="false" name="UpdateTATransactioncompleted_UpdateTouchpointInvocationFailed_NotifyFailureSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence116">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="Phone" expression="xpath:{substring(translate($Phone,' ~`!@#$%^*()-_=+{}[]\|;:,.&amp;?&quot;/&lt;&gt;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',''),1,10)}" keepSrcElementName="false" name="FormatPhoneNumber" xDestination="$Phone"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'TransactionCompleted_UpdateTouchpointTransformationFailed'}" keepSrcElementName="false" name="TransactionCompleted_UpdateTouchpointTransformationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_InvokeUpdateTouchpointComponent_TransactionCompleted" from="$XMLforLoadingConfigs" name="XSLTransformation_InvokeUpdateTouchpointComponent_TransactionCompleted" stylesheet="CreateTouchpoint.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                            <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                            <soae-ab:param name="Environment" value="$EnvironmentName"/>
                            <soae-ab:param name="OperationName" value="$OperationType"/>
                            <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1034']/ns5:ApplicationName"/>
                            <soae-ab:param name="AccountIdentifier" value="$CustomerNumber"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1034']/ns5:StatusDescription"/>
                            <soae-ab:param name="CertificateNumber" value="$MICertificateNumber"/>
                            <soae-ab:param name="LoanIdentifier" value="$LoanIdentifier"/>
                            <soae-ab:param name="NodeName" value="soae-xf:get-node-name()"/>
                            <soae-ab:param name="Email" value="$Email"/>
                            <soae-ab:param name="Phone" value="$Phone"/>
                            <soae-ab:param name="FirstName" value="$FirstName"/>
                            <soae-ab:param name="LastName" value="$LastName"/>
                            <soae-ab:param name="TouchpointType" value="'UpdateTouchpoint'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'TransactionCompleted_UpdateTouchpointComponentInvocationFailed'}" keepSrcElementName="false" name="TransactionCompleted_UpdateTouchpointComponentInvocationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeCreateEvent_TransactionCompleted}InvokeCreateEvent_TransactionCompletedOutput" destinationTypeKind="MESSAGE" destinationVariable="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted" partnerLink="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                        <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_InvokeUpdateTouchpointComponent_TransactionCompleted}"/>
                        <soae-ab:outboundPolicies/>
                        <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/CreateTouchpointProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                        <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompletedInput" inputMsgPart="body" operation="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompletedOperation" outputMsg="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompletedOutput" outputMsgPart="body" port="InvokeUpdateTouchpointComponentCreateEvent_TransactionCompletedPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted}InvokeUpdateTouchpointComponentCreateEvent_TransactionCompletedService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/InvokeUpdateTouchpointComponentCreateEvent_TransactionCompleted.wsdl"/>
                        <soae-ab:inboundPolicies/>
                    </soae-ab:InvokeBuilder>
                </bpws:extensionActivity>
                <bpws:scope name="ScopeTAInvokeUpdateTouchpointComponent_TransactionCompleted">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAInvokeUpdateTouchpointComponent_TransactionCompleted"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence79">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAInvokeUpdateTouchpointComponent_TransactionCompleted" from="$TransactionActivityXML" name="TAInvokeUpdateTouchpointComponent_TransactionCompleted" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="'NA'"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1053'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1053']/ns5:StatusDescription,' - TransactionCompleted')"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAInvokeUpdateTouchpointComponent_TransactionCompleted}" keepSrcElementName="false" name="UpdateTAInvokeUpdateTouchpointComponent_TransactionCompleted" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKXSLFailureAddInfo" expression="xpath:{concat('Failed to load AsyncPostBackResponse',$EndpointFormatVersion,'.xsl')}" keepSrcElementName="false" name="ACKXSLFailureAddInfo" xDestination=""/>
        </bpws:extensionActivity>
        <bpws:scope name="ScopeGenerateACKSuccessResponse">
            <bpws:faultHandlers>
                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKResponseFailFlag" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateACKResponseXSLFailureFlag" xDestination="$ACKResponseFailFlag"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeACKSuccessResponseXSLFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeACKSuccessResponseXSLFailure" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKSuccessResponseXSLFailure" from="$XMLforGlobalException" name="ACKSuccessResponseXSLFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4041'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$ACKXSLFailureAddInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$ACKSuccessResponseXSLFailure}" keepSrcElementName="false" name="UpdateACKSuccessResponseXSLFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTAACKSuccessResponseXSLFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAACKSuccessResponseXSLFailure"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence134">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAACKSuccessResponseXSLFailure" from="$TransactionActivityXML" name="TAACKSuccessResponseXSLFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4041'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:StatusDescription,':',$ACKXSLFailureAddInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAACKSuccessResponseXSLFailure}" keepSrcElementName="false" name="UpdateTAACKSuccessResponseXSLFailure" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catch>
                <bpws:catch faultElement="soae-fault:schemaValidateNodeFault" faultVariable="ACKResponseSchemaValidateFaultVar">
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:TransactionLog clusterName="true" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="ACKResponseSchemaValidationFail_XONLog" logLevel="verbose" name="ACKResponseSchemaValidationFail_XONLog" nodeName="true" optionalData="$ACKResponseSchemaValidateFaultVar" transactionID="true">
                                <soae-ab:comment>ACK Response Schema Validation Fail</soae-ab:comment>
                            </soae-ab:TransactionLog>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKResponseFailFlag" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateACKResponseSchemaValidationFailureFlag" xDestination="$ACKResponseFailFlag"/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeACKResponseSchemaValidationFailure" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeACKResponseSchemaValidationFailure" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKResponseSchemaValidationFailure" from="$XMLforGlobalException" name="ACKResponseSchemaValidationFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_4041'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',string($ACKResponseSchemaValidateFaultVar/faultString))"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$ACKResponseSchemaValidationFailure}" keepSrcElementName="false" name="UpdateACKResponseSchemaValidationFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTAACKResponseSchemaValidationFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAACKResponseSchemaValidationFailure"/>
                                    </bpws:sequence>
                                </bpws:catch>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence134">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAACKResponseSchemaValidationFailure" from="$TransactionActivityXML" name="TAACKResponseSchemaValidationFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_4041'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_4041']/ns5:StatusDescription, ' of type: ', 'Fault string:',string($ACKResponseSchemaValidateFaultVar/faultString))"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAACKResponseSchemaValidationFailure}" keepSrcElementName="false" name="UpdateTAACKResponseSchemaValidationFailure" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence80">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKSuccessResponse" from="$InputPayload" name="ACKSuccessResponse" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/AsyncPostBackResponse',$EndpointFormatVersion,'.xsl')" stylesheetType="XPATH">
                        <soae-ab:params>
                            <soae-ab:param name="MPNumber" value="$CustomerNumber"/>
                            <soae-ab:param name="VendorID" value="$VendorID"/>
                            <soae-ab:param name="StatusCode" value="'1000'"/>
                            <soae-ab:param name="StatusConditionDescription" value="'SUCCESS'"/>
                            <soae-ab:param name="StatusDescription" value="'Response was successfully sent to the trading partner'"/>
                            <soae-ab:param name="StatusName" value="'ResponsePostbackSuccess'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:ValidationBuilder componentIdentification="elementName" data="$ACKSuccessResponse" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKSuccessResponseXMLSchemaValidation" elementName="xpath:{$ResponseACKRootElement}" name="ACKSuccessResponseXMLSchemaValidation" schemaIdentification="targetNamespace" targetNamespace="xpath:{$ResponseACKNamespace}" throwFault="true" urlLocal="false"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ACKXSLFailureAddInfo" expression="xpath:{'Failed to load AddAsyncPostBackResponseRootElement.xsl'}" keepSrcElementName="false" name="UpdateACKXSLFailureAddinfoWithAddWrapperRootElement" xDestination="$ACKXSLFailureAddInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="AddWrapperRootElement" from="$ACKSuccessResponse" name="AddWrapperRootElement" stylesheet="concat($AppConfig/ns4:FileURL,'SharedXSLs/AddResponseRootElement.xsl')" stylesheetType="XPATH">
                        <soae-ab:params/>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeTAGenerateACKResponseSuccess">
            <bpws:faultHandlers>
                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                    <bpws:sequence>
                        <bpws:empty name="EmptyTAGenerateACKResponseFailed"/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence94">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAGenerateACKResponseSuccess" from="$TransactionActivityXML" name="TAGenerateACKResponseSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="FirstActivity" value="1"/>
                            <soae-ab:param name="BatchActivity" value="0"/>
                            <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                            <soae-ab:param name="RecordCount" value="1"/>
                            <soae-ab:param name="Status" value="'SUCCESS'"/>
                            <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                            <soae-ab:param name="Code" value="'ZION_APP_1051'"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1051']/ns5:StatusDescription"/>
                            <soae-ab:param name="MessageID" value="'NA'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAGenerateACKResponseSuccess}" keepSrcElementName="false" name="UpdateTAGenerateACKResponseSuccess" xDestination="$TransactionActivityXML"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeReply">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="SetGlobalErrorToThreeReplyFail" expression="xpath:{soae-cache:set-string('msg:GlobalError','03')}" keepSrcElementName="false" name="SetGlobalErrorToThreeReplyFail" xDestination=""/>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="ReplyFailure" from="$XMLforGlobalException" name="ReplyFailure" stylesheet="CreateExceptionLog.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstBatch" value="'true'"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="RequestUUID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="TransactionID" value="$TransactionUUID"/>
                                    <soae-ab:param name="CertificateNumber" value="'NA'"/>
                                    <soae-ab:param name="ApplicationName" value="'Origination'"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_5010'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBack - ',$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:AdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="concat(' ',$VendorID,'; Customer#: ',$CustomerNumber,'; Service Type: ',$OperationType)"/>
                                    <soae-ab:param name="ResponseName" value="''"/>
                                    <soae-ab:param name="ResponseCondition" value="''"/>
                                    <soae-ab:param name="ResponseCode" value="''"/>
                                    <soae-ab:param name="ResponseDescription" value="''"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/Origination/ExceptionConfig}EXCEPTIONS" destinationTypeKind="ELEMENT" destinationVariable="XMLforGlobalException" expression="xpath:{$ReplyFailure}" keepSrcElementName="false" name="UpdateReplyFailure" xDestination="$XMLforGlobalException"/>
                        </bpws:extensionActivity>
                        <bpws:scope name="ScopeTAReplyFailure">
                            <bpws:faultHandlers>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAReplyFailure"/>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence5">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAReplyFailure" from="$TransactionActivityXML" name="TAReplyFailure" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_5010'"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_5010']/ns5:StatusDescription"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAReplyFailure}" keepSrcElementName="false" name="UpdateTAReplyFailure" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:rethrow/>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence4">
                <bpws:extensionActivity>
                    <soae-ab:ReplyBuilder addAttachments="false" compression="identity" destinationVariable="" messageBodyFrom="" name="Reply" passThroughEnabled="false" rawEnvelopeFrom="" sendRawEnvelope="false" throwFault="false" xmlResponse="false">
                        <soae-ab:outputDataMapping mode="Xpath" partName="body" xpath="xpath:{$AddWrapperRootElement}"/>
                        <soae-ab:outboundPolicies/>
                    </soae-ab:ReplyBuilder>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}string" destinationTypeKind="TYPE" destinationVariable="ResponseFlag" expression="xpath:{'true'}" keepSrcElementName="false" name="UpdateResponseFalgtoTrue" xDestination="$ResponseFlag"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="ScopeTAAsyncTarnsactionCompletedSuccess">
            <bpws:faultHandlers>
                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                    <bpws:sequence>
                        <bpws:empty name="EmptyTAAsyncTransactionCompletedSuccessFailure"/>
                    </bpws:sequence>
                </bpws:catch>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence142">
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncTransactionCompletedSuccess" from="$TransactionActivityXML" name="TAAsyncTransactionCompletedSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="FirstActivity" value="1"/>
                            <soae-ab:param name="BatchActivity" value="0"/>
                            <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                            <soae-ab:param name="RecordCount" value="1"/>
                            <soae-ab:param name="Status" value="'SUCCESS'"/>
                            <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                            <soae-ab:param name="Code" value="'ZION_APP_1034'"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1034']/ns5:StatusDescription"/>
                            <soae-ab:param name="MessageID" value="'NA'"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncTransactionCompletedSuccess}" keepSrcElementName="false" name="UpdateTAAsyncTransactionCompletedSuccess" xDestination="$TransactionActivityXML"/>
                </bpws:extensionActivity>
            </bpws:sequence>
        </bpws:scope>
        <bpws:scope name="AsyncResponseTxSuccess_CreateEvent">
            <bpws:faultHandlers>
                <bpws:catchAll>
                    <bpws:sequence>
                        <bpws:scope name="ScopeTAAsyncResponseTxSuccess_CreateEventFailed">
                            <bpws:faultHandlers>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseTxSuccess_CreateEventFailed"/>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence5">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseTxSuccess_CreateEventFailed" from="$TransactionActivityXML" name="TAAsyncResponseTxSuccess_CreateEventFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'FAIL'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseTxSuccess_CreateEventFailed}" keepSrcElementName="false" name="UpdateTAAsyncResponseTxSuccess_CreateEventFailed" xDestination="$TransactionActivityXML"/>
                                </bpws:extensionActivity>
                            </bpws:sequence>
                        </bpws:scope>
                        <bpws:scope name="AsyncResponseTxSuccess_CreateEventFailed_NotifyFailure">
                            <bpws:faultHandlers>
                                <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationTransformationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationTransformationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence5">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationTransformationFailed" from="$TransactionActivityXML" name="TAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationTransformationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2027'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2027']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationTransformationFailed}" keepSrcElementName="false" name="UpdateTAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationTransformationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catch>
                                <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:scope name="ScopeTAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationInvocationFailed">
                                    <bpws:faultHandlers>
                                    <bpws:catchAll>
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationInvocationFailed"/>
                                    </bpws:sequence>
                                    </bpws:catchAll>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence5">
                                    <bpws:extensionActivity>

                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationInvocationFailed" from="$TransactionActivityXML" name="TAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationInvocationFailed" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>

                                    <soae-ab:param name="FirstActivity" value="1"/>

                                    <soae-ab:param name="BatchActivity" value="0"/>

                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>

                                    <soae-ab:param name="RecordCount" value="1"/>

                                    <soae-ab:param name="Status" value="'FAIL'"/>

                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>

                                    <soae-ab:param name="Code" value="'ZION_APP_2028'"/>

                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2028']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>

                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>

                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationInvocationFailed}" keepSrcElementName="false" name="UpdateTAAsyncResponseTxSuccess_CreateEventFailed_FailureNotificationInvocationFailed" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                    </bpws:scope>
                                    </bpws:sequence>
                                </bpws:catchAll>
                            </bpws:faultHandlers>
                            <bpws:sequence name="Sequence114">
                                <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_AsyncResponseTxSuccess_CreateEventFailed_NotifyFailure" from="$XMLforLoadingConfigs" name="XSLTransformation_AsyncResponseTxSuccess_CreateEventFailed_NotifyFailure" stylesheet="FailureNotification.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="RequestUUID" value="$TransactionUUID"/>
                                    <soae-ab:param name="TransactionID" value="soae-xf:get-transaction-id()"/>
                                    <soae-ab:param name="CertificateNumber" value="''"/>
                                    <soae-ab:param name="PolicyStatusType" value="''"/>
                                    <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="ApplicationName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ApplicationName"/>
                                    <soae-ab:param name="ExceptionCode" value="'ZION_APP_2026'"/>
                                    <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusName"/>
                                    <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:StatusDescription"/>
                                    <soae-ab:param name="Loglevel" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:LogLevel"/>
                                    <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:Severity"/>
                                    <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:Priority"/>
                                    <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess-',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="ProviderName" value="$VendorID"/>
                                    <soae-ab:param name="ResponseName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseName"/>
                                    <soae-ab:param name="ResponseCondition" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseCondition"/>
                                    <soae-ab:param name="ResponseCode" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseCode"/>
                                    <soae-ab:param name="ResponseDescription" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_2026']/ns5:ResponseDescription"/>
                                    <soae-ab:param name="IncomingFileName" value="$FileName"/>
                                    <soae-ab:param name="KnowledgeBase" value="$KnowledgeBase"/>
                                    <soae-ab:param name="Environment" value="$EnvironmentName"/>
                                    <soae-ab:param name="OperationName" value="$OperationType"/>
                                    <soae-ab:param name="CaseNodeServerName" value="soae-xf:get-node-name()"/>
                                    <soae-ab:param name="CasePolicy" value="''"/>
                                    <soae-ab:param name="CaseStatistics" value="''"/>
                                    <soae-ab:param name="AccountIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifier" value="''"/>
                                    <soae-ab:param name="LoanIdentifierType" value="''"/>
                                    <soae-ab:param name="LoanStateDatetime" value="''"/>
                                    <soae-ab:param name="LoanStateType" value="''"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                </bpws:extensionActivity>
                                <bpws:extensionActivity>
                                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure" partnerLink="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                                    <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_AsyncResponseTxSuccess_CreateEventFailed_NotifyFailure}"/>
                                    <soae-ab:outboundPolicies/>
                                    <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                                    <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/FailureNotificationProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                                    <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailureInput" inputMsgPart="body" operation="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailureOperation" outputMsg="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailureOutput" outputMsgPart="body" port="AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailurePort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure}AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailureService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_CreateEventFailed_InvokeNotifyFailure.wsdl"/>
                                    <soae-ab:inboundPolicies/>
                                    </soae-ab:InvokeBuilder>
                                </bpws:extensionActivity>
                                <bpws:scope name="ScopeTAAsyncResponseTxSuccess_CreateEventFailed_NotifyFailureSuccess">
                                    <bpws:faultHandlers>
                                    <bpws:catch faultName="bpws:subLanguageExecutionFault">
                                    <bpws:sequence>
                                    <bpws:empty name="EmptyTAAsyncResponseTxSuccess_CreateEventFailed_NotifyFailureSuccess"/>
                                    </bpws:sequence>
                                    </bpws:catch>
                                    </bpws:faultHandlers>
                                    <bpws:sequence name="Sequence142">
                                    <bpws:extensionActivity>
                                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseTxSuccess_CreateEventFailed_NotifyFailureSuccess" from="$TransactionActivityXML" name="TAAsyncResponseTxSuccess_CreateEventFailed_NotifyFailureSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                    <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1055'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1055']/ns5:StatusDescription,' - ',$EventFailureAdditionalInfo)"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                    </soae-ab:params>
                                    </soae-ab:XSLTransform>
                                    </bpws:extensionActivity>
                                    <bpws:extensionActivity>
                                    <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncResponseTxSuccess_CreateEventFailed_NotifyFailureSuccess}" keepSrcElementName="false" name="UpdateTAAsyncResponseTxSuccess_CreateEventFailed_NotifyFailureSuccess" xDestination="$TransactionActivityXML"/>
                                    </bpws:extensionActivity>
                                    </bpws:sequence>
                                </bpws:scope>
                            </bpws:sequence>
                        </bpws:scope>
                    </bpws:sequence>
                </bpws:catchAll>
            </bpws:faultHandlers>
            <bpws:sequence name="Sequence289">
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'AsyncResponseTransactionSuccess_CreateEventTransformationFailed'}" keepSrcElementName="false" name="AsyncResponseTxSuccess_CreateEventTransformationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="XSLTransformation_AsyncResponseTxScuccess_CreateEvent" from="$XMLforLoadingConfigs" name="XSLTransformation_AsyncResponseTxScuccess_CreateEvent" stylesheet="SysLogEvent.xsl" stylesheetType="URL">
                        <soae-ab:params>
                            <soae-ab:param name="DtTimeStamp" value="soae-xf:get-time()"/>
                            <soae-ab:param name="NodeName" value="soae-xf:get-node-name()"/>
                            <soae-ab:param name="ComponentName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1076']/ns5:ApplicationName"/>
                            <soae-ab:param name="StructuredMessage" value="''"/>
                            <soae-ab:param name="TransactionUUID" value="$TransactionUUID"/>
                            <soae-ab:param name="ExceptionCode" value="'ZION_APP_1076'"/>
                            <soae-ab:param name="Priority" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1076']/ns5:Priority"/>
                            <soae-ab:param name="ExceptionName" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1076']/ns5:StatusName"/>
                            <soae-ab:param name="Description" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1076']/ns5:StatusDescription"/>
                            <soae-ab:param name="AdditionalInfo" value="concat('OriginationAsynchronousPostBackProcess- ', $StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1076']/ns5:AdditionalInfo)"/>
                            <soae-ab:param name="Severity" value="$StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1076']/ns5:Severity"/>
                        </soae-ab:params>
                    </soae-ab:XSLTransform>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:AssignBuilder destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="EventFailureAdditionalInfo" expression="xpath:{'AsyncResponseTransactionSuccess_CreateEventInvocationFailed'}" keepSrcElementName="false" name="AsyncResponseTxSuccess_CreateEventInvocationFailed" xDestination="$EventFailureAdditionalInfo"/>
                </bpws:extensionActivity>
                <bpws:extensionActivity>
                    <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" cacheKey="xpath:{}" compression="identity" destinationType="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/Invoke}InvokeOutput" destinationTypeKind="MESSAGE" destinationVariable="AsyncResponseTxSuccess_InvokeCreateEventComponent" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="" endpointConfigurationType="Configured" imaKey="AsyncResponseTxSuccess_InvokeCreateEventComponent_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="AsyncResponseTxSuccess_InvokeCreateEventComponent" partnerLink="AsyncResponseTxSuccess_InvokeCreateEventComponent" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="false" xmlResponse="false">
                        <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$XSLTransformation_AsyncResponseTxScuccess_CreateEvent}"/>
                        <soae-ab:outboundPolicies/>
                        <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:outputData binary="false" oneway="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                        <soae-ab:httpTransport establishWebsocketConnection="false" isCacheKey="false" isStreaming="false" method="POST" serviceURI="https://127.0.0.1:9000/CreateEventProcess" soapAction="http://Invoke" translateErrorResponseIntoWorkflowFault="true"/>
                        <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="AsyncResponseTxSuccess_InvokeCreateEventComponentInput" inputMsgPart="body" operation="AsyncResponseTxSuccess_InvokeCreateEventComponentOperation" outputMsg="AsyncResponseTxSuccess_InvokeCreateEventComponentOutput" outputMsgPart="body" port="AsyncResponseTxSuccess_InvokeCreateEventComponentPort" service="{http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_InvokeCreateEventComponent}AsyncResponseTxSuccess_InvokeCreateEventComponentService" soapVersion="1.1" tns="http://www.example.com/Origination/http/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_InvokeCreateEventComponent" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/AsyncResponseTxSuccess_InvokeCreateEventComponent.wsdl"/>
                        <soae-ab:inboundPolicies/>
                    </soae-ab:InvokeBuilder>
                </bpws:extensionActivity>
                <bpws:scope name="ScopeTAAsyncResponseTxSuccess_CreateEventSuccess">
                    <bpws:faultHandlers>
                        <bpws:catch faultName="bpws:subLanguageExecutionFault">
                            <bpws:sequence>
                                <bpws:empty name="EmptyTAAsyncTransactionCompletedSuccessFailure"/>
                            </bpws:sequence>
                        </bpws:catch>
                    </bpws:faultHandlers>
                    <bpws:sequence name="Sequence142">
                        <bpws:extensionActivity>
                            <soae-ab:XSLTransform destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="TAAsyncResponseTxSuccess_CreateEventSuccess" from="$TransactionActivityXML" name="TAAsyncResponseTxSuccess_CreateEventSuccess" stylesheet="CreateActivityNode.xsl" stylesheetType="URL">
                                <soae-ab:params>
                                    <soae-ab:param name="FirstActivity" value="1"/>
                                    <soae-ab:param name="BatchActivity" value="0"/>
                                    <soae-ab:param name="MessageIdentifier" value="$TransactionUUID"/>
                                    <soae-ab:param name="RecordCount" value="1"/>
                                    <soae-ab:param name="Status" value="'SUCCESS'"/>
                                    <soae-ab:param name="DateTime" value="soae-xf:get-time()"/>
                                    <soae-ab:param name="Code" value="'ZION_APP_1052'"/>
                                    <soae-ab:param name="Description" value="concat($StatusCodeConfig/ns5:STATUS[ns5:StatusCode/text()='ZION_APP_1052']/ns5:StatusDescription,' - AsyncResponseTransactionSuccess')"/>
                                    <soae-ab:param name="MessageID" value="'NA'"/>
                                </soae-ab:params>
                            </soae-ab:XSLTransform>
                        </bpws:extensionActivity>
                        <bpws:extensionActivity>
                            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{$TAAsyncTransactionCompletedSuccess}" keepSrcElementName="false" name="UpdateTAAsyncTransactionCompletedSuccess" xDestination="$TransactionActivityXML"/>
                        </bpws:extensionActivity>
                    </bpws:sequence>
                </bpws:scope>
            </bpws:sequence>
        </bpws:scope>
        <bpws:extensionActivity>
            <soae-ab:AssignBuilder destinationType="{http://www.radian.biz/ClientConnectivity/zion/TransactionActivity}TRANSACTIONACTIVITY" destinationTypeKind="ELEMENT" destinationVariable="TransactionActivityXML" expression="xpath:{soae-xf:calculate-time-delta($StartTime,soae-xf:get-time())}" keepSrcElementName="false" name="UpdateTAtotalTime" xDestination="$TransactionActivityXML/ns3:HEADER/ns3:TotalTransTimeInSecs"/>
        </bpws:extensionActivity>
        <bpws:if name="If_Write_TALog_Happypath">
            <bpws:condition>translate($AppConfig/ns4:WriteTALogsEnabled,'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')='TRUE'</bpws:condition>
            <bpws:scope name="ScopeWriteAsyncTransactionTAlog">
                <bpws:faultHandlers>
                    <bpws:catch faultName="soae-bpel:invocationAgentFailure">
                        <bpws:sequence>
                            <bpws:extensionActivity>
                                <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="AsyncTransactionTALog_ZIONLog" logLevel="verbose" name="AsyncTransactionTALog_ZIONLog" nodeName="false" optionalData="" transactionID="false">
                                    <soae-ab:comment>Async transaction success TA log writing failed.</soae-ab:comment>
                                </soae-ab:TransactionLog>
                            </bpws:extensionActivity>
                        </bpws:sequence>
                    </bpws:catch>
                </bpws:faultHandlers>
                <bpws:sequence name="Sequence143">
                    <bpws:extensionActivity>
                        <soae-ab:InvokeBuilder CAPath="" addAttachments="false" allowCrossAppInvocation="false" allowDynamicInterappInvocation="false" allowLocalInvocation="false" bindingType="Plain" compression="identity" destinationType="{http://www.w3.org/2001/XMLSchema}anyType" destinationTypeKind="TYPE" destinationVariable="WriteAsyncTransactionTALog" disableSSL="false" dontExtractMsgToVar="false" dynamicAddress="concat('file://',$AppConfig/ns4:TransactionActivityPath/text(),soae-xf:get-node-name(),'_Origination_',$TransactionUUID,'_',exslt:format-date(&quot;now-local&quot;, &quot;ddMMyyyy&quot;),'-',exslt:format-date(&quot;now-local&quot;, &quot;HHmmssSSS&quot;),'.xml')" endpointConfigurationType="Configured" imaKey="WriteAsyncTransactionTALog_IMA_Key" inboundPoliciesGroup="" keyPair="" messageBodyFrom="" multipartInboundData="false" multipartOutboundData="false" name="WriteAsyncTransactionTALog" partnerLink="WriteAsyncTransactionTALog" passThroughEnabled="false" policy="" rawEnvelopeFrom="" receiveRawEnvelope="false" sendRawEnvelope="false" throwFault="false" timeout="" trustedCAGroup="" useDynamicAddress="true" xmlResponse="false">
                            <soae-ab:outputDataMapping mode="Xpath" partName="" xpath="xpath:{$TransactionActivityXML}"/>
                            <soae-ab:outboundPolicies/>
                            <soae-ab:inputData binary="false" empty="false" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                            <soae-ab:outputData binary="false" oneway="true" xsdType="{http://www.w3.org/2001/XMLSchema}anyType"/>
                            <soae-ab:fileTransport serviceURI="file:///opt/apps/zion/transactionlogs/" soapAction=""/>
                            <soae-ab:wsdlEndpointConfig defaultFlags="0" inputMsg="WriteAsyncTransactionTALogInput" inputMsgPart="body" operation="WriteAsyncTransactionTALogOperation" outputMsg="WriteAsyncTransactionTALogOutput" outputMsgPart="body" port="WriteAsyncTransactionTALogPort" service="{http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteAsyncTransactionTALog}WriteAsyncTransactionTALogService" soapVersion="1.1" tns="http://www.example.com/Origination/file/bin/OriginationAsynchronousPostBackProcess/WriteAsyncTransactionTALog" wsdlFileName="/Origination/bin/OriginationAsynchronousPostBackProcess/WriteAsyncTransactionTALog.wsdl"/>
                            <soae-ab:inboundPolicies/>
                        </soae-ab:InvokeBuilder>
                    </bpws:extensionActivity>
                </bpws:sequence>
            </bpws:scope>
        </bpws:if>
        <bpws:extensionActivity>
            <soae-ab:TransactionLog clusterName="false" destinationType="{http://www.w3.org/2001/XMLSchema}boolean" destinationTypeKind="TYPE" destinationVariable="TransactionAsyncComplete_ZIONLog" logLevel="info" name="TransactionAsyncComplete_ZIONLog" nodeName="false" optionalData="$TransactionActivityXML" transactionID="false">
                <soae-ab:comment>Transaction Activity log follows:</soae-ab:comment>
            </soae-ab:TransactionLog>
        </bpws:extensionActivity>
    </bpws:sequence>
</bpws:process>