<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.w3.org/1999/xlink" xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://www.w3.org/1999/xlink">
  <xsd:annotation>
    <xsd:documentation>Generated by Contivo Builder on July 8, 2012 at 11:01:48 AM CDT</xsd:documentation>
    <xsd:documentation>from the xlink package with namespace http://www.w3.org/1999/xlink</xsd:documentation>
  </xsd:annotation>
  <xsd:attribute name="actuate">
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="onLoad"/>
        <xsd:enumeration value="onRequest"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="arcrole" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="from" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="href" type="xsd:anyURI">
    <xsd:annotation>
      <xsd:documentation>anyURI represents a Uniform Resource Identifier Reference (URI). An anyURI value can be absolute or relative, and may have an optional fragment identifier (i.e., it may be a URI Reference). This type should be used to specify the intention that the value fulfills the role of a URI as defined by [RFC 2396], as amended by [RFC 2732].&#13;
&#13;
Lexical representation&#13;
The •lexical space• of anyURI is finite-length character sequences which, when the algorithm defined in Section 5.4 of [XML Linking Language] is applied to them, result in strings which are legal URIs according to [RFC 2396], as amended by [RFC 2732].&#13;
&#13;
Note:  Spaces are, in principle, allowed in the •lexical space• of anyURI, however, their use is highly discouraged (unless they are encoded by %20). &#13;
</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="label" type="xsd:NMTOKEN">
    <xsd:annotation>
      <xsd:documentation>NMTOKEN represents the NMTOKEN attribute type from [XML 1.0 (Second Edition)]. The ·value space· of NMTOKEN is the set of tokens that ·match· the Nmtoken production in [XML 1.0 (Second Edition)]. The ·lexical space· of NMTOKEN is the set of strings that ·match· the Nmtoken production in [XML 1.0 (Second Edition)]. The ·base type· of NMTOKEN is token. &#13;
&#13;
For compatibility (see Terminology (§1.4)) NMTOKEN should be used only on attributes. &#13;
&#13;
An Nmtoken (name token) is any mixture of name characters.&#13;
&#13;
Names and Tokens&#13;
[4]     NameChar    ::=     Letter | Digit | '.' | '-' | '_' | ':' | CombiningChar | Extender </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="role" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="show">
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="new"/>
        <xsd:enumeration value="replace"/>
        <xsd:enumeration value="embed"/>
        <xsd:enumeration value="other"/>
        <xsd:enumeration value="none"/>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:attribute>
  <xsd:attribute name="title" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="to" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:simpleType name="ArcroleBase">
    <xsd:restriction base="xsd:anyURI">
      <xsd:enumeration value="urn:fdc:mismo.org:2009:residential/LDD_3_2_0#LOAN_IsAssociatedWith_ROLE"/>
      <xsd:enumeration value="urn:fdc:mismo.org:2009:residential/mismo_3_2_0_0#DATA_SOURCE_IsAssociatedWith_GrossLivingAreaSquareFeetNumber"/>
      <xsd:enumeration value="urn:fdc:mismo.org:2009:residential/mismo_3_2_0_0#DATA_SOURCE_IsAssociatedWith_SALES_CONCESSION"/>
      <xsd:enumeration value="urn:fdc:mismo.org:2009:residential/mismo_3_2_0_0#DATA_SOURCE_IsAssociatedWith_SALES_CONTRACT_DETAIL"/>
      <xsd:enumeration value="urn:fdc:mismo.org:2009:residential/mismo_3_2_0_0#DATA_SOURCE_IsAssociatedWith_STRUCTURE_ANALYSIS_DETAIL"/>
      <xsd:enumeration value="urn:fdc:mismo.org:2009:residential/mismo_3_2_0_0#ROLE_IsSupervisedBy_ROLE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="ArcroleEnum">
    <xsd:union memberTypes="ArcroleFcts_Base ArcroleBase"/>
  </xsd:simpleType>
  <xsd:simpleType name="ArcroleFcts_Base">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="urn:fdc:mismo.org:2009:residential/LDD_3_2_([1-9][0-9]*)#[A-Za-z0-9_]{1,80}"/>
      <xsd:pattern value="urn:fdc:mismo.org:2009:residential/[A-Za-z0-9\-]+(\.[A-Za-z0-9\-]+)+#[A-Za-z0-9_]{1,80}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="fileLinkEnum">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="resource"/>
      <xsd:enumeration value="locator"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:attributeGroup name="arcLink">
    <xsd:attribute ref="title"/>
    <xsd:attribute ref="show"/>
    <xsd:attribute ref="actuate"/>
    <xsd:attribute ref="from"/>
    <xsd:attribute ref="to"/>
    <xsd:attribute name="arcrole" type="ArcroleEnum"/>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="emptyLink">
    <xsd:attribute fixed="none" name="type" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="extendedLink">
    <xsd:attribute fixed="extended" name="type" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ref="role"/>
    <xsd:attribute ref="title"/>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="fileLink">
    <xsd:annotation>
      <xsd:documentation>An xlink attribute group for defining the end point of a relationship.</xsd:documentation>
      <xsd:documentation>term: Resource Endpoint</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="type" type="fileLinkEnum"/>
    <xsd:attribute ref="role"/>
    <xsd:attribute ref="title"/>
    <xsd:attribute ref="label"/>
    <xsd:attribute ref="href"/>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="locatorLink">
    <xsd:attribute fixed="locator" name="type" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ref="href"/>
    <xsd:attribute ref="role"/>
    <xsd:attribute ref="title"/>
    <xsd:attribute ref="label"/>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="resourceLink">
    <xsd:annotation>
      <xsd:documentation>An xlink attribute group for defining the end point of a relationship.</xsd:documentation>
      <xsd:documentation>term: Resource Endpoint</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute ref="label"/>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="simpleLink">
    <xsd:attribute fixed="simple" name="type" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute ref="href"/>
    <xsd:attribute ref="role"/>
    <xsd:attribute ref="arcrole"/>
    <xsd:attribute ref="title"/>
    <xsd:attribute ref="show"/>
    <xsd:attribute ref="actuate"/>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="titleLink">
    <xsd:attribute fixed="title" name="type" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>The string datatype represents character strings in XML. The ·value space· of string is the set of finite-length sequences of characters (as defined in [XML 1.0 (Second Edition)]) that ·match· the Char production from [XML 1.0 (Second Edition)]. A character is an atomic unit of communication; it is not further specified except to note that every character has a corresponding Universal Character Set code point, which is an integer. &#13;
&#13;
Note:  Many human languages have writing systems that require child elements for control of aspects such as bidirectional formating or ruby annotation (see [Ruby] and Section 8.2.4 Overriding the bidirectional algorithm: the BDO element of [HTML 4.01]). Thus, string, as a simple type that can contain only characters but not child elements, is often not suitable for representing text. In such situations, a complex type that allows mixed content should be considered. For more information, see Section 5.5 Any Element, Any Attribute of [XML Schema Language: Part 0 Primer]. &#13;
&#13;
Note:  As noted in ordered, the fact that this specification does not specify an ·order-relation· for ·string· does not preclude other applications from treating strings as being ordered. &#13;
&#13;
2]    Char    ::=    #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]  /* any Unicode character, excluding the surrogate blocks, FFFE, and FFFF. */ </xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
</xsd:schema>
